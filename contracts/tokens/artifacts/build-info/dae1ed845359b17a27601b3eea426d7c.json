{
	"id": "dae1ed845359b17a27601b3eea426d7c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.17",
	"solcLongVersion": "0.4.17+commit.bdeb9e52",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokens/Tether.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2017-11-28\r\n*/\r\n\r\npragma solidity ^0.4.17;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }   \r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    /**\r\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n      * account.\r\n      */\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n      * @dev Throws if called by any account other than the owner.\r\n      */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20Basic {\r\n    uint public _totalSupply;\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address who) public constant returns (uint);\r\n    function transfer(address to, uint value) public;\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) public constant returns (uint);\r\n    function transferFrom(address from, address to, uint value) public;\r\n    function approve(address spender, uint value) public;\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances.\r\n */\r\ncontract BasicToken is Ownable, ERC20Basic {\r\n    using SafeMath for uint;\r\n\r\n    mapping(address => uint) public balances;\r\n\r\n    // additional variables for use if transaction fees ever became necessary\r\n    uint public basisPointsRate = 0;\r\n    uint public maximumFee = 0;\r\n\r\n    /**\r\n    * @dev Fix for the ERC20 short address attack.\r\n    */\r\n    modifier onlyPayloadSize(uint size) {\r\n        require(!(msg.data.length < size + 4));\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev transfer token for a specified address\r\n    * @param _to The address to transfer to.\r\n    * @param _value The amount to be transferred.\r\n    */\r\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\r\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\r\n        if (fee > maximumFee) {\r\n            fee = maximumFee;\r\n        }\r\n        uint sendAmount = _value.sub(fee);\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(sendAmount);\r\n        if (fee > 0) {\r\n            balances[owner] = balances[owner].add(fee);\r\n            Transfer(msg.sender, owner, fee);\r\n        }\r\n        Transfer(msg.sender, _to, sendAmount);\r\n    }\r\n\r\n    /**\r\n    * @dev Gets the balance of the specified address.\r\n    * @param _owner The address to query the the balance of.\r\n    * @return An uint representing the amount owned by the passed address.\r\n    */\r\n    function balanceOf(address _owner) public constant returns (uint balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implementation of the basic standard token.\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\ncontract StandardToken is BasicToken, ERC20 {\r\n\r\n    mapping (address => mapping (address => uint)) public allowed;\r\n\r\n    uint public constant MAX_UINT = 2**256 - 1;\r\n\r\n    /**\r\n    * @dev Transfer tokens from one address to another\r\n    * @param _from address The address which you want to send tokens from\r\n    * @param _to address The address which you want to transfer to\r\n    * @param _value uint the amount of tokens to be transferred\r\n    */\r\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\r\n        var _allowance = allowed[_from][msg.sender];\r\n\r\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\r\n        // if (_value > _allowance) throw;\r\n\r\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\r\n        if (fee > maximumFee) {\r\n            fee = maximumFee;\r\n        }\r\n        if (_allowance < MAX_UINT) {\r\n            allowed[_from][msg.sender] = _allowance.sub(_value);\r\n        }\r\n        uint sendAmount = _value.sub(fee);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(sendAmount);\r\n        if (fee > 0) {\r\n            balances[owner] = balances[owner].add(fee);\r\n            Transfer(_from, owner, fee);\r\n        }\r\n        Transfer(_from, _to, sendAmount);\r\n    }\r\n\r\n    /**\r\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n    * @param _spender The address which will spend the funds.\r\n    * @param _value The amount of tokens to be spent.\r\n    */\r\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r\n\r\n        // To change the approve amount you first have to reduce the addresses`\r\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n        //  already 0 to mitigate the race condition described here:\r\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n    }\r\n\r\n    /**\r\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\r\n    * @param _owner address The address which owns the funds.\r\n    * @param _spender address The address which will spend the funds.\r\n    * @return A uint specifying the amount of tokens still available for the spender.\r\n    */\r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n    Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n    Unpause();\r\n  }\r\n}\r\n\r\ncontract BlackList is Ownable, BasicToken {\r\n\r\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\r\n    function getBlackListStatus(address _maker) external constant returns (bool) {\r\n        return isBlackListed[_maker];\r\n    }\r\n\r\n    function getOwner() external constant returns (address) {\r\n        return owner;\r\n    }\r\n\r\n    mapping (address => bool) public isBlackListed;\r\n    \r\n    function addBlackList (address _evilUser) public onlyOwner {\r\n        isBlackListed[_evilUser] = true;\r\n        AddedBlackList(_evilUser);\r\n    }\r\n\r\n    function removeBlackList (address _clearedUser) public onlyOwner {\r\n        isBlackListed[_clearedUser] = false;\r\n        RemovedBlackList(_clearedUser);\r\n    }\r\n\r\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r\n        require(isBlackListed[_blackListedUser]);\r\n        uint dirtyFunds = balanceOf(_blackListedUser);\r\n        balances[_blackListedUser] = 0;\r\n        _totalSupply -= dirtyFunds;\r\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\r\n    }\r\n\r\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\r\n\r\n    event AddedBlackList(address _user);\r\n\r\n    event RemovedBlackList(address _user);\r\n\r\n}\r\n\r\ncontract UpgradedStandardToken is StandardToken{\r\n    // those methods are called by the legacy contract\r\n    // and they must ensure msg.sender to be the contract address\r\n    function transferByLegacy(address from, address to, uint value) public;\r\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\r\n    function approveByLegacy(address from, address spender, uint value) public;\r\n}\r\n\r\ncontract TetherToken is Pausable, StandardToken, BlackList {\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint public decimals;\r\n    address public upgradedAddress;\r\n    bool public deprecated;\r\n\r\n    //  The contract can be initialized with a number of tokens\r\n    //  All the tokens are deposited to the owner address\r\n    //\r\n    // @param _balance Initial supply of the contract\r\n    // @param _name Token Name\r\n    // @param _symbol Token symbol\r\n    // @param _decimals Token decimals\r\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\r\n        _totalSupply = _initialSupply;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        balances[owner] = _initialSupply;\r\n        deprecated = false;\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function transfer(address _to, uint _value) public whenNotPaused {\r\n        require(!isBlackListed[msg.sender]);\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\r\n        } else {\r\n            return super.transfer(_to, _value);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\r\n        require(!isBlackListed[_from]);\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\r\n        } else {\r\n            return super.transferFrom(_from, _to, _value);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function balanceOf(address who) public constant returns (uint) {\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\r\n        } else {\r\n            return super.balanceOf(who);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\r\n        } else {\r\n            return super.approve(_spender, _value);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n        if (deprecated) {\r\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\r\n        } else {\r\n            return super.allowance(_owner, _spender);\r\n        }\r\n    }\r\n\r\n    // deprecate current contract in favour of a new one\r\n    function deprecate(address _upgradedAddress) public onlyOwner {\r\n        deprecated = true;\r\n        upgradedAddress = _upgradedAddress;\r\n        Deprecate(_upgradedAddress);\r\n    }\r\n\r\n    // deprecate current contract if favour of a new one\r\n    function totalSupply() public constant returns (uint) {\r\n        if (deprecated) {\r\n            return StandardToken(upgradedAddress).totalSupply();\r\n        } else {\r\n            return _totalSupply;\r\n        }\r\n    }\r\n\r\n    // Issue a new amount of tokens\r\n    // these tokens are deposited into the owner address\r\n    //\r\n    // @param _amount Number of tokens to be issued\r\n    function issue(uint amount) public onlyOwner {\r\n        require(_totalSupply + amount > _totalSupply);\r\n        require(balances[owner] + amount > balances[owner]);\r\n\r\n        balances[owner] += amount;\r\n        _totalSupply += amount;\r\n        Issue(amount);\r\n    }\r\n\r\n    // Redeem tokens.\r\n    // These tokens are withdrawn from the owner address\r\n    // if the balance must be enough to cover the redeem\r\n    // or the call will fail.\r\n    // @param _amount Number of tokens to be issued\r\n    function redeem(uint amount) public onlyOwner {\r\n        require(_totalSupply >= amount);\r\n        require(balances[owner] >= amount);\r\n\r\n        _totalSupply -= amount;\r\n        balances[owner] -= amount;\r\n        Redeem(amount);\r\n    }\r\n\r\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\r\n        require(newBasisPoints < 20);\r\n        require(newMaxFee < 50);\r\n\r\n        basisPointsRate = newBasisPoints;\r\n        maximumFee = newMaxFee.mul(10**decimals);\r\n\r\n        Params(basisPointsRate, maximumFee);\r\n    }\r\n\r\n    // Called when new token are issued\r\n    event Issue(uint amount);\r\n\r\n    // Called when tokens are redeemed\r\n    event Redeem(uint amount);\r\n\r\n    // Called when contract is deprecated\r\n    event Deprecate(address newAddress);\r\n\r\n    // Called if contract ever adds fees\r\n    event Params(uint feeBasisPoints, uint maxFee);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/tokens/Tether.sol": {
				"BasicToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint representing the amount owned by the passed address.\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						},
						"title": "Basic token\r"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"BlackList": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint representing the amount owned by the passed address.\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"addBlackList(address)": "0ecb93c0",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"removeBlackList(address)": "e4997dc5",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\r"
							}
						}
					}
				},
				"ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20 interface\r"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"ERC20Basic": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20Basic\r"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						},
						"title": "Ownable\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/Tether.sol\":1212:1964  contract Ownable {\r... */\n  mstore(0x40, 0x60)\n    /* \"contracts/tokens/Tether.sol\":1396:1459  function Ownable() public {\r... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/tokens/Tether.sol\":1441:1451  msg.sender */\n  caller\n    /* \"contracts/tokens/Tether.sol\":1433:1438  owner */\n  0x0\n  dup1\n    /* \"contracts/tokens/Tether.sol\":1433:1451  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokens/Tether.sol\":1212:1964  contract Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/Tether.sol\":1212:1964  contract Ownable {\r... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_3\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/tokens/Tether.sol\":1236:1256  address public owner */\n    tag_2:\n      jumpi(tag_4, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_4:\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":1808:1959  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_3:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/tokens/Tether.sol\":1236:1256  address public owner */\n    tag_6:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":1808:1959  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_9:\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_11\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_11:\n        /* \"contracts/tokens/Tether.sol\":1905:1906  0 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":1885:1907  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1885:1893  newOwner */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":1885:1907  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/tokens/Tether.sol\":1881:1952  if (newOwner != address(0)) {\r... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":1932:1940  newOwner */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":1924:1929  owner */\n      0x0\n      dup1\n        /* \"contracts/tokens/Tether.sol\":1924:1940  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":1881:1952  if (newOwner != address(0)) {\r... */\n    tag_13:\n        /* \"contracts/tokens/Tether.sol\":1808:1959  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058208aa1c4bd2bcd347d109e80e2eea545e0f3a6854675ebde46b4826a3e6c2f7c5c0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101fc8061005e6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610048578063f2fde38b1461009d57600080fd5b341561005357600080fd5b61005b6100d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a857600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fb565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101cd57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a723058208aa1c4bd2bcd347d109e80e2eea545e0f3a6854675ebde46b4826a3e6c2f7c5c0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1FC DUP1 PUSH2 0x5E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP11 LOG1 0xc4 0xbd 0x2b 0xcd CALLVALUE PUSH30 0x109E80E2EEA545E0F3A6854675EBDE46B4826A3E6C2F7C5C002900000000 ",
							"sourceMap": "1212:752:0:-;;;1396:63;;;;;;;;1441:10;1433:5;;:18;;;;;;;;;;;;;;;;;;1212:752;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610048578063f2fde38b1461009d57600080fd5b341561005357600080fd5b61005b6100d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a857600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fb565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101cd57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a723058208aa1c4bd2bcd347d109e80e2eea545e0f3a6854675ebde46b4826a3e6c2f7c5c0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP11 LOG1 0xc4 0xbd 0x2b 0xcd CALLVALUE PUSH30 0x109E80E2EEA545E0F3A6854675EBDE46B4826A3E6C2F7C5C002900000000 ",
							"sourceMap": "1212:752:0:-;;;;;;;;;;;;;;;;;;;;;;;1236:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;1236:20;;;;;;;;;;;;;:::o;1808:151::-;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;1905:1;1885:22;;:8;:22;;;;1881:71;;;1932:8;1924:5;;:16;;;;;;;;;;;;;;;;;;1881:71;1808:151;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "101600",
								"executionCost": "20408",
								"totalCost": "122008"
							},
							"external": {
								"owner()": "413",
								"transferOwnership(address)": "20755"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1212,
									"end": 1964,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1212,
									"end": 1964,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1212,
									"end": 1964,
									"name": "MSTORE"
								},
								{
									"begin": 1396,
									"end": 1459,
									"name": "CALLVALUE"
								},
								{
									"begin": 1396,
									"end": 1459,
									"name": "ISZERO"
								},
								{
									"begin": 1396,
									"end": 1459,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 1396,
									"end": 1459,
									"name": "JUMPI"
								},
								{
									"begin": 1396,
									"end": 1459,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1396,
									"end": 1459,
									"name": "DUP1"
								},
								{
									"begin": 1396,
									"end": 1459,
									"name": "REVERT"
								},
								{
									"begin": 1396,
									"end": 1459,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 1396,
									"end": 1459,
									"name": "JUMPDEST"
								},
								{
									"begin": 1441,
									"end": 1451,
									"name": "CALLER"
								},
								{
									"begin": 1433,
									"end": 1438,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1433,
									"end": 1438,
									"name": "DUP1"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "EXP"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "DUP2"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "SLOAD"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "DUP2"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "MUL"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "NOT"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "AND"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "SWAP1"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "DUP4"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "AND"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "MUL"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "OR"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "SWAP1"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "SSTORE"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "POP"
								},
								{
									"begin": 1212,
									"end": 1964,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1212,
									"end": 1964,
									"name": "DUP1"
								},
								{
									"begin": 1212,
									"end": 1964,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1212,
									"end": 1964,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 1964,
									"name": "CODECOPY"
								},
								{
									"begin": 1212,
									"end": 1964,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 1964,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058208aa1c4bd2bcd347d109e80e2eea545e0f3a6854675ebde46b4826a3e6c2f7c5c0029",
									".code": [
										{
											"begin": 1212,
											"end": 1964,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "MSTORE"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "SWAP1"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "DIV"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "AND"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "EQ"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "JUMPI"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "EQ"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "JUMPI"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1964,
											"name": "REVERT"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPDEST"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "CALLVALUE"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "ISZERO"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPI"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "REVERT"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPDEST"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPDEST"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "MLOAD"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP3"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "AND"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "AND"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP2"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "MSTORE"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "ADD"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP2"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "POP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "POP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "MLOAD"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP2"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SUB"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "RETURN"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "CALLVALUE"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "ISZERO"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPI"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "REVERT"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "ADD"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "SWAP2"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "POP"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "POP"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMP"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "STOP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPDEST"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SLOAD"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "EXP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DIV"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "AND"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP2"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 1905,
											"end": 1906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "AND"
										},
										{
											"begin": 1885,
											"end": 1893,
											"name": "DUP2"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "AND"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "EQ"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "ISZERO"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "JUMPI"
										},
										{
											"begin": 1932,
											"end": 1940,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "EXP"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SLOAD"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "MUL"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "NOT"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "AND"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "DUP4"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "AND"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "MUL"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "OR"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SSTORE"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "POP"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "POP"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}}},\"title\":\"Ownable\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/Tether.sol\":\"Ownable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/Tether.sol\":{\"keccak256\":\"0x6b252bc962a16fa94f52d1b11c13769ee80a7542f4336b3021806a28f2d71c09\",\"urls\":[\"bzzr://1c2978e2cd781eaf07b101b387c36df7b146ee1948bd415e19bbf36344aef4aa\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Pausable": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state\r"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state\r"
							}
						},
						"title": "Pausable\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/Tether.sol\":7544:8327  contract Pausable is Ownable {\r... */\n  mstore(0x40, 0x60)\n    /* \"contracts/tokens/Tether.sol\":7639:7644  false */\n  0x0\n    /* \"contracts/tokens/Tether.sol\":7618:7644  bool public paused = false */\n  dup1\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokens/Tether.sol\":1441:1451  msg.sender */\n  caller\n    /* \"contracts/tokens/Tether.sol\":1433:1438  owner */\n  0x0\n  dup1\n    /* \"contracts/tokens/Tether.sol\":1433:1451  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokens/Tether.sol\":7544:8327  contract Pausable is Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/Tether.sol\":7544:8327  contract Pausable is Ownable {\r... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x3f4ba83a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/tokens/Tether.sol\":8234:8324  function unpause() onlyOwner whenPaused public {\r... */\n    tag_2:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/tokens/Tether.sol\":7618:7644  bool public paused = false */\n    tag_3:\n      jumpi(tag_10, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_10:\n      tag_11\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":8059:8147  function pause() onlyOwner whenNotPaused public {\r... */\n    tag_4:\n      jumpi(tag_13, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_13:\n      tag_14\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"contracts/tokens/Tether.sol\":1236:1256  address public owner */\n    tag_5:\n      jumpi(tag_16, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_16:\n      tag_17\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":1808:1959  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_6:\n      jumpi(tag_19, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_19:\n      tag_20\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      stop\n        /* \"contracts/tokens/Tether.sol\":8234:8324  function unpause() onlyOwner whenPaused public {\r... */\n    tag_9:\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_23\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/tokens/Tether.sol\":7954:7960  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":7946:7961  require(paused) */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_25:\n        /* \"contracts/tokens/Tether.sol\":8297:8302  false */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":8288:8294  paused */\n      dup1\n      0x14\n        /* \"contracts/tokens/Tether.sol\":8288:8302  paused = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":8309:8318  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/tokens/Tether.sol\":8234:8324  function unpause() onlyOwner whenPaused public {\r... */\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":7618:7644  bool public paused = false */\n    tag_12:\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":8059:8147  function pause() onlyOwner whenNotPaused public {\r... */\n    tag_15:\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_28\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_28:\n        /* \"contracts/tokens/Tether.sol\":7794:7800  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":7793:7800  !paused */\n      iszero\n        /* \"contracts/tokens/Tether.sol\":7785:7801  require(!paused) */\n      iszero\n      iszero\n      tag_30\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_30:\n        /* \"contracts/tokens/Tether.sol\":8123:8127  true */\n      0x1\n        /* \"contracts/tokens/Tether.sol\":8114:8120  paused */\n      0x0\n      0x14\n        /* \"contracts/tokens/Tether.sol\":8114:8127  paused = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":8134:8141  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/tokens/Tether.sol\":8059:8147  function pause() onlyOwner whenNotPaused public {\r... */\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":1236:1256  address public owner */\n    tag_18:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":1808:1959  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_21:\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_33\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_33:\n        /* \"contracts/tokens/Tether.sol\":1905:1906  0 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":1885:1907  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1885:1893  newOwner */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":1885:1907  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/tokens/Tether.sol\":1881:1952  if (newOwner != address(0)) {\r... */\n      iszero\n      tag_35\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":1932:1940  newOwner */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":1924:1929  owner */\n      0x0\n      dup1\n        /* \"contracts/tokens/Tether.sol\":1924:1940  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":1881:1952  if (newOwner != address(0)) {\r... */\n    tag_35:\n        /* \"contracts/tokens/Tether.sol\":1808:1959  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058201054c86abddd5ddb2d0990ef9aeb18bbdab05fc783bc43cdfad941bd38e9f5a50029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "606060405260008060146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104058061006d6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100695780635c975abb1461007e5780638456cb59146100ab5780638da5cb5b146100c0578063f2fde38b1461011557600080fd5b341561007457600080fd5b61007c61014e565b005b341561008957600080fd5b61009161020c565b604051808215151515815260200191505060405180910390f35b34156100b657600080fd5b6100be61021f565b005b34156100cb57600080fd5b6100d36102df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012057600080fd5b61014c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610304565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a957600080fd5b600060149054906101000a900460ff1615156101c457600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561027a57600080fd5b600060149054906101000a900460ff1615151561029657600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156103d657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a723058201054c86abddd5ddb2d0990ef9aeb18bbdab05fc783bc43cdfad941bd38e9f5a50029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x405 DUP1 PUSH2 0x6D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x304 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 LT SLOAD 0xc8 PUSH11 0xBDDD5DDB2D0990EF9AEB18 0xbb 0xda 0xb0 0x5f 0xc7 DUP4 0xbc NUMBER 0xcd STATICCALL 0xd9 COINBASE 0xbd CODESIZE 0xe9 0xf5 0xa5 STOP 0x29 ",
							"sourceMap": "7544:783:0:-;;;7639:5;7618:26;;;;;;;;;;;;;;;;;;;;1441:10;1433:5;;:18;;;;;;;;;;;;;;;;;;7544:783;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100695780635c975abb1461007e5780638456cb59146100ab5780638da5cb5b146100c0578063f2fde38b1461011557600080fd5b341561007457600080fd5b61007c61014e565b005b341561008957600080fd5b61009161020c565b604051808215151515815260200191505060405180910390f35b34156100b657600080fd5b6100be61021f565b005b34156100cb57600080fd5b6100d36102df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012057600080fd5b61014c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610304565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a957600080fd5b600060149054906101000a900460ff1615156101c457600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561027a57600080fd5b600060149054906101000a900460ff1615151561029657600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156103d657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a723058201054c86abddd5ddb2d0990ef9aeb18bbdab05fc783bc43cdfad941bd38e9f5a50029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x304 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 LT SLOAD 0xc8 PUSH11 0xBDDD5DDB2D0990EF9AEB18 0xbb 0xda 0xb0 0x5f 0xc7 DUP4 0xbc NUMBER 0xcd STATICCALL 0xd9 COINBASE 0xbd CODESIZE 0xe9 0xf5 0xa5 STOP 0x29 ",
							"sourceMap": "7544:783:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8234:90;;;;;;;;;;;;;;7618:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8059:88;;;;;;;;;;;;;;1236:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;8234:90;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;7954:6;;;;;;;;;;;7946:15;;;;;;;;8297:5;8288:6;;:14;;;;;;;;;;;;;;;;;;8309:9;;;;;;;;;;8234:90::o;7618:26::-;;;;;;;;;;;;;:::o;8059:88::-;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;7794:6;;;;;;;;;;;7793:7;7785:16;;;;;;;;8123:4;8114:6;;:13;;;;;;;;;;;;;;;;;;8134:7;;;;;;;;;;8059:88::o;1236:20::-;;;;;;;;;;;;;:::o;1808:151::-;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;1905:1;1885:22;;:8;:22;;;;1881:71;;;1932:8;1924:5;;:16;;;;;;;;;;;;;;;;;;1881:71;1808:151;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "205800",
								"executionCost": "40810",
								"totalCost": "246610"
							},
							"external": {
								"owner()": "479",
								"pause()": "21833",
								"paused()": "485",
								"transferOwnership(address)": "20821",
								"unpause()": "21786"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7544,
									"end": 8327,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 7544,
									"end": 8327,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7544,
									"end": 8327,
									"name": "MSTORE"
								},
								{
									"begin": 7639,
									"end": 7644,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "DUP1"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "EXP"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "DUP2"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "SLOAD"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "DUP2"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "MUL"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "NOT"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "AND"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "SWAP1"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "DUP4"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "ISZERO"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "ISZERO"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "MUL"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "OR"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "SWAP1"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "SSTORE"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "POP"
								},
								{
									"begin": 1441,
									"end": 1451,
									"name": "CALLER"
								},
								{
									"begin": 1433,
									"end": 1438,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1433,
									"end": 1438,
									"name": "DUP1"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "EXP"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "DUP2"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "SLOAD"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "DUP2"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "MUL"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "NOT"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "AND"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "SWAP1"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "DUP4"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "AND"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "MUL"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "OR"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "SWAP1"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "SSTORE"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "POP"
								},
								{
									"begin": 7544,
									"end": 8327,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7544,
									"end": 8327,
									"name": "DUP1"
								},
								{
									"begin": 7544,
									"end": 8327,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7544,
									"end": 8327,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7544,
									"end": 8327,
									"name": "CODECOPY"
								},
								{
									"begin": 7544,
									"end": 8327,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7544,
									"end": 8327,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058201054c86abddd5ddb2d0990ef9aeb18bbdab05fc783bc43cdfad941bd38e9f5a50029",
									".code": [
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "MSTORE"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "SWAP1"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "DIV"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "AND"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "EQ"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "JUMPI"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "EQ"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "JUMPI"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "EQ"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "JUMPI"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "EQ"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "JUMPI"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "EQ"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "JUMPI"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 8327,
											"name": "REVERT"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMPDEST"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "CALLVALUE"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "ISZERO"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMPI"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "DUP1"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "REVERT"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMPDEST"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMP"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMPDEST"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "STOP"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMPDEST"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "CALLVALUE"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMPI"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DUP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "REVERT"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMPDEST"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMP"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMPDEST"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "MLOAD"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DUP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DUP3"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DUP2"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "MSTORE"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "ADD"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SWAP2"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "POP"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "POP"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "MLOAD"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DUP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SWAP2"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SUB"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SWAP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "RETURN"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMPDEST"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "CALLVALUE"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "ISZERO"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMPI"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "DUP1"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "REVERT"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMPDEST"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMP"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMPDEST"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "STOP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPDEST"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "CALLVALUE"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "ISZERO"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPI"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "REVERT"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPDEST"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPDEST"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "MLOAD"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP3"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "AND"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "AND"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP2"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "MSTORE"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "ADD"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP2"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "POP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "POP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "MLOAD"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP2"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SUB"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "RETURN"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "CALLVALUE"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "ISZERO"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPI"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "REVERT"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "ADD"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "SWAP2"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "POP"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "POP"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMP"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "STOP"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "SWAP1"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "SLOAD"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "SWAP1"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "EXP"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "SWAP1"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "DIV"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "AND"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ISZERO"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ISZERO"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "JUMPI"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "REVERT"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "JUMPDEST"
										},
										{
											"begin": 8297,
											"end": 8302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8288,
											"end": 8294,
											"name": "DUP1"
										},
										{
											"begin": 8288,
											"end": 8294,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "EXP"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "DUP2"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "SLOAD"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "DUP2"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "MUL"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "NOT"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "AND"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "SWAP1"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "DUP4"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "ISZERO"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "ISZERO"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "MUL"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "OR"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "SWAP1"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "SSTORE"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "POP"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "MLOAD"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "MLOAD"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "DUP1"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "SWAP2"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "SUB"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "SWAP1"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "LOG1"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMPDEST"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SWAP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SLOAD"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SWAP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "EXP"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SWAP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DIV"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "AND"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DUP2"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SWAP1"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SLOAD"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SWAP1"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "EXP"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SWAP1"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "DIV"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "AND"
										},
										{
											"begin": 7793,
											"end": 7800,
											"name": "ISZERO"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "ISZERO"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "ISZERO"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "JUMPI"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "DUP1"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "REVERT"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "JUMPDEST"
										},
										{
											"begin": 8123,
											"end": 8127,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8114,
											"end": 8120,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8114,
											"end": 8120,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "EXP"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP2"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SLOAD"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP2"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MUL"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "NOT"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "ISZERO"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "ISZERO"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MUL"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "OR"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SSTORE"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "POP"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "MLOAD"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "MLOAD"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "DUP1"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "SWAP2"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "SUB"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "SWAP1"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "LOG1"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPDEST"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SLOAD"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "EXP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DIV"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "AND"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP2"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 1905,
											"end": 1906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "AND"
										},
										{
											"begin": 1885,
											"end": 1893,
											"name": "DUP2"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "AND"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "EQ"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "ISZERO"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "JUMPI"
										},
										{
											"begin": 1932,
											"end": 1940,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "EXP"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SLOAD"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "MUL"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "NOT"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "AND"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "DUP4"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "AND"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "MUL"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "OR"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SSTORE"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "POP"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "POP"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\\r\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\\r\"}},\"title\":\"Pausable\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/Tether.sol\":\"Pausable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/Tether.sol\":{\"keccak256\":\"0x6b252bc962a16fa94f52d1b11c13769ee80a7542f4336b3021806a28f2d71c09\",\"urls\":[\"bzzr://1c2978e2cd781eaf07b101b387c36df7b146ee1948bd415e19bbf36344aef4aa\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/Tether.sol\":193:1013  library SafeMath {\r... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/Tether.sol\":193:1013  library SafeMath {\r... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a7230582077abdd308ced538c25a60776a59fc4b75465d2548e1b2d0db40b5b92dd2ae05b0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a7230582077abdd308ced538c25a60776a59fc4b75465d2548e1b2d0db40b5b92dd2ae05b0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH24 0xABDD308CED538C25A60776A59FC4B75465D2548E1B2D0DB4 SIGNEXTEND JUMPDEST SWAP3 0xdd 0x2a 0xe0 JUMPDEST STOP 0x29 ",
							"sourceMap": "193:820:0:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600080fd00a165627a7a7230582077abdd308ced538c25a60776a59fc4b75465d2548e1b2d0db40b5b92dd2ae05b0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH24 0xABDD308CED538C25A60776A59FC4B75465D2548E1B2D0DB4 SIGNEXTEND JUMPDEST SWAP3 0xdd 0x2a 0xe0 JUMPDEST STOP 0x29 ",
							"sourceMap": "193:820:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "61",
								"totalCost": "10661"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 193,
									"end": 1013,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "MSTORE"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "CALLVALUE"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "ISZERO"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "JUMPI"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "DUP1"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "REVERT"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "JUMPDEST"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "DUP1"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "CODECOPY"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 193,
									"end": 1013,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582077abdd308ced538c25a60776a59fc4b75465d2548e1b2d0db40b5b92dd2ae05b0029",
									".code": [
										{
											"begin": 193,
											"end": 1013,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 193,
											"end": 1013,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 1013,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 1013,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 193,
											"end": 1013,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 1013,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/Tether.sol\":\"SafeMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/Tether.sol\":{\"keccak256\":\"0x6b252bc962a16fa94f52d1b11c13769ee80a7542f4336b3021806a28f2d71c09\",\"urls\":[\"bzzr://1c2978e2cd781eaf07b101b387c36df7b146ee1948bd415e19bbf36344aef4aa\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"StandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.\r",
								"params": {
									"_owner": "address The address which owns the funds.\r",
									"_spender": "address The address which will spend the funds.\r"
								},
								"return": "A uint specifying the amount of tokens still available for the spender.\r"
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r",
								"params": {
									"_spender": "The address which will spend the funds.\r",
									"_value": "The amount of tokens to be spent.\r"
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint representing the amount owned by the passed address.\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another\r",
								"params": {
									"_from": "address The address which you want to send tokens from\r",
									"_to": "address The address which you want to transfer to\r",
									"_value": "uint the amount of tokens to be transferred\r"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						},
						"title": "Standard ERC20 token\r "
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"TetherToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_upgradedAddress",
									"type": "address"
								}
							],
							"name": "deprecate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "deprecated",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "upgradedAddress",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newBasisPoints",
									"type": "uint256"
								},
								{
									"name": "newMaxFee",
									"type": "uint256"
								}
							],
							"name": "setParams",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "issue",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "redeem",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_initialSupply",
									"type": "uint256"
								},
								{
									"name": "_name",
									"type": "string"
								},
								{
									"name": "_symbol",
									"type": "string"
								},
								{
									"name": "_decimals",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Issue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Redeem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "Deprecate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "feeBasisPoints",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "maxFee",
									"type": "uint256"
								}
							],
							"name": "Params",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state\r"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state\r"
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/Tether.sol\":10045:14962  contract TetherToken is Pausable, StandardToken, BlackList {\r... */\n  mstore(0x40, 0x60)\n    /* \"contracts/tokens/Tether.sol\":7639:7644  false */\n  0x0\n    /* \"contracts/tokens/Tether.sol\":7618:7644  bool public paused = false */\n  dup1\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokens/Tether.sol\":3183:3184  0 */\n  0x0\n    /* \"contracts/tokens/Tether.sol\":3153:3184  uint public basisPointsRate = 0 */\n  0x3\n  sstore\n    /* \"contracts/tokens/Tether.sol\":3216:3217  0 */\n  0x0\n    /* \"contracts/tokens/Tether.sol\":3191:3217  uint public maximumFee = 0 */\n  0x4\n  sstore\n    /* \"contracts/tokens/Tether.sol\":10555:10851  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\r... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  dup1\n  mload\n  dup3\n  add\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n  dup3\n  add\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  pop\n  pop\n    /* \"contracts/tokens/Tether.sol\":1441:1451  msg.sender */\n  caller\n    /* \"contracts/tokens/Tether.sol\":1433:1438  owner */\n  0x0\n  dup1\n    /* \"contracts/tokens/Tether.sol\":1433:1451  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokens/Tether.sol\":10676:10690  _initialSupply */\n  dup4\n    /* \"contracts/tokens/Tether.sol\":10661:10673  _totalSupply */\n  0x1\n    /* \"contracts/tokens/Tether.sol\":10661:10690  _totalSupply = _initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokens/Tether.sol\":10708:10713  _name */\n  dup3\n    /* \"contracts/tokens/Tether.sol\":10701:10705  name */\n  0x7\n    /* \"contracts/tokens/Tether.sol\":10701:10713  name = _name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_7)\ntag_6:\n  pop\n    /* \"contracts/tokens/Tether.sol\":10733:10740  _symbol */\n  dup2\n    /* \"contracts/tokens/Tether.sol\":10724:10730  symbol */\n  0x8\n    /* \"contracts/tokens/Tether.sol\":10724:10740  symbol = _symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_7)\ntag_8:\n  pop\n    /* \"contracts/tokens/Tether.sol\":10762:10771  _decimals */\n  dup1\n    /* \"contracts/tokens/Tether.sol\":10751:10759  decimals */\n  0x9\n    /* \"contracts/tokens/Tether.sol\":10751:10771  decimals = _decimals */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokens/Tether.sol\":10800:10814  _initialSupply */\n  dup4\n    /* \"contracts/tokens/Tether.sol\":10782:10790  balances */\n  0x2\n    /* \"contracts/tokens/Tether.sol\":10782:10797  balances[owner] */\n  0x0\n    /* \"contracts/tokens/Tether.sol\":10791:10796  owner */\n  dup1\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/tokens/Tether.sol\":10782:10797  balances[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/tokens/Tether.sol\":10782:10814  balances[owner] = _initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokens/Tether.sol\":10838:10843  false */\n  0x0\n    /* \"contracts/tokens/Tether.sol\":10825:10835  deprecated */\n  0xa\n  0x14\n    /* \"contracts/tokens/Tether.sol\":10825:10843  deprecated = false */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/tokens/Tether.sol\":10555:10851  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/tokens/Tether.sol\":10045:14962  contract TetherToken is Pausable, StandardToken, BlackList {\r... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_11\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_10)\ntag_11:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_10\n  jumpi\n  swap2\n  dup3\n  add\ntag_12:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_12)\ntag_13:\ntag_10:\n  pop\n  swap1\n  pop\n  tag_14\n  swap2\n  swap1\n  jump\t// in(tag_15)\ntag_14:\n  pop\n  swap1\n  jump\t// out\ntag_15:\n  tag_16\n  swap2\n  swap1\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_18\n  jumpi\n  0x0\n  dup2\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_17)\ntag_18:\n  pop\n  swap1\n  jump\ntag_16:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/Tether.sol\":10045:14962  contract TetherToken is Pausable, StandardToken, BlackList {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, iszero(calldatasize))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x753c30c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe136b19\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xecb93c0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x26976e3f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x35390714\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x59bf1abe\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c658165\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc0324c77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcc872b66\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdb006a75\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd644f72\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe47d6060\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe4997dc5\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe5b5019a\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf3bdc228\n      eq\n      tag_33\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/tokens/Tether.sol\":10113:10131  string public name */\n    tag_2:\n      jumpi(tag_34, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_34:\n      tag_35\n      jump(tag_36)\n    tag_35:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_37:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_37)\n    tag_38:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_40\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_40:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":12869:13050  function deprecate(address _upgradedAddress) public onlyOwner {\r... */\n    tag_3:\n      jumpi(tag_41, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_41:\n      tag_42\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_43)\n    tag_42:\n      stop\n        /* \"contracts/tokens/Tether.sol\":12123:12425  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n    tag_4:\n      jumpi(tag_44, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_44:\n      tag_45\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_46)\n    tag_45:\n      stop\n        /* \"contracts/tokens/Tether.sol\":10229:10251  bool public deprecated */\n    tag_5:\n      jumpi(tag_47, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_47:\n      tag_48\n      jump(tag_49)\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":8788:8933  function addBlackList (address _evilUser) public onlyOwner {\r... */\n    tag_6:\n      jumpi(tag_50, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_50:\n      tag_51\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_52)\n    tag_51:\n      stop\n        /* \"contracts/tokens/Tether.sol\":13116:13334  function totalSupply() public constant returns (uint) {\r... */\n    tag_7:\n      jumpi(tag_53, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_53:\n      tag_54\n      jump(tag_55)\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":11347:11709  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\r... */\n    tag_8:\n      jumpi(tag_56, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_56:\n      tag_57\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_58)\n    tag_57:\n      stop\n        /* \"contracts/tokens/Tether.sol\":10192:10222  address public upgradedAddress */\n    tag_9:\n      jumpi(tag_59, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_59:\n      tag_60\n      jump(tag_61)\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":3025:3065  mapping(address => uint) public balances */\n    tag_10:\n      jumpi(tag_62, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_62:\n      tag_63\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_64)\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":10165:10185  uint public decimals */\n    tag_11:\n      jumpi(tag_65, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_65:\n      tag_66\n      jump(tag_67)\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":3191:3217  uint public maximumFee = 0 */\n    tag_12:\n      jumpi(tag_68, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_68:\n      tag_69\n      jump(tag_70)\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":2127:2151  uint public _totalSupply */\n    tag_13:\n      jumpi(tag_71, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_71:\n      tag_72\n      jump(tag_73)\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":8234:8324  function unpause() onlyOwner whenPaused public {\r... */\n    tag_14:\n      jumpi(tag_74, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_74:\n      tag_75\n      jump(tag_76)\n    tag_75:\n      stop\n        /* \"contracts/tokens/Tether.sol\":8502:8626  function getBlackListStatus(address _maker) external constant returns (bool) {\r... */\n    tag_15:\n      jumpi(tag_77, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_77:\n      tag_78\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_79)\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":4815:4876  mapping (address => mapping (address => uint)) public allowed */\n    tag_16:\n      jumpi(tag_80, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_80:\n      tag_81\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_82)\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":7618:7644  bool public paused = false */\n    tag_17:\n      jumpi(tag_83, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_83:\n      tag_84\n      jump(tag_85)\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":11794:12038  function balanceOf(address who) public constant returns (uint) {\r... */\n    tag_18:\n      jumpi(tag_86, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_86:\n      tag_87\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_88)\n    tag_87:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":8059:8147  function pause() onlyOwner whenNotPaused public {\r... */\n    tag_19:\n      jumpi(tag_89, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_89:\n      tag_90\n      jump(tag_91)\n    tag_90:\n      stop\n        /* \"contracts/tokens/Tether.sol\":8634:8721  function getOwner() external constant returns (address) {\r... */\n    tag_20:\n      jumpi(tag_92, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_92:\n      tag_93\n      jump(tag_94)\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":1236:1256  address public owner */\n    tag_21:\n      jumpi(tag_95, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_95:\n      tag_96\n      jump(tag_97)\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":10138:10158  string public symbol */\n    tag_22:\n      jumpi(tag_98, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_98:\n      tag_99\n      jump(tag_100)\n    tag_99:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_101:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_101)\n    tag_102:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_104:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":10936:11262  function transfer(address _to, uint _value) public whenNotPaused {\r... */\n    tag_23:\n      jumpi(tag_105, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_105:\n      tag_106\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_107)\n    tag_106:\n      stop\n        /* \"contracts/tokens/Tether.sol\":14240:14627  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r... */\n    tag_24:\n      jumpi(tag_108, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_108:\n      tag_109\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_110)\n    tag_109:\n      stop\n        /* \"contracts/tokens/Tether.sol\":13498:13764  function issue(uint amount) public onlyOwner {\r... */\n    tag_25:\n      jumpi(tag_111, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_111:\n      tag_112\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_113)\n    tag_112:\n      stop\n        /* \"contracts/tokens/Tether.sol\":13995:14232  function redeem(uint amount) public onlyOwner {\r... */\n    tag_26:\n      jumpi(tag_114, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_114:\n      tag_115\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_116)\n    tag_115:\n      stop\n        /* \"contracts/tokens/Tether.sol\":12510:12803  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n    tag_27:\n      jumpi(tag_117, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_117:\n      tag_118\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_119)\n    tag_118:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":3153:3184  uint public basisPointsRate = 0 */\n    tag_28:\n      jumpi(tag_120, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_120:\n      tag_121\n      jump(tag_122)\n    tag_121:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":8729:8775  mapping (address => bool) public isBlackListed */\n    tag_29:\n      jumpi(tag_123, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_123:\n      tag_124\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_125)\n    tag_124:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":8941:9101  function removeBlackList (address _clearedUser) public onlyOwner {\r... */\n    tag_30:\n      jumpi(tag_126, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_126:\n      tag_127\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_128)\n    tag_127:\n      stop\n        /* \"contracts/tokens/Tether.sol\":4885:4927  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_31:\n      jumpi(tag_129, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_129:\n      tag_130\n      jump(tag_131)\n    tag_130:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/Tether.sol\":1808:1959  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_32:\n      jumpi(tag_132, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_132:\n      tag_133\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_134)\n    tag_133:\n      stop\n        /* \"contracts/tokens/Tether.sol\":9109:9433  function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r... */\n    tag_33:\n      jumpi(tag_135, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_135:\n      tag_136\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_137)\n    tag_136:\n      stop\n        /* \"contracts/tokens/Tether.sol\":10113:10131  string public name */\n    tag_36:\n      0x7\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n    tag_139:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_140:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_140\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":12869:13050  function deprecate(address _upgradedAddress) public onlyOwner {\r... */\n    tag_43:\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_142\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_142:\n        /* \"contracts/tokens/Tether.sol\":12955:12959  true */\n      0x1\n        /* \"contracts/tokens/Tether.sol\":12942:12952  deprecated */\n      0xa\n      0x14\n        /* \"contracts/tokens/Tether.sol\":12942:12959  deprecated = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":12988:13004  _upgradedAddress */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":12970:12985  upgradedAddress */\n      0xa\n      0x0\n        /* \"contracts/tokens/Tether.sol\":12970:13004  upgradedAddress = _upgradedAddress */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":13015:13042  Deprecate(_upgradedAddress) */\n      0xcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e\n        /* \"contracts/tokens/Tether.sol\":13025:13041  _upgradedAddress */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":13015:13042  Deprecate(_upgradedAddress) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/tokens/Tether.sol\":12869:13050  function deprecate(address _upgradedAddress) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":12123:12425  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n    tag_46:\n        /* \"contracts/tokens/Tether.sol\":12194:12200  2 * 32 */\n      0x40\n        /* \"contracts/tokens/Tether.sol\":3377:3378  4 */\n      0x4\n        /* \"contracts/tokens/Tether.sol\":3370:3374  size */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":3370:3378  size + 4 */\n      add\n        /* \"contracts/tokens/Tether.sol\":3352:3360  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/tokens/Tether.sol\":3352:3367  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":3352:3378  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/tokens/Tether.sol\":3350:3379  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/tokens/Tether.sol\":3342:3380  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_145\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_145:\n        /* \"contracts/tokens/Tether.sol\":12217:12227  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":12213:12418  if (deprecated) {\r... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":12273:12288  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":12251:12305  UpgradedStandardToken(upgradedAddress).approveByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaee92d33\n        /* \"contracts/tokens/Tether.sol\":12306:12316  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":12318:12326  _spender */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":12328:12334  _value */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":12251:12335  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_148\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_148:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_149\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_149:\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/Tether.sol\":12244:12335  return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      jump(tag_146)\n        /* \"contracts/tokens/Tether.sol\":12213:12418  if (deprecated) {\r... */\n    tag_147:\n        /* \"contracts/tokens/Tether.sol\":12375:12406  super.approve(_spender, _value) */\n      tag_151\n        /* \"contracts/tokens/Tether.sol\":12389:12397  _spender */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":12399:12405  _value */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":12375:12388  super.approve */\n      tag_152\n        /* \"contracts/tokens/Tether.sol\":12375:12406  super.approve(_spender, _value) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/tokens/Tether.sol\":3391:3392  _ */\n    tag_146:\n        /* \"contracts/tokens/Tether.sol\":12123:12425  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":10229:10251  bool public deprecated */\n    tag_49:\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":8788:8933  function addBlackList (address _evilUser) public onlyOwner {\r... */\n    tag_52:\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_154\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_154:\n        /* \"contracts/tokens/Tether.sol\":8885:8889  true */\n      0x1\n        /* \"contracts/tokens/Tether.sol\":8858:8871  isBlackListed */\n      0x6\n        /* \"contracts/tokens/Tether.sol\":8858:8882  isBlackListed[_evilUser] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":8872:8881  _evilUser */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":8858:8882  isBlackListed[_evilUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/tokens/Tether.sol\":8858:8889  isBlackListed[_evilUser] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":8900:8925  AddedBlackList(_evilUser) */\n      0x42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc\n        /* \"contracts/tokens/Tether.sol\":8915:8924  _evilUser */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":8900:8925  AddedBlackList(_evilUser) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/tokens/Tether.sol\":8788:8933  function addBlackList (address _evilUser) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":13116:13334  function totalSupply() public constant returns (uint) {\r... */\n    tag_55:\n        /* \"contracts/tokens/Tether.sol\":13164:13168  uint */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":13185:13195  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":13181:13327  if (deprecated) {\r... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":13233:13248  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":13219:13261  StandardToken(upgradedAddress).totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/tokens/Tether.sol\":13219:13263  StandardToken(upgradedAddress).totalSupply() */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_158\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_158:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_159\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_159:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":13212:13263  return StandardToken(upgradedAddress).totalSupply() */\n      swap1\n      pop\n      jump(tag_156)\n        /* \"contracts/tokens/Tether.sol\":13181:13327  if (deprecated) {\r... */\n    tag_157:\n        /* \"contracts/tokens/Tether.sol\":13303:13315  _totalSupply */\n      sload(0x1)\n        /* \"contracts/tokens/Tether.sol\":13296:13315  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":13116:13334  function totalSupply() public constant returns (uint) {\r... */\n    tag_156:\n      swap1\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":11347:11709  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\r... */\n    tag_58:\n        /* \"contracts/tokens/Tether.sol\":7794:7800  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":7793:7800  !paused */\n      iszero\n        /* \"contracts/tokens/Tether.sol\":7785:7801  require(!paused) */\n      iszero\n      iszero\n      tag_162\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_162:\n        /* \"contracts/tokens/Tether.sol\":11451:11464  isBlackListed */\n      0x6\n        /* \"contracts/tokens/Tether.sol\":11451:11471  isBlackListed[_from] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":11465:11470  _from */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":11451:11471  isBlackListed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":11450:11471  !isBlackListed[_from] */\n      iszero\n        /* \"contracts/tokens/Tether.sol\":11442:11472  require(!isBlackListed[_from]) */\n      iszero\n      iszero\n      tag_164\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_164:\n        /* \"contracts/tokens/Tether.sol\":11487:11497  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":11483:11702  if (deprecated) {\r... */\n      iszero\n      tag_165\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":11543:11558  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":11521:11580  UpgradedStandardToken(upgradedAddress).transferFromByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8b477adb\n        /* \"contracts/tokens/Tether.sol\":11581:11591  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":11593:11598  _from */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":11600:11603  _to */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":11605:11611  _value */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":11521:11612  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_166\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_166:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_167\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_167:\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/Tether.sol\":11514:11612  return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      jump(tag_163)\n        /* \"contracts/tokens/Tether.sol\":11483:11702  if (deprecated) {\r... */\n    tag_165:\n        /* \"contracts/tokens/Tether.sol\":11652:11690  super.transferFrom(_from, _to, _value) */\n      tag_169\n        /* \"contracts/tokens/Tether.sol\":11671:11676  _from */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":11678:11681  _to */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":11683:11689  _value */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":11652:11670  super.transferFrom */\n      tag_170\n        /* \"contracts/tokens/Tether.sol\":11652:11690  super.transferFrom(_from, _to, _value) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/tokens/Tether.sol\":7808:7809  _ */\n    tag_163:\n        /* \"contracts/tokens/Tether.sol\":11347:11709  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":10192:10222  address public upgradedAddress */\n    tag_61:\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":3025:3065  mapping(address => uint) public balances */\n    tag_64:\n      mstore(0x20, 0x2)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":10165:10185  uint public decimals */\n    tag_67:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":3191:3217  uint public maximumFee = 0 */\n    tag_70:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":2127:2151  uint public _totalSupply */\n    tag_73:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":8234:8324  function unpause() onlyOwner whenPaused public {\r... */\n    tag_76:\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_172\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_172:\n        /* \"contracts/tokens/Tether.sol\":7954:7960  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":7946:7961  require(paused) */\n      iszero\n      iszero\n      tag_174\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_174:\n        /* \"contracts/tokens/Tether.sol\":8297:8302  false */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":8288:8294  paused */\n      dup1\n      0x14\n        /* \"contracts/tokens/Tether.sol\":8288:8302  paused = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":8309:8318  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/tokens/Tether.sol\":8234:8324  function unpause() onlyOwner whenPaused public {\r... */\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":8502:8626  function getBlackListStatus(address _maker) external constant returns (bool) {\r... */\n    tag_79:\n        /* \"contracts/tokens/Tether.sol\":8573:8577  bool */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":8597:8610  isBlackListed */\n      0x6\n        /* \"contracts/tokens/Tether.sol\":8597:8618  isBlackListed[_maker] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":8611:8617  _maker */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":8597:8618  isBlackListed[_maker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":8590:8618  return isBlackListed[_maker] */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":8502:8626  function getBlackListStatus(address _maker) external constant returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":4815:4876  mapping (address => mapping (address => uint)) public allowed */\n    tag_82:\n      mstore(0x20, 0x5)\n      dup2\n      0x0\n      mstore\n      mstore(0x20, keccak256(0x0, 0x40))\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":7618:7644  bool public paused = false */\n    tag_85:\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":11794:12038  function balanceOf(address who) public constant returns (uint) {\r... */\n    tag_88:\n        /* \"contracts/tokens/Tether.sol\":11851:11855  uint */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":11872:11882  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":11868:12031  if (deprecated) {\r... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":11928:11943  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":11906:11954  UpgradedStandardToken(upgradedAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/tokens/Tether.sol\":11955:11958  who */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":11906:11959  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_179\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_179:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_180\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_180:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":11899:11959  return UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      swap1\n      pop\n      jump(tag_177)\n        /* \"contracts/tokens/Tether.sol\":11868:12031  if (deprecated) {\r... */\n    tag_178:\n        /* \"contracts/tokens/Tether.sol\":11999:12019  super.balanceOf(who) */\n      tag_182\n        /* \"contracts/tokens/Tether.sol\":12015:12018  who */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":11999:12014  super.balanceOf */\n      tag_183\n        /* \"contracts/tokens/Tether.sol\":11999:12019  super.balanceOf(who) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/tokens/Tether.sol\":11992:12019  return super.balanceOf(who) */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":11794:12038  function balanceOf(address who) public constant returns (uint) {\r... */\n    tag_177:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":8059:8147  function pause() onlyOwner whenNotPaused public {\r... */\n    tag_91:\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_185\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_185:\n        /* \"contracts/tokens/Tether.sol\":7794:7800  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":7793:7800  !paused */\n      iszero\n        /* \"contracts/tokens/Tether.sol\":7785:7801  require(!paused) */\n      iszero\n      iszero\n      tag_187\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_187:\n        /* \"contracts/tokens/Tether.sol\":8123:8127  true */\n      0x1\n        /* \"contracts/tokens/Tether.sol\":8114:8120  paused */\n      0x0\n      0x14\n        /* \"contracts/tokens/Tether.sol\":8114:8127  paused = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":8134:8141  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/tokens/Tether.sol\":8059:8147  function pause() onlyOwner whenNotPaused public {\r... */\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":8634:8721  function getOwner() external constant returns (address) {\r... */\n    tag_94:\n        /* \"contracts/tokens/Tether.sol\":8681:8688  address */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":8708:8713  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":8701:8713  return owner */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":8634:8721  function getOwner() external constant returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":1236:1256  address public owner */\n    tag_97:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":10138:10158  string public symbol */\n    tag_100:\n      0x8\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_190\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_191\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_190)\n    tag_191:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_192:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_192\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":10936:11262  function transfer(address _to, uint _value) public whenNotPaused {\r... */\n    tag_107:\n        /* \"contracts/tokens/Tether.sol\":7794:7800  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":7793:7800  !paused */\n      iszero\n        /* \"contracts/tokens/Tether.sol\":7785:7801  require(!paused) */\n      iszero\n      iszero\n      tag_194\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_194:\n        /* \"contracts/tokens/Tether.sol\":11021:11034  isBlackListed */\n      0x6\n        /* \"contracts/tokens/Tether.sol\":11021:11046  isBlackListed[msg.sender] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":11035:11045  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":11021:11046  isBlackListed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":11020:11046  !isBlackListed[msg.sender] */\n      iszero\n        /* \"contracts/tokens/Tether.sol\":11012:11047  require(!isBlackListed[msg.sender]) */\n      iszero\n      iszero\n      tag_196\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_196:\n        /* \"contracts/tokens/Tether.sol\":11062:11072  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":11058:11255  if (deprecated) {\r... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":11118:11133  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":11096:11151  UpgradedStandardToken(upgradedAddress).transferByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6e18980a\n        /* \"contracts/tokens/Tether.sol\":11152:11162  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":11164:11167  _to */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":11169:11175  _value */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":11096:11176  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_198\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_198:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_199\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_199:\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/Tether.sol\":11089:11176  return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      jump(tag_195)\n        /* \"contracts/tokens/Tether.sol\":11058:11255  if (deprecated) {\r... */\n    tag_197:\n        /* \"contracts/tokens/Tether.sol\":11216:11243  super.transfer(_to, _value) */\n      tag_201\n        /* \"contracts/tokens/Tether.sol\":11231:11234  _to */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":11236:11242  _value */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":11216:11230  super.transfer */\n      tag_202\n        /* \"contracts/tokens/Tether.sol\":11216:11243  super.transfer(_to, _value) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/tokens/Tether.sol\":7808:7809  _ */\n    tag_195:\n        /* \"contracts/tokens/Tether.sol\":10936:11262  function transfer(address _to, uint _value) public whenNotPaused {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":14240:14627  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r... */\n    tag_110:\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_204\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/tokens/Tether.sol\":14438:14440  20 */\n      0x14\n        /* \"contracts/tokens/Tether.sol\":14421:14435  newBasisPoints */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":14421:14440  newBasisPoints < 20 */\n      lt\n        /* \"contracts/tokens/Tether.sol\":14413:14441  require(newBasisPoints < 20) */\n      iszero\n      iszero\n      tag_206\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_206:\n        /* \"contracts/tokens/Tether.sol\":14472:14474  50 */\n      0x32\n        /* \"contracts/tokens/Tether.sol\":14460:14469  newMaxFee */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":14460:14474  newMaxFee < 50 */\n      lt\n        /* \"contracts/tokens/Tether.sol\":14452:14475  require(newMaxFee < 50) */\n      iszero\n      iszero\n      tag_207\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_207:\n        /* \"contracts/tokens/Tether.sol\":14506:14520  newBasisPoints */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":14488:14503  basisPointsRate */\n      0x3\n        /* \"contracts/tokens/Tether.sol\":14488:14520  basisPointsRate = newBasisPoints */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":14544:14571  newMaxFee.mul(10**decimals) */\n      tag_208\n        /* \"contracts/tokens/Tether.sol\":14562:14570  decimals */\n      sload(0x9)\n        /* \"contracts/tokens/Tether.sol\":14558:14560  10 */\n      0xa\n        /* \"contracts/tokens/Tether.sol\":14558:14570  10**decimals */\n      exp\n        /* \"contracts/tokens/Tether.sol\":14544:14553  newMaxFee */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":14544:14557  newMaxFee.mul */\n      tag_209\n      swap1\n        /* \"contracts/tokens/Tether.sol\":14544:14571  newMaxFee.mul(10**decimals) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"contracts/tokens/Tether.sol\":14531:14541  maximumFee */\n      0x4\n        /* \"contracts/tokens/Tether.sol\":14531:14571  maximumFee = newMaxFee.mul(10**decimals) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":14584:14619  Params(basisPointsRate, maximumFee) */\n      0xb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e\n        /* \"contracts/tokens/Tether.sol\":14591:14606  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/tokens/Tether.sol\":14608:14618  maximumFee */\n      sload(0x4)\n        /* \"contracts/tokens/Tether.sol\":14584:14619  Params(basisPointsRate, maximumFee) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/tokens/Tether.sol\":14240:14627  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":13498:13764  function issue(uint amount) public onlyOwner {\r... */\n    tag_113:\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_211\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_211:\n        /* \"contracts/tokens/Tether.sol\":13586:13598  _totalSupply */\n      sload(0x1)\n        /* \"contracts/tokens/Tether.sol\":13577:13583  amount */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":13562:13574  _totalSupply */\n      sload(0x1)\n        /* \"contracts/tokens/Tether.sol\":13562:13583  _totalSupply + amount */\n      add\n        /* \"contracts/tokens/Tether.sol\":13562:13598  _totalSupply + amount > _totalSupply */\n      gt\n        /* \"contracts/tokens/Tether.sol\":13554:13599  require(_totalSupply + amount > _totalSupply) */\n      iszero\n      iszero\n      tag_213\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_213:\n        /* \"contracts/tokens/Tether.sol\":13645:13653  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":13645:13660  balances[owner] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":13654:13659  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":13645:13660  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/tokens/Tether.sol\":13636:13642  amount */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":13618:13626  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":13618:13633  balances[owner] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":13627:13632  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":13618:13633  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/tokens/Tether.sol\":13618:13642  balances[owner] + amount */\n      add\n        /* \"contracts/tokens/Tether.sol\":13618:13660  balances[owner] + amount > balances[owner] */\n      gt\n        /* \"contracts/tokens/Tether.sol\":13610:13661  require(balances[owner] + amount > balances[owner]) */\n      iszero\n      iszero\n      tag_214\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_214:\n        /* \"contracts/tokens/Tether.sol\":13693:13699  amount */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":13674:13682  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":13674:13689  balances[owner] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":13683:13688  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":13674:13689  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/tokens/Tether.sol\":13674:13699  balances[owner] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":13726:13732  amount */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":13710:13722  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/tokens/Tether.sol\":13710:13732  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":13743:13756  Issue(amount) */\n      0xcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a\n        /* \"contracts/tokens/Tether.sol\":13749:13755  amount */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":13743:13756  Issue(amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/tokens/Tether.sol\":13498:13764  function issue(uint amount) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":13995:14232  function redeem(uint amount) public onlyOwner {\r... */\n    tag_116:\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_216\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_216:\n        /* \"contracts/tokens/Tether.sol\":14076:14082  amount */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":14060:14072  _totalSupply */\n      sload(0x1)\n        /* \"contracts/tokens/Tether.sol\":14060:14082  _totalSupply >= amount */\n      lt\n      iszero\n        /* \"contracts/tokens/Tether.sol\":14052:14083  require(_totalSupply >= amount) */\n      iszero\n      iszero\n      tag_218\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_218:\n        /* \"contracts/tokens/Tether.sol\":14121:14127  amount */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":14102:14110  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":14102:14117  balances[owner] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":14111:14116  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":14102:14117  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/tokens/Tether.sol\":14102:14127  balances[owner] >= amount */\n      lt\n      iszero\n        /* \"contracts/tokens/Tether.sol\":14094:14128  require(balances[owner] >= amount) */\n      iszero\n      iszero\n      tag_219\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_219:\n        /* \"contracts/tokens/Tether.sol\":14157:14163  amount */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":14141:14153  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/tokens/Tether.sol\":14141:14163  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":14193:14199  amount */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":14174:14182  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":14174:14189  balances[owner] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":14183:14188  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":14174:14189  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/tokens/Tether.sol\":14174:14199  balances[owner] -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":14210:14224  Redeem(amount) */\n      0x702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44\n        /* \"contracts/tokens/Tether.sol\":14217:14223  amount */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":14210:14224  Redeem(amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/tokens/Tether.sol\":13995:14232  function redeem(uint amount) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":12510:12803  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n    tag_119:\n        /* \"contracts/tokens/Tether.sol\":12588:12602  uint remaining */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":12619:12629  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":12615:12796  if (deprecated) {\r... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":12667:12682  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":12653:12693  StandardToken(upgradedAddress).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/tokens/Tether.sol\":12694:12700  _owner */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":12702:12710  _spender */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":12653:12711  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_222\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_222:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_223\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_223:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":12646:12711  return StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      swap1\n      pop\n      jump(tag_220)\n        /* \"contracts/tokens/Tether.sol\":12615:12796  if (deprecated) {\r... */\n    tag_221:\n        /* \"contracts/tokens/Tether.sol\":12751:12784  super.allowance(_owner, _spender) */\n      tag_225\n        /* \"contracts/tokens/Tether.sol\":12767:12773  _owner */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":12775:12783  _spender */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":12751:12766  super.allowance */\n      tag_226\n        /* \"contracts/tokens/Tether.sol\":12751:12784  super.allowance(_owner, _spender) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/tokens/Tether.sol\":12744:12784  return super.allowance(_owner, _spender) */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":12510:12803  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n    tag_220:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":3153:3184  uint public basisPointsRate = 0 */\n    tag_122:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":8729:8775  mapping (address => bool) public isBlackListed */\n    tag_125:\n      mstore(0x20, 0x6)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":8941:9101  function removeBlackList (address _clearedUser) public onlyOwner {\r... */\n    tag_128:\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_228\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_228:\n        /* \"contracts/tokens/Tether.sol\":9047:9052  false */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":9017:9030  isBlackListed */\n      0x6\n        /* \"contracts/tokens/Tether.sol\":9017:9044  isBlackListed[_clearedUser] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":9031:9043  _clearedUser */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":9017:9044  isBlackListed[_clearedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/tokens/Tether.sol\":9017:9052  isBlackListed[_clearedUser] = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":9063:9093  RemovedBlackList(_clearedUser) */\n      0xd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c\n        /* \"contracts/tokens/Tether.sol\":9080:9092  _clearedUser */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":9063:9093  RemovedBlackList(_clearedUser) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/tokens/Tether.sol\":8941:9101  function removeBlackList (address _clearedUser) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":4885:4927  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_131:\n        /* \"contracts/tokens/Tether.sol\":4917:4927  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/tokens/Tether.sol\":4885:4927  uint public constant MAX_UINT = 2**256 - 1 */\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":1808:1959  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_134:\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_231\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_231:\n        /* \"contracts/tokens/Tether.sol\":1905:1906  0 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":1885:1907  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1885:1893  newOwner */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":1885:1907  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/tokens/Tether.sol\":1881:1952  if (newOwner != address(0)) {\r... */\n      iszero\n      tag_233\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":1932:1940  newOwner */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":1924:1929  owner */\n      0x0\n      dup1\n        /* \"contracts/tokens/Tether.sol\":1924:1940  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":1881:1952  if (newOwner != address(0)) {\r... */\n    tag_233:\n        /* \"contracts/tokens/Tether.sol\":1808:1959  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":9109:9433  function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r... */\n    tag_137:\n        /* \"contracts/tokens/Tether.sol\":9242:9257  uint dirtyFunds */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":1608:1613  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":1594:1604  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":1594:1613  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/tokens/Tether.sol\":1586:1614  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_235\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_235:\n        /* \"contracts/tokens/Tether.sol\":9199:9212  isBlackListed */\n      0x6\n        /* \"contracts/tokens/Tether.sol\":9199:9230  isBlackListed[_blackListedUser] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":9213:9229  _blackListedUser */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":9199:9230  isBlackListed[_blackListedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/Tether.sol\":9191:9231  require(isBlackListed[_blackListedUser]) */\n      iszero\n      iszero\n      tag_237\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_237:\n        /* \"contracts/tokens/Tether.sol\":9260:9287  balanceOf(_blackListedUser) */\n      tag_238\n        /* \"contracts/tokens/Tether.sol\":9270:9286  _blackListedUser */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":9260:9269  balanceOf */\n      tag_88\n        /* \"contracts/tokens/Tether.sol\":9260:9287  balanceOf(_blackListedUser) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/tokens/Tether.sol\":9242:9287  uint dirtyFunds = balanceOf(_blackListedUser) */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":9327:9328  0 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":9298:9306  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":9298:9324  balances[_blackListedUser] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":9307:9323  _blackListedUser */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":9298:9324  balances[_blackListedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":9298:9328  balances[_blackListedUser] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":9355:9365  dirtyFunds */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":9339:9351  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/tokens/Tether.sol\":9339:9365  _totalSupply -= dirtyFunds */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":9376:9425  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      0x61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6\n        /* \"contracts/tokens/Tether.sol\":9396:9412  _blackListedUser */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":9414:9424  dirtyFunds */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":9376:9425  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/tokens/Tether.sol\":9109:9433  function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":6365:6938  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n    tag_152:\n        /* \"contracts/tokens/Tether.sol\":6436:6442  2 * 32 */\n      0x40\n        /* \"contracts/tokens/Tether.sol\":3377:3378  4 */\n      0x4\n        /* \"contracts/tokens/Tether.sol\":3370:3374  size */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":3370:3378  size + 4 */\n      add\n        /* \"contracts/tokens/Tether.sol\":3352:3360  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/tokens/Tether.sol\":3352:3367  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":3352:3378  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/tokens/Tether.sol\":3350:3379  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/tokens/Tether.sol\":3342:3380  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_240\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_240:\n        /* \"contracts/tokens/Tether.sol\":6786:6787  0 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":6776:6782  _value */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":6776:6787  _value != 0 */\n      eq\n      iszero\n        /* \"contracts/tokens/Tether.sol\":6775:6828  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n      dup1\n      iszero\n      tag_242\n      jumpi\n      pop\n        /* \"contracts/tokens/Tether.sol\":6826:6827  0 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":6793:6800  allowed */\n      0x5\n        /* \"contracts/tokens/Tether.sol\":6793:6812  allowed[msg.sender] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":6801:6811  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":6793:6812  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":6793:6822  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":6813:6821  _spender */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":6793:6822  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/tokens/Tether.sol\":6793:6827  allowed[msg.sender][_spender] != 0 */\n      eq\n      iszero\n        /* \"contracts/tokens/Tether.sol\":6775:6828  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n    tag_242:\n        /* \"contracts/tokens/Tether.sol\":6773:6829  !((_value != 0) && (allowed[msg.sender][_spender] != 0)) */\n      iszero\n        /* \"contracts/tokens/Tether.sol\":6765:6830  require(!((_value != 0) && (allowed[msg.sender][_spender] != 0))) */\n      iszero\n      iszero\n      tag_243\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_243:\n        /* \"contracts/tokens/Tether.sol\":6875:6881  _value */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":6843:6850  allowed */\n      0x5\n        /* \"contracts/tokens/Tether.sol\":6843:6862  allowed[msg.sender] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":6851:6861  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":6843:6862  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":6843:6872  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":6863:6871  _spender */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":6843:6872  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":6843:6881  allowed[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":6913:6921  _spender */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":6892:6930  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":6901:6911  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":6892:6930  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/tokens/Tether.sol\":6923:6929  _value */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":6892:6930  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokens/Tether.sol\":6365:6938  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":5217:6118  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\r... */\n    tag_170:\n        /* \"contracts/tokens/Tether.sol\":5322:5336  var _allowance */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":5536:5544  uint fee */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":5788:5803  uint sendAmount */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":5303:5309  3 * 32 */\n      0x60\n        /* \"contracts/tokens/Tether.sol\":3377:3378  4 */\n      0x4\n        /* \"contracts/tokens/Tether.sol\":3370:3374  size */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":3370:3378  size + 4 */\n      add\n        /* \"contracts/tokens/Tether.sol\":3352:3360  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/tokens/Tether.sol\":3352:3367  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":3352:3378  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/tokens/Tether.sol\":3350:3379  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/tokens/Tether.sol\":3342:3380  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_245\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_245:\n        /* \"contracts/tokens/Tether.sol\":5339:5346  allowed */\n      0x5\n        /* \"contracts/tokens/Tether.sol\":5339:5353  allowed[_from] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":5347:5352  _from */\n      dup9\n        /* \"contracts/tokens/Tether.sol\":5339:5353  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":5339:5365  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":5354:5364  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":5339:5365  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/tokens/Tether.sol\":5322:5365  var _allowance = allowed[_from][msg.sender] */\n      swap4\n      pop\n        /* \"contracts/tokens/Tether.sol\":5547:5587  (_value.mul(basisPointsRate)).div(10000) */\n      tag_247\n        /* \"contracts/tokens/Tether.sol\":5581:5586  10000 */\n      0x2710\n        /* \"contracts/tokens/Tether.sol\":5548:5575  _value.mul(basisPointsRate) */\n      tag_248\n        /* \"contracts/tokens/Tether.sol\":5559:5574  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/tokens/Tether.sol\":5548:5554  _value */\n      dup9\n        /* \"contracts/tokens/Tether.sol\":5548:5558  _value.mul */\n      tag_209\n      swap1\n        /* \"contracts/tokens/Tether.sol\":5548:5575  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/tokens/Tether.sol\":5547:5580  (_value.mul(basisPointsRate)).div */\n      tag_249\n      swap1\n        /* \"contracts/tokens/Tether.sol\":5547:5587  (_value.mul(basisPointsRate)).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/tokens/Tether.sol\":5536:5587  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/tokens/Tether.sol\":5608:5618  maximumFee */\n      sload(0x4)\n        /* \"contracts/tokens/Tether.sol\":5602:5605  fee */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":5602:5618  fee > maximumFee */\n      gt\n        /* \"contracts/tokens/Tether.sol\":5598:5663  if (fee > maximumFee) {\r... */\n      iszero\n      tag_250\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":5641:5651  maximumFee */\n      sload(0x4)\n        /* \"contracts/tokens/Tether.sol\":5635:5651  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/tokens/Tether.sol\":5598:5663  if (fee > maximumFee) {\r... */\n    tag_250:\n        /* \"contracts/tokens/Tether.sol\":4917:4927  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/tokens/Tether.sol\":5677:5687  _allowance */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":5677:5698  _allowance < MAX_UINT */\n      lt\n        /* \"contracts/tokens/Tether.sol\":5673:5778  if (_allowance < MAX_UINT) {\r... */\n      iszero\n      tag_251\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":5744:5766  _allowance.sub(_value) */\n      tag_252\n        /* \"contracts/tokens/Tether.sol\":5759:5765  _value */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":5744:5754  _allowance */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":5744:5758  _allowance.sub */\n      tag_253\n      swap1\n        /* \"contracts/tokens/Tether.sol\":5744:5766  _allowance.sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"contracts/tokens/Tether.sol\":5715:5722  allowed */\n      0x5\n        /* \"contracts/tokens/Tether.sol\":5715:5729  allowed[_from] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":5723:5728  _from */\n      dup10\n        /* \"contracts/tokens/Tether.sol\":5715:5729  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":5715:5741  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":5730:5740  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":5715:5741  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":5715:5766  allowed[_from][msg.sender] = _allowance.sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":5673:5778  if (_allowance < MAX_UINT) {\r... */\n    tag_251:\n        /* \"contracts/tokens/Tether.sol\":5806:5821  _value.sub(fee) */\n      tag_254\n        /* \"contracts/tokens/Tether.sol\":5817:5820  fee */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":5806:5812  _value */\n      dup7\n        /* \"contracts/tokens/Tether.sol\":5806:5816  _value.sub */\n      tag_253\n      swap1\n        /* \"contracts/tokens/Tether.sol\":5806:5821  _value.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"contracts/tokens/Tether.sol\":5788:5821  uint sendAmount = _value.sub(fee) */\n      swap2\n      pop\n        /* \"contracts/tokens/Tether.sol\":5850:5877  balances[_from].sub(_value) */\n      tag_255\n        /* \"contracts/tokens/Tether.sol\":5870:5876  _value */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":5850:5858  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":5850:5865  balances[_from] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":5859:5864  _from */\n      dup11\n        /* \"contracts/tokens/Tether.sol\":5850:5865  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/tokens/Tether.sol\":5850:5869  balances[_from].sub */\n      tag_253\n      swap1\n        /* \"contracts/tokens/Tether.sol\":5850:5877  balances[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/tokens/Tether.sol\":5832:5840  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":5832:5847  balances[_from] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":5841:5846  _from */\n      dup10\n        /* \"contracts/tokens/Tether.sol\":5832:5847  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":5832:5877  balances[_from] = balances[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":5904:5933  balances[_to].add(sendAmount) */\n      tag_256\n        /* \"contracts/tokens/Tether.sol\":5922:5932  sendAmount */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":5904:5912  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":5904:5917  balances[_to] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":5913:5916  _to */\n      dup10\n        /* \"contracts/tokens/Tether.sol\":5904:5917  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/tokens/Tether.sol\":5904:5921  balances[_to].add */\n      tag_257\n      swap1\n        /* \"contracts/tokens/Tether.sol\":5904:5933  balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"contracts/tokens/Tether.sol\":5888:5896  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":5888:5901  balances[_to] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":5897:5900  _to */\n      dup9\n        /* \"contracts/tokens/Tether.sol\":5888:5901  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":5888:5933  balances[_to] = balances[_to].add(sendAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":5954:5955  0 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":5948:5951  fee */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":5948:5955  fee > 0 */\n      gt\n        /* \"contracts/tokens/Tether.sol\":5944:6068  if (fee > 0) {\r... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":5990:6014  balances[owner].add(fee) */\n      tag_259\n        /* \"contracts/tokens/Tether.sol\":6010:6013  fee */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":5990:5998  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":5990:6005  balances[owner] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":5999:6004  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":5990:6005  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/tokens/Tether.sol\":5990:6009  balances[owner].add */\n      tag_257\n      swap1\n        /* \"contracts/tokens/Tether.sol\":5990:6014  balances[owner].add(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"contracts/tokens/Tether.sol\":5972:5980  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":5972:5987  balances[owner] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":5981:5986  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":5972:5987  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":5972:6014  balances[owner] = balances[owner].add(fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":6045:6050  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":6029:6056  Transfer(_from, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":6038:6043  _from */\n      dup8\n        /* \"contracts/tokens/Tether.sol\":6029:6056  Transfer(_from, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/tokens/Tether.sol\":6052:6055  fee */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":6029:6056  Transfer(_from, owner, fee) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokens/Tether.sol\":5944:6068  if (fee > 0) {\r... */\n    tag_258:\n        /* \"contracts/tokens/Tether.sol\":6094:6097  _to */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":6078:6110  Transfer(_from, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":6087:6092  _from */\n      dup8\n        /* \"contracts/tokens/Tether.sol\":6078:6110  Transfer(_from, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/tokens/Tether.sol\":6099:6109  sendAmount */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":6078:6110  Transfer(_from, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokens/Tether.sol\":5217:6118  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":4364:4480  function balanceOf(address _owner) public constant returns (uint balance) {\r... */\n    tag_183:\n        /* \"contracts/tokens/Tether.sol\":4424:4436  uint balance */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":4456:4464  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":4456:4472  balances[_owner] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":4465:4471  _owner */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":4456:4472  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/tokens/Tether.sol\":4449:4472  return balances[_owner] */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":4364:4480  function balanceOf(address _owner) public constant returns (uint balance) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":3573:4146  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n    tag_202:\n        /* \"contracts/tokens/Tether.sol\":3659:3667  uint fee */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":3796:3811  uint sendAmount */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":3640:3646  2 * 32 */\n      0x40\n        /* \"contracts/tokens/Tether.sol\":3377:3378  4 */\n      0x4\n        /* \"contracts/tokens/Tether.sol\":3370:3374  size */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":3370:3378  size + 4 */\n      add\n        /* \"contracts/tokens/Tether.sol\":3352:3360  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/tokens/Tether.sol\":3352:3367  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":3352:3378  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/tokens/Tether.sol\":3350:3379  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/tokens/Tether.sol\":3342:3380  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_262\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_262:\n        /* \"contracts/tokens/Tether.sol\":3670:3710  (_value.mul(basisPointsRate)).div(10000) */\n      tag_264\n        /* \"contracts/tokens/Tether.sol\":3704:3709  10000 */\n      0x2710\n        /* \"contracts/tokens/Tether.sol\":3671:3698  _value.mul(basisPointsRate) */\n      tag_265\n        /* \"contracts/tokens/Tether.sol\":3682:3697  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/tokens/Tether.sol\":3671:3677  _value */\n      dup8\n        /* \"contracts/tokens/Tether.sol\":3671:3681  _value.mul */\n      tag_209\n      swap1\n        /* \"contracts/tokens/Tether.sol\":3671:3698  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_265:\n        /* \"contracts/tokens/Tether.sol\":3670:3703  (_value.mul(basisPointsRate)).div */\n      tag_249\n      swap1\n        /* \"contracts/tokens/Tether.sol\":3670:3710  (_value.mul(basisPointsRate)).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"contracts/tokens/Tether.sol\":3659:3710  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/tokens/Tether.sol\":3731:3741  maximumFee */\n      sload(0x4)\n        /* \"contracts/tokens/Tether.sol\":3725:3728  fee */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":3725:3741  fee > maximumFee */\n      gt\n        /* \"contracts/tokens/Tether.sol\":3721:3786  if (fee > maximumFee) {\r... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":3764:3774  maximumFee */\n      sload(0x4)\n        /* \"contracts/tokens/Tether.sol\":3758:3774  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/tokens/Tether.sol\":3721:3786  if (fee > maximumFee) {\r... */\n    tag_266:\n        /* \"contracts/tokens/Tether.sol\":3814:3829  _value.sub(fee) */\n      tag_267\n        /* \"contracts/tokens/Tether.sol\":3825:3828  fee */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":3814:3820  _value */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":3814:3824  _value.sub */\n      tag_253\n      swap1\n        /* \"contracts/tokens/Tether.sol\":3814:3829  _value.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_267:\n        /* \"contracts/tokens/Tether.sol\":3796:3829  uint sendAmount = _value.sub(fee) */\n      swap2\n      pop\n        /* \"contracts/tokens/Tether.sol\":3863:3895  balances[msg.sender].sub(_value) */\n      tag_268\n        /* \"contracts/tokens/Tether.sol\":3888:3894  _value */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":3863:3871  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":3863:3883  balances[msg.sender] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":3872:3882  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":3863:3883  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/tokens/Tether.sol\":3863:3887  balances[msg.sender].sub */\n      tag_253\n      swap1\n        /* \"contracts/tokens/Tether.sol\":3863:3895  balances[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/tokens/Tether.sol\":3840:3848  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":3840:3860  balances[msg.sender] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":3849:3859  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":3840:3860  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":3840:3895  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":3922:3951  balances[_to].add(sendAmount) */\n      tag_269\n        /* \"contracts/tokens/Tether.sol\":3940:3950  sendAmount */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":3922:3930  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":3922:3935  balances[_to] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":3931:3934  _to */\n      dup9\n        /* \"contracts/tokens/Tether.sol\":3922:3935  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/tokens/Tether.sol\":3922:3939  balances[_to].add */\n      tag_257\n      swap1\n        /* \"contracts/tokens/Tether.sol\":3922:3951  balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"contracts/tokens/Tether.sol\":3906:3914  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":3906:3919  balances[_to] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":3915:3918  _to */\n      dup8\n        /* \"contracts/tokens/Tether.sol\":3906:3919  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":3906:3951  balances[_to] = balances[_to].add(sendAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":3972:3973  0 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":3966:3969  fee */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":3966:3973  fee > 0 */\n      gt\n        /* \"contracts/tokens/Tether.sol\":3962:4091  if (fee > 0) {\r... */\n      iszero\n      tag_270\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":4008:4032  balances[owner].add(fee) */\n      tag_271\n        /* \"contracts/tokens/Tether.sol\":4028:4031  fee */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":4008:4016  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":4008:4023  balances[owner] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":4017:4022  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":4008:4023  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/tokens/Tether.sol\":4008:4027  balances[owner].add */\n      tag_257\n      swap1\n        /* \"contracts/tokens/Tether.sol\":4008:4032  balances[owner].add(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"contracts/tokens/Tether.sol\":3990:3998  balances */\n      0x2\n        /* \"contracts/tokens/Tether.sol\":3990:4005  balances[owner] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":3999:4004  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":3990:4005  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":3990:4032  balances[owner] = balances[owner].add(fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tokens/Tether.sol\":4068:4073  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":4047:4079  Transfer(msg.sender, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":4056:4066  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":4047:4079  Transfer(msg.sender, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/tokens/Tether.sol\":4075:4078  fee */\n      dup6\n        /* \"contracts/tokens/Tether.sol\":4047:4079  Transfer(msg.sender, owner, fee) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokens/Tether.sol\":3962:4091  if (fee > 0) {\r... */\n    tag_270:\n        /* \"contracts/tokens/Tether.sol\":4122:4125  _to */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":4101:4138  Transfer(msg.sender, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tokens/Tether.sol\":4110:4120  msg.sender */\n      caller\n        /* \"contracts/tokens/Tether.sol\":4101:4138  Transfer(msg.sender, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/tokens/Tether.sol\":4127:4137  sendAmount */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":4101:4138  Transfer(msg.sender, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokens/Tether.sol\":3573:4146  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":217:428  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_209:\n        /* \"contracts/tokens/Tether.sol\":275:282  uint256 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":355:364  uint256 c */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":304:305  0 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":299:300  a */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":299:305  a == 0 */\n      eq\n        /* \"contracts/tokens/Tether.sol\":295:342  if (a == 0) {\r... */\n      iszero\n      tag_273\n      jumpi\n        /* \"contracts/tokens/Tether.sol\":329:330  0 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":322:330  return 0 */\n      swap2\n      pop\n      jump(tag_272)\n        /* \"contracts/tokens/Tether.sol\":295:342  if (a == 0) {\r... */\n    tag_273:\n        /* \"contracts/tokens/Tether.sol\":371:372  b */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":367:368  a */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":367:372  a * b */\n      mul\n        /* \"contracts/tokens/Tether.sol\":355:372  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":399:400  b */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":394:395  a */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":390:391  c */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":390:395  c / a */\n      dup2\n      iszero\n      iszero\n      tag_274\n      jumpi\n      invalid\n    tag_274:\n      div\n        /* \"contracts/tokens/Tether.sol\":390:400  c / a == b */\n      eq\n        /* \"contracts/tokens/Tether.sol\":383:401  assert(c / a == b) */\n      iszero\n      iszero\n      tag_275\n      jumpi\n      invalid\n    tag_275:\n        /* \"contracts/tokens/Tether.sol\":419:420  c */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":412:420  return c */\n      swap2\n      pop\n        /* \"contracts/tokens/Tether.sol\":217:428  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_272:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":7271:7416  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n    tag_226:\n        /* \"contracts/tokens/Tether.sol\":7349:7363  uint remaining */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":7383:7390  allowed */\n      0x5\n        /* \"contracts/tokens/Tether.sol\":7383:7398  allowed[_owner] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":7391:7397  _owner */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":7383:7398  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/tokens/Tether.sol\":7383:7408  allowed[_owner][_spender] */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":7399:7407  _spender */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":7383:7408  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/tokens/Tether.sol\":7376:7408  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":7271:7416  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":436:724  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_249:\n        /* \"contracts/tokens/Tether.sol\":494:501  uint256 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":593:602  uint256 c */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":609:610  b */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":605:606  a */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":605:610  a / b */\n      dup2\n      iszero\n      iszero\n      tag_278\n      jumpi\n      invalid\n    tag_278:\n      div\n        /* \"contracts/tokens/Tether.sol\":593:610  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":715:716  c */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":708:716  return c */\n      swap2\n      pop\n        /* \"contracts/tokens/Tether.sol\":436:724  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":732:855  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_253:\n        /* \"contracts/tokens/Tether.sol\":790:797  uint256 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":822:823  a */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":817:818  b */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":817:823  b <= a */\n      gt\n      iszero\n        /* \"contracts/tokens/Tether.sol\":810:824  assert(b <= a) */\n      iszero\n      iszero\n      tag_280\n      jumpi\n      invalid\n    tag_280:\n        /* \"contracts/tokens/Tether.sol\":846:847  b */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":842:843  a */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":842:847  a - b */\n      sub\n        /* \"contracts/tokens/Tether.sol\":835:847  return a - b */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":732:855  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/Tether.sol\":863:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_257:\n        /* \"contracts/tokens/Tether.sol\":921:928  uint256 */\n      0x0\n        /* \"contracts/tokens/Tether.sol\":941:950  uint256 c */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":957:958  b */\n      dup3\n        /* \"contracts/tokens/Tether.sol\":953:954  a */\n      dup5\n        /* \"contracts/tokens/Tether.sol\":953:958  a + b */\n      add\n        /* \"contracts/tokens/Tether.sol\":941:958  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/tokens/Tether.sol\":981:982  a */\n      dup4\n        /* \"contracts/tokens/Tether.sol\":976:977  c */\n      dup2\n        /* \"contracts/tokens/Tether.sol\":976:982  c >= a */\n      lt\n      iszero\n        /* \"contracts/tokens/Tether.sol\":969:983  assert(c >= a) */\n      iszero\n      iszero\n      tag_282\n      jumpi\n      invalid\n    tag_282:\n        /* \"contracts/tokens/Tether.sol\":1001:1002  c */\n      dup1\n        /* \"contracts/tokens/Tether.sol\":994:1002  return c */\n      swap2\n      pop\n        /* \"contracts/tokens/Tether.sol\":863:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582054d4b0872072efed3976463f72c661e8e12d095c324850e6460601cb413712d50029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "606060405260008060146101000a81548160ff0219169083151502179055506000600355600060045534156200003457600080fd5b60405162002d7a38038062002d7a83398101604052808051906020019091908051820191906020018051820191906020018051906020019091905050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836001819055508260079080519060200190620000cf9291906200017a565b508160089080519060200190620000e89291906200017a565b508060098190555083600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600a60146101000a81548160ff0219169083151502179055505050505062000229565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001bd57805160ff1916838001178555620001ee565b82800160010185558215620001ee579182015b82811115620001ed578251825591602001919060010190620001d0565b5b509050620001fd919062000201565b5090565b6200022691905b808211156200022257600081600090555060010162000208565b5090565b90565b612b4180620002396000396000f30060606040523615610194576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101995780630753c30c14610227578063095ea7b3146102605780630e136b19146102a25780630ecb93c0146102cf57806318160ddd1461030857806323b872dd1461033157806326976e3f1461039257806327e235e3146103e7578063313ce56714610434578063353907141461045d5780633eaaf86b146104865780633f4ba83a146104af57806359bf1abe146104c45780635c658165146105155780635c975abb1461058157806370a08231146105ae5780638456cb59146105fb578063893d20e8146106105780638da5cb5b1461066557806395d89b41146106ba578063a9059cbb14610748578063c0324c771461078a578063cc872b66146107b6578063db006a75146107d9578063dd62ed3e146107fc578063dd644f7214610868578063e47d606014610891578063e4997dc5146108e2578063e5b5019a1461091b578063f2fde38b14610944578063f3bdc2281461097d575b600080fd5b34156101a457600080fd5b6101ac6109b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ec5780820151818401526020810190506101d1565b50505050905090810190601f1680156102195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023257600080fd5b61025e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a54565b005b341561026b57600080fd5b6102a0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b71565b005b34156102ad57600080fd5b6102b5610cbf565b604051808215151515815260200191505060405180910390f35b34156102da57600080fd5b610306600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610cd2565b005b341561031357600080fd5b61031b610deb565b6040518082815260200191505060405180910390f35b341561033c57600080fd5b610390600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ebb565b005b341561039d57600080fd5b6103a561109b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103f257600080fd5b61041e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110c1565b6040518082815260200191505060405180910390f35b341561043f57600080fd5b6104476110d9565b6040518082815260200191505060405180910390f35b341561046857600080fd5b6104706110df565b6040518082815260200191505060405180910390f35b341561049157600080fd5b6104996110e5565b6040518082815260200191505060405180910390f35b34156104ba57600080fd5b6104c26110eb565b005b34156104cf57600080fd5b6104fb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111a9565b604051808215151515815260200191505060405180910390f35b341561052057600080fd5b61056b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ff565b6040518082815260200191505060405180910390f35b341561058c57600080fd5b610594611224565b604051808215151515815260200191505060405180910390f35b34156105b957600080fd5b6105e5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611237565b6040518082815260200191505060405180910390f35b341561060657600080fd5b61060e611346565b005b341561061b57600080fd5b610623611406565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561067057600080fd5b61067861142f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106c557600080fd5b6106cd611454565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561070d5780820151818401526020810190506106f2565b50505050905090810190601f16801561073a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561075357600080fd5b610788600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506114f2565b005b341561079557600080fd5b6107b4600480803590602001909190803590602001909190505061169c565b005b34156107c157600080fd5b6107d76004808035906020019091905050611781565b005b34156107e457600080fd5b6107fa6004808035906020019091905050611978565b005b341561080757600080fd5b610852600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611b0b565b6040518082815260200191505060405180910390f35b341561087357600080fd5b61087b611c50565b6040518082815260200191505060405180910390f35b341561089c57600080fd5b6108c8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c56565b604051808215151515815260200191505060405180910390f35b34156108ed57600080fd5b610919600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c76565b005b341561092657600080fd5b61092e611d8f565b6040518082815260200191505060405180910390f35b341561094f57600080fd5b61097b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611db3565b005b341561098857600080fd5b6109b4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e88565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4c5780601f10610a2157610100808354040283529160200191610a4c565b820191906000526020600020905b815481529060010190602001808311610a2f57829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610aaf57600080fd5b6001600a60146101000a81548160ff02191690831515021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b604060048101600036905010151515610b8957600080fd5b600a60149054906101000a900460ff1615610caf57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515610c9657600080fd5b6102c65a03f11515610ca757600080fd5b505050610cba565b610cb9838361200c565b5b505050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d2d57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610eb257600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610e9057600080fd5b6102c65a03f11515610ea157600080fd5b505050604051805190509050610eb8565b60015490505b90565b600060149054906101000a900460ff16151515610ed757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610f3057600080fd5b600a60149054906101000a900460ff161561108a57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338585856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b151561107157600080fd5b6102c65a03f1151561108257600080fd5b505050611096565b6110958383836121a9565b5b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114657600080fd5b600060149054906101000a900460ff16151561116157600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561133557600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561131357600080fd5b6102c65a03f1151561132457600080fd5b505050604051805190509050611341565b61133e82612650565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a157600080fd5b600060149054906101000a900460ff161515156113bd57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114ea5780601f106114bf576101008083540402835291602001916114ea565b820191906000526020600020905b8154815290600101906020018083116114cd57829003601f168201915b505050505081565b600060149054906101000a900460ff1615151561150e57600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561156757600080fd5b600a60149054906101000a900460ff161561168d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3384846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561167457600080fd5b6102c65a03f1151561168557600080fd5b505050611698565b6116978282612699565b5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116f757600080fd5b60148210151561170657600080fd5b60328110151561171557600080fd5b81600381905550611734600954600a0a82612a0190919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117dc57600080fd5b60015481600154011115156117f057600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115156118c057600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a816040518082815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119d357600080fd5b80600154101515156119e457600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611a5357600080fd5b8060016000828254039250508190555080600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44816040518082815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615611c3d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1515611c1b57600080fd5b6102c65a03f11515611c2c57600080fd5b505050604051805190509050611c4a565b611c478383612a3c565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cd157600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e0e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611e8557806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ee557600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611f3d57600080fd5b611f4682611237565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60406004810160003690501015151561202457600080fd5b600082141580156120b257506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1515156120be57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60008060006060600481016000369050101515156121c657600080fd5b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054935061226e61271061226060035488612a0190919063ffffffff16565b612ac390919063ffffffff16565b92506004548311156122805760045492505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84101561233c576122bb8585612ade90919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61234f8386612ade90919063ffffffff16565b91506123a385600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061243882600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156125e2576124f783600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806040600481016000369050101515156126b457600080fd5b6126dd6127106126cf60035487612a0190919063ffffffff16565b612ac390919063ffffffff16565b92506004548311156126ef5760045492505b6127028385612ade90919063ffffffff16565b915061275684600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127eb82600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000831115612995576128aa83600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050505050565b6000806000841415612a165760009150612a35565b8284029050828482811515612a2757fe5b04141515612a3157fe5b8091505b5092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284811515612ad157fe5b0490508091505092915050565b6000828211151515612aec57fe5b818303905092915050565b6000808284019050838110151515612b0b57fe5b80915050929150505600a165627a7a7230582054d4b0872072efed3976463f72c661e8e12d095c324850e6460601cb413712d50029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE CALLVALUE ISZERO PUSH3 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2D7A CODESIZE SUB DUP1 PUSH3 0x2D7A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD DUP3 ADD SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD DUP3 ADD SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xCF SWAP3 SWAP2 SWAP1 PUSH3 0x17A JUMP JUMPDEST POP DUP2 PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xE8 SWAP3 SWAP2 SWAP1 PUSH3 0x17A JUMP JUMPDEST POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x229 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1BD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1EE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1EE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1ED JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1D0 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x1FD SWAP2 SWAP1 PUSH3 0x201 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x226 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x222 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x208 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2B41 DUP1 PUSH3 0x239 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x78A JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x868 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x8E2 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x944 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x97D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA54 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B5 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xCD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31B PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A5 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x447 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x470 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x499 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C2 PUSH2 0x10EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60E PUSH2 0x1346 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x623 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CD PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x73A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x788 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x14F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x169C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1978 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x852 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87B PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x919 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92E PUSH2 0x1D8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DB3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1E88 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xAAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCAF JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xCB9 DUP4 DUP4 PUSH2 0x200C JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEB2 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xE90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x108A JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x1095 DUP4 DUP4 DUP4 PUSH2 0x21A9 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1335 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x133E DUP3 PUSH2 0x2650 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x168D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E18980A CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1697 DUP3 DUP3 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x16F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT ISZERO ISZERO PUSH2 0x1706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT ISZERO ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1734 PUSH1 0x9 SLOAD PUSH1 0xA EXP DUP3 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x17DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x1 SLOAD ADD GT ISZERO ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD GT ISZERO ISZERO PUSH2 0x18C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C3D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1C47 DUP4 DUP4 PUSH2 0x2A3C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E85 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1EE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1F3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F46 DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x2024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x20B2 JUMPI POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x20BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x226E PUSH2 0x2710 PUSH2 0x2260 PUSH1 0x3 SLOAD DUP9 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2280 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 LT ISZERO PUSH2 0x233C JUMPI PUSH2 0x22BB DUP6 DUP6 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x234F DUP4 DUP7 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x23A3 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2438 DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x25E2 JUMPI PUSH2 0x24F7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x26B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DD PUSH2 0x2710 PUSH2 0x26CF PUSH1 0x3 SLOAD DUP8 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x26EF JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x2702 DUP4 DUP6 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x2756 DUP5 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x27EB DUP3 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x2995 JUMPI PUSH2 0x28AA DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x2A16 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2A35 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2A27 JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x2A31 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2AD1 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x2AEC JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x2B0B JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SLOAD 0xd4 0xb0 DUP8 KECCAK256 PUSH19 0xEFED3976463F72C661E8E12D095C324850E646 MOD ADD 0xcb COINBASE CALLDATACOPY SLT 0xd5 STOP 0x29 ",
							"sourceMap": "10045:4917:0:-;;;7639:5;7618:26;;;;;;;;;;;;;;;;;;;;3183:1;3153:31;;3216:1;3191:26;;10555:296;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1441:10;1433:5;;:18;;;;;;;;;;;;;;;;;;10676:14;10661:12;:29;;;;10708:5;10701:4;:12;;;;;;;;;;;;:::i;:::-;;10733:7;10724:6;:16;;;;;;;;;;;;:::i;:::-;;10762:9;10751:8;:20;;;;10800:14;10782:8;:15;10791:5;;;;;;;;;;;10782:15;;;;;;;;;;;;;;;:32;;;;10838:5;10825:10;;:18;;;;;;;;;;;;;;;;;;10555:296;;;;10045:4917;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040523615610194576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101995780630753c30c14610227578063095ea7b3146102605780630e136b19146102a25780630ecb93c0146102cf57806318160ddd1461030857806323b872dd1461033157806326976e3f1461039257806327e235e3146103e7578063313ce56714610434578063353907141461045d5780633eaaf86b146104865780633f4ba83a146104af57806359bf1abe146104c45780635c658165146105155780635c975abb1461058157806370a08231146105ae5780638456cb59146105fb578063893d20e8146106105780638da5cb5b1461066557806395d89b41146106ba578063a9059cbb14610748578063c0324c771461078a578063cc872b66146107b6578063db006a75146107d9578063dd62ed3e146107fc578063dd644f7214610868578063e47d606014610891578063e4997dc5146108e2578063e5b5019a1461091b578063f2fde38b14610944578063f3bdc2281461097d575b600080fd5b34156101a457600080fd5b6101ac6109b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ec5780820151818401526020810190506101d1565b50505050905090810190601f1680156102195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023257600080fd5b61025e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a54565b005b341561026b57600080fd5b6102a0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b71565b005b34156102ad57600080fd5b6102b5610cbf565b604051808215151515815260200191505060405180910390f35b34156102da57600080fd5b610306600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610cd2565b005b341561031357600080fd5b61031b610deb565b6040518082815260200191505060405180910390f35b341561033c57600080fd5b610390600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ebb565b005b341561039d57600080fd5b6103a561109b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103f257600080fd5b61041e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110c1565b6040518082815260200191505060405180910390f35b341561043f57600080fd5b6104476110d9565b6040518082815260200191505060405180910390f35b341561046857600080fd5b6104706110df565b6040518082815260200191505060405180910390f35b341561049157600080fd5b6104996110e5565b6040518082815260200191505060405180910390f35b34156104ba57600080fd5b6104c26110eb565b005b34156104cf57600080fd5b6104fb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111a9565b604051808215151515815260200191505060405180910390f35b341561052057600080fd5b61056b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ff565b6040518082815260200191505060405180910390f35b341561058c57600080fd5b610594611224565b604051808215151515815260200191505060405180910390f35b34156105b957600080fd5b6105e5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611237565b6040518082815260200191505060405180910390f35b341561060657600080fd5b61060e611346565b005b341561061b57600080fd5b610623611406565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561067057600080fd5b61067861142f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106c557600080fd5b6106cd611454565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561070d5780820151818401526020810190506106f2565b50505050905090810190601f16801561073a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561075357600080fd5b610788600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506114f2565b005b341561079557600080fd5b6107b4600480803590602001909190803590602001909190505061169c565b005b34156107c157600080fd5b6107d76004808035906020019091905050611781565b005b34156107e457600080fd5b6107fa6004808035906020019091905050611978565b005b341561080757600080fd5b610852600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611b0b565b6040518082815260200191505060405180910390f35b341561087357600080fd5b61087b611c50565b6040518082815260200191505060405180910390f35b341561089c57600080fd5b6108c8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c56565b604051808215151515815260200191505060405180910390f35b34156108ed57600080fd5b610919600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c76565b005b341561092657600080fd5b61092e611d8f565b6040518082815260200191505060405180910390f35b341561094f57600080fd5b61097b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611db3565b005b341561098857600080fd5b6109b4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e88565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4c5780601f10610a2157610100808354040283529160200191610a4c565b820191906000526020600020905b815481529060010190602001808311610a2f57829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610aaf57600080fd5b6001600a60146101000a81548160ff02191690831515021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b604060048101600036905010151515610b8957600080fd5b600a60149054906101000a900460ff1615610caf57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515610c9657600080fd5b6102c65a03f11515610ca757600080fd5b505050610cba565b610cb9838361200c565b5b505050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d2d57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610eb257600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610e9057600080fd5b6102c65a03f11515610ea157600080fd5b505050604051805190509050610eb8565b60015490505b90565b600060149054906101000a900460ff16151515610ed757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610f3057600080fd5b600a60149054906101000a900460ff161561108a57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338585856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b151561107157600080fd5b6102c65a03f1151561108257600080fd5b505050611096565b6110958383836121a9565b5b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114657600080fd5b600060149054906101000a900460ff16151561116157600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561133557600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561131357600080fd5b6102c65a03f1151561132457600080fd5b505050604051805190509050611341565b61133e82612650565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a157600080fd5b600060149054906101000a900460ff161515156113bd57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114ea5780601f106114bf576101008083540402835291602001916114ea565b820191906000526020600020905b8154815290600101906020018083116114cd57829003601f168201915b505050505081565b600060149054906101000a900460ff1615151561150e57600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561156757600080fd5b600a60149054906101000a900460ff161561168d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3384846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561167457600080fd5b6102c65a03f1151561168557600080fd5b505050611698565b6116978282612699565b5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116f757600080fd5b60148210151561170657600080fd5b60328110151561171557600080fd5b81600381905550611734600954600a0a82612a0190919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117dc57600080fd5b60015481600154011115156117f057600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115156118c057600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a816040518082815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119d357600080fd5b80600154101515156119e457600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611a5357600080fd5b8060016000828254039250508190555080600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44816040518082815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615611c3d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1515611c1b57600080fd5b6102c65a03f11515611c2c57600080fd5b505050604051805190509050611c4a565b611c478383612a3c565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cd157600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e0e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611e8557806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ee557600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611f3d57600080fd5b611f4682611237565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60406004810160003690501015151561202457600080fd5b600082141580156120b257506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1515156120be57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60008060006060600481016000369050101515156121c657600080fd5b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054935061226e61271061226060035488612a0190919063ffffffff16565b612ac390919063ffffffff16565b92506004548311156122805760045492505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84101561233c576122bb8585612ade90919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61234f8386612ade90919063ffffffff16565b91506123a385600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061243882600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156125e2576124f783600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806040600481016000369050101515156126b457600080fd5b6126dd6127106126cf60035487612a0190919063ffffffff16565b612ac390919063ffffffff16565b92506004548311156126ef5760045492505b6127028385612ade90919063ffffffff16565b915061275684600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127eb82600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000831115612995576128aa83600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050505050565b6000806000841415612a165760009150612a35565b8284029050828482811515612a2757fe5b04141515612a3157fe5b8091505b5092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284811515612ad157fe5b0490508091505092915050565b6000828211151515612aec57fe5b818303905092915050565b6000808284019050838110151515612b0b57fe5b80915050929150505600a165627a7a7230582054d4b0872072efed3976463f72c661e8e12d095c324850e6460601cb413712d50029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x78A JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x868 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x8E2 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x944 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x97D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA54 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B5 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xCD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31B PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A5 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x447 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x470 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x499 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C2 PUSH2 0x10EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60E PUSH2 0x1346 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x623 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CD PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x73A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x788 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x14F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x169C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1978 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x852 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87B PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x919 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92E PUSH2 0x1D8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DB3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1E88 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xAAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCAF JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xCB9 DUP4 DUP4 PUSH2 0x200C JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEB2 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xE90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x108A JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x1095 DUP4 DUP4 DUP4 PUSH2 0x21A9 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1335 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x133E DUP3 PUSH2 0x2650 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x168D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E18980A CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1697 DUP3 DUP3 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x16F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT ISZERO ISZERO PUSH2 0x1706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT ISZERO ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1734 PUSH1 0x9 SLOAD PUSH1 0xA EXP DUP3 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x17DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x1 SLOAD ADD GT ISZERO ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD GT ISZERO ISZERO PUSH2 0x18C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C3D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1C47 DUP4 DUP4 PUSH2 0x2A3C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E85 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1EE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1F3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F46 DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x2024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x20B2 JUMPI POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x20BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x226E PUSH2 0x2710 PUSH2 0x2260 PUSH1 0x3 SLOAD DUP9 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2280 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 LT ISZERO PUSH2 0x233C JUMPI PUSH2 0x22BB DUP6 DUP6 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x234F DUP4 DUP7 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x23A3 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2438 DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x25E2 JUMPI PUSH2 0x24F7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x26B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DD PUSH2 0x2710 PUSH2 0x26CF PUSH1 0x3 SLOAD DUP8 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x26EF JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x2702 DUP4 DUP6 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x2756 DUP5 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x27EB DUP3 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x2995 JUMPI PUSH2 0x28AA DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x2A16 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2A35 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2A27 JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x2A31 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2AD1 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x2AEC JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x2B0B JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SLOAD 0xd4 0xb0 DUP8 KECCAK256 PUSH19 0xEFED3976463F72C661E8E12D095C324850E646 MOD ADD 0xcb COINBASE CALLDATACOPY SLT 0xd5 STOP 0x29 ",
							"sourceMap": "10045:4917:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10113:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12869:181:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12123:302;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10229:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8788:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;13116:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11347:362;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10192:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3025:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10165:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3191:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2127:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8234:90;;;;;;;;;;;;;;8502:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4815:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7618:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11794:244;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8059:88;;;;;;;;;;;;;;8634:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1236:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10936:326:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14240:387;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13498:266;;;;;;;;;;;;;;;;;;;;;;;;;;13995:237;;;;;;;;;;;;;;;;;;;;;;;;;;12510:293;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3153:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8729:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8941:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;4885:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;9109:324;;;;;;;;;;;;;;;;;;;;;;;;;;;;10113:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12869:181::-;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;12955:4;12942:10;;:17;;;;;;;;;;;;;;;;;;12988:16;12970:15;;:34;;;;;;;;;;;;;;;;;;13015:27;13025:16;13015:27;;;;;;;;;;;;;;;;;;;;;;12869:181;:::o;12123:302::-;12194:6;3377:1;3370:4;:8;3352;;:15;;:26;3350:29;3342:38;;;;;;;;12217:10;;;;;;;;;;;12213:205;;;12273:15;;;;;;;;;;;12251:54;;;12306:10;12318:8;12328:6;12251:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12244:91;;12213:205;12375:31;12389:8;12399:6;12375:13;:31::i;:::-;3391:1;12123:302;;;:::o;10229:22::-;;;;;;;;;;;;;:::o;8788:145::-;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;8885:4;8858:13;:24;8872:9;8858:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;8900:25;8915:9;8900:25;;;;;;;;;;;;;;;;;;;;;;8788:145;:::o;13116:218::-;13164:4;13185:10;;;;;;;;;;;13181:146;;;13233:15;;;;;;;;;;;13219:42;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13212:51;;;;13181:146;13303:12;;13296:19;;13116:218;;:::o;11347:362::-;7794:6;;;;;;;;;;;7793:7;7785:16;;;;;;;;11451:13;:20;11465:5;11451:20;;;;;;;;;;;;;;;;;;;;;;;;;11450:21;11442:30;;;;;;;;11487:10;;;;;;;;;;;11483:219;;;11543:15;;;;;;;;;;;11521:59;;;11581:10;11593:5;11600:3;11605:6;11521:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11514:98;;11483:219;11652:38;11671:5;11678:3;11683:6;11652:18;:38::i;:::-;7808:1;11347:362;;;:::o;10192:30::-;;;;;;;;;;;;;:::o;3025:40::-;;;;;;;;;;;;;;;;;:::o;10165:20::-;;;;:::o;3191:26::-;;;;:::o;2127:24::-;;;;:::o;8234:90::-;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;7954:6;;;;;;;;;;;7946:15;;;;;;;;8297:5;8288:6;;:14;;;;;;;;;;;;;;;;;;8309:9;;;;;;;;;;8234:90::o;8502:124::-;8573:4;8597:13;:21;8611:6;8597:21;;;;;;;;;;;;;;;;;;;;;;;;;8590:28;;8502:124;;;:::o;4815:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7618:26::-;;;;;;;;;;;;;:::o;11794:244::-;11851:4;11872:10;;;;;;;;;;;11868:163;;;11928:15;;;;;;;;;;;11906:48;;;11955:3;11906:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11899:60;;;;11868:163;11999:20;12015:3;11999:15;:20::i;:::-;11992:27;;11794:244;;;;:::o;8059:88::-;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;7794:6;;;;;;;;;;;7793:7;7785:16;;;;;;;;8123:4;8114:6;;:13;;;;;;;;;;;;;;;;;;8134:7;;;;;;;;;;8059:88::o;8634:87::-;8681:7;8708:5;;;;;;;;;;;8701:12;;8634:87;:::o;1236:20::-;;;;;;;;;;;;;:::o;10138:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10936:326::-;7794:6;;;;;;;;;;;7793:7;7785:16;;;;;;;;11021:13;:25;11035:10;11021:25;;;;;;;;;;;;;;;;;;;;;;;;;11020:26;11012:35;;;;;;;;11062:10;;;;;;;;;;;11058:197;;;11118:15;;;;;;;;;;;11096:55;;;11152:10;11164:3;11169:6;11096:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11089:87;;11058:197;11216:27;11231:3;11236:6;11216:14;:27::i;:::-;7808:1;10936:326;;:::o;14240:387::-;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;14438:2;14421:14;:19;14413:28;;;;;;;;14472:2;14460:9;:14;14452:23;;;;;;;;14506:14;14488:15;:32;;;;14544:27;14562:8;;14558:2;:12;14544:9;:13;;:27;;;;:::i;:::-;14531:10;:40;;;;14584:35;14591:15;;14608:10;;14584:35;;;;;;;;;;;;;;;;;;;;;;;;14240:387;;:::o;13498:266::-;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;13586:12;;13577:6;13562:12;;:21;:36;13554:45;;;;;;;;13645:8;:15;13654:5;;;;;;;;;;;13645:15;;;;;;;;;;;;;;;;13636:6;13618:8;:15;13627:5;;;;;;;;;;;13618:15;;;;;;;;;;;;;;;;:24;:42;13610:51;;;;;;;;13693:6;13674:8;:15;13683:5;;;;;;;;;;;13674:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;13726:6;13710:12;;:22;;;;;;;;;;;13743:13;13749:6;13743:13;;;;;;;;;;;;;;;;;;13498:266;:::o;13995:237::-;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;14076:6;14060:12;;:22;;14052:31;;;;;;;;14121:6;14102:8;:15;14111:5;;;;;;;;;;;14102:15;;;;;;;;;;;;;;;;:25;;14094:34;;;;;;;;14157:6;14141:12;;:22;;;;;;;;;;;14193:6;14174:8;:15;14183:5;;;;;;;;;;;14174:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;14210:14;14217:6;14210:14;;;;;;;;;;;;;;;;;;13995:237;:::o;12510:293::-;12588:14;12619:10;;;;;;;;;;;12615:181;;;12667:15;;;;;;;;;;;12653:40;;;12694:6;12702:8;12653:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12646:65;;;;12615:181;12751:33;12767:6;12775:8;12751:15;:33::i;:::-;12744:40;;12510:293;;;;;:::o;3153:31::-;;;;:::o;8729:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;8941:160::-;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;9047:5;9017:13;:27;9031:12;9017:27;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;9063:30;9080:12;9063:30;;;;;;;;;;;;;;;;;;;;;;8941:160;:::o;4885:42::-;4917:10;4885:42;:::o;1808:151::-;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;1905:1;1885:22;;:8;:22;;;;1881:71;;;1932:8;1924:5;;:16;;;;;;;;;;;;;;;;;;1881:71;1808:151;:::o;9109:324::-;9242:15;1608:5;;;;;;;;;;;1594:19;;:10;:19;;;1586:28;;;;;;;;9199:13;:31;9213:16;9199:31;;;;;;;;;;;;;;;;;;;;;;;;;9191:40;;;;;;;;9260:27;9270:16;9260:9;:27::i;:::-;9242:45;;9327:1;9298:8;:26;9307:16;9298:26;;;;;;;;;;;;;;;:30;;;;9355:10;9339:12;;:26;;;;;;;;;;;9376:49;9396:16;9414:10;9376:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;9109:324;;:::o;6365:573::-;6436:6;3377:1;3370:4;:8;3352;;:15;;:26;3350:29;3342:38;;;;;;;;6786:1;6776:6;:11;;6775:53;;;;;6826:1;6793:7;:19;6801:10;6793:19;;;;;;;;;;;;;;;:29;6813:8;6793:29;;;;;;;;;;;;;;;;:34;;6775:53;6773:56;6765:65;;;;;;;;6875:6;6843:7;:19;6851:10;6843:19;;;;;;;;;;;;;;;:29;6863:8;6843:29;;;;;;;;;;;;;;;:38;;;;6913:8;6892:38;;6901:10;6892:38;;;6923:6;6892:38;;;;;;;;;;;;;;;;;;6365:573;;;:::o;5217:901::-;5322:14;5536:8;5788:15;5303:6;3377:1;3370:4;:8;3352;;:15;;:26;3350:29;3342:38;;;;;;;;5339:7;:14;5347:5;5339:14;;;;;;;;;;;;;;;:26;5354:10;5339:26;;;;;;;;;;;;;;;;5322:43;;5547:40;5581:5;5548:27;5559:15;;5548:6;:10;;:27;;;;:::i;:::-;5547:33;;:40;;;;:::i;:::-;5536:51;;5608:10;;5602:3;:16;5598:65;;;5641:10;;5635:16;;5598:65;4917:10;5677;:21;5673:105;;;5744:22;5759:6;5744:10;:14;;:22;;;;:::i;:::-;5715:7;:14;5723:5;5715:14;;;;;;;;;;;;;;;:26;5730:10;5715:26;;;;;;;;;;;;;;;:51;;;;5673:105;5806:15;5817:3;5806:6;:10;;:15;;;;:::i;:::-;5788:33;;5850:27;5870:6;5850:8;:15;5859:5;5850:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;5832:8;:15;5841:5;5832:15;;;;;;;;;;;;;;;:45;;;;5904:29;5922:10;5904:8;:13;5913:3;5904:13;;;;;;;;;;;;;;;;:17;;:29;;;;:::i;:::-;5888:8;:13;5897:3;5888:13;;;;;;;;;;;;;;;:45;;;;5954:1;5948:3;:7;5944:124;;;5990:24;6010:3;5990:8;:15;5999:5;;;;;;;;;;;5990:15;;;;;;;;;;;;;;;;:19;;:24;;;;:::i;:::-;5972:8;:15;5981:5;;;;;;;;;;;5972:15;;;;;;;;;;;;;;;:42;;;;6045:5;;;;;;;;;;;6029:27;;6038:5;6029:27;;;6052:3;6029:27;;;;;;;;;;;;;;;;;;5944:124;6094:3;6078:32;;6087:5;6078:32;;;6099:10;6078:32;;;;;;;;;;;;;;;;;;5217:901;;;;;;;:::o;4364:116::-;4424:12;4456:8;:16;4465:6;4456:16;;;;;;;;;;;;;;;;4449:23;;4364:116;;;:::o;3573:573::-;3659:8;3796:15;3640:6;3377:1;3370:4;:8;3352;;:15;;:26;3350:29;3342:38;;;;;;;;3670:40;3704:5;3671:27;3682:15;;3671:6;:10;;:27;;;;:::i;:::-;3670:33;;:40;;;;:::i;:::-;3659:51;;3731:10;;3725:3;:16;3721:65;;;3764:10;;3758:16;;3721:65;3814:15;3825:3;3814:6;:10;;:15;;;;:::i;:::-;3796:33;;3863:32;3888:6;3863:8;:20;3872:10;3863:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;3840:8;:20;3849:10;3840:20;;;;;;;;;;;;;;;:55;;;;3922:29;3940:10;3922:8;:13;3931:3;3922:13;;;;;;;;;;;;;;;;:17;;:29;;;;:::i;:::-;3906:8;:13;3915:3;3906:13;;;;;;;;;;;;;;;:45;;;;3972:1;3966:3;:7;3962:129;;;4008:24;4028:3;4008:8;:15;4017:5;;;;;;;;;;;4008:15;;;;;;;;;;;;;;;;:19;;:24;;;;:::i;:::-;3990:8;:15;3999:5;;;;;;;;;;;3990:15;;;;;;;;;;;;;;;:42;;;;4068:5;;;;;;;;;;;4047:32;;4056:10;4047:32;;;4075:3;4047:32;;;;;;;;;;;;;;;;;;3962:129;4122:3;4101:37;;4110:10;4101:37;;;4127:10;4101:37;;;;;;;;;;;;;;;;;;3573:573;;;;;:::o;217:211::-;275:7;355:9;304:1;299;:6;295:47;;;329:1;322:8;;;;295:47;371:1;367;:5;355:17;;399:1;394;390;:5;;;;;;;;:10;383:18;;;;;;419:1;412:8;;217:211;;;;;;:::o;7271:145::-;7349:14;7383:7;:15;7391:6;7383:15;;;;;;;;;;;;;;;:25;7399:8;7383:25;;;;;;;;;;;;;;;;7376:32;;7271:145;;;;:::o;436:288::-;494:7;593:9;609:1;605;:5;;;;;;;;593:17;;715:1;708:8;;436:288;;;;;:::o;732:123::-;790:7;822:1;817;:6;;810:14;;;;;;846:1;842;:5;835:12;;732:123;;;;:::o;863:147::-;921:7;941:9;957:1;953;:5;941:17;;981:1;976;:6;;969:14;;;;;;1001:1;994:8;;863:147;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2214600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_UINT()": "821",
								"_totalSupply()": "625",
								"addBlackList(address)": "21964",
								"allowance(address,address)": "infinite",
								"allowed(address,address)": "902",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"balances(address)": "675",
								"basisPointsRate()": "955",
								"decimals()": "581",
								"deprecate(address)": "42125",
								"deprecated()": "547",
								"destroyBlackFunds(address)": "infinite",
								"getBlackListStatus(address)": "860",
								"getOwner()": "835",
								"isBlackListed(address)": "1130",
								"issue(uint256)": "44321",
								"maximumFee()": "603",
								"name()": "infinite",
								"owner()": "849",
								"pause()": "22181",
								"paused()": "811",
								"redeem(uint256)": "43611",
								"removeBlackList(address)": "22492",
								"setParams(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "21411",
								"unpause()": "22068",
								"upgradedAddress()": "585"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "MSTORE"
								},
								{
									"begin": 7639,
									"end": 7644,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "DUP1"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "EXP"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "DUP2"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "SLOAD"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "DUP2"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "MUL"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "NOT"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "AND"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "SWAP1"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "DUP4"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "ISZERO"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "ISZERO"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "MUL"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "OR"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "SWAP1"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "SSTORE"
								},
								{
									"begin": 7618,
									"end": 7644,
									"name": "POP"
								},
								{
									"begin": 3183,
									"end": 3184,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3153,
									"end": 3184,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 3153,
									"end": 3184,
									"name": "SSTORE"
								},
								{
									"begin": 3216,
									"end": 3217,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3191,
									"end": 3217,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 3191,
									"end": 3217,
									"name": "SSTORE"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "CALLVALUE"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "ISZERO"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "JUMPI"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "DUP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "REVERT"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "JUMPDEST"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "MLOAD"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "PUSHSIZE"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "CODESIZE"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "SUB"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "DUP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "PUSHSIZE"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "DUP4"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "CODECOPY"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "DUP2"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "ADD"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "MSTORE"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "DUP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "DUP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "MLOAD"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "SWAP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "ADD"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "SWAP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "SWAP2"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "SWAP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "DUP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "MLOAD"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "DUP3"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "ADD"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "SWAP2"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "SWAP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "ADD"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "DUP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "MLOAD"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "DUP3"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "ADD"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "SWAP2"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "SWAP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "ADD"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "DUP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "MLOAD"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "SWAP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "ADD"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "SWAP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "SWAP2"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "SWAP1"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "POP"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "POP"
								},
								{
									"begin": 1441,
									"end": 1451,
									"name": "CALLER"
								},
								{
									"begin": 1433,
									"end": 1438,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1433,
									"end": 1438,
									"name": "DUP1"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "EXP"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "DUP2"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "SLOAD"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "DUP2"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "MUL"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "NOT"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "AND"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "SWAP1"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "DUP4"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "AND"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "MUL"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "OR"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "SWAP1"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "SSTORE"
								},
								{
									"begin": 1433,
									"end": 1451,
									"name": "POP"
								},
								{
									"begin": 10676,
									"end": 10690,
									"name": "DUP4"
								},
								{
									"begin": 10661,
									"end": 10673,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10661,
									"end": 10690,
									"name": "DUP2"
								},
								{
									"begin": 10661,
									"end": 10690,
									"name": "SWAP1"
								},
								{
									"begin": 10661,
									"end": 10690,
									"name": "SSTORE"
								},
								{
									"begin": 10661,
									"end": 10690,
									"name": "POP"
								},
								{
									"begin": 10708,
									"end": 10713,
									"name": "DUP3"
								},
								{
									"begin": 10701,
									"end": 10705,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "SWAP1"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "DUP1"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "MLOAD"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "SWAP1"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "ADD"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "SWAP1"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "SWAP3"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "SWAP2"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "SWAP1"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "JUMPDEST"
								},
								{
									"begin": 10701,
									"end": 10713,
									"name": "POP"
								},
								{
									"begin": 10733,
									"end": 10740,
									"name": "DUP2"
								},
								{
									"begin": 10724,
									"end": 10730,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "SWAP1"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "DUP1"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "MLOAD"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "SWAP1"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "ADD"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "SWAP1"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "SWAP3"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "SWAP2"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "SWAP1"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "JUMPDEST"
								},
								{
									"begin": 10724,
									"end": 10740,
									"name": "POP"
								},
								{
									"begin": 10762,
									"end": 10771,
									"name": "DUP1"
								},
								{
									"begin": 10751,
									"end": 10759,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 10751,
									"end": 10771,
									"name": "DUP2"
								},
								{
									"begin": 10751,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 10751,
									"end": 10771,
									"name": "SSTORE"
								},
								{
									"begin": 10751,
									"end": 10771,
									"name": "POP"
								},
								{
									"begin": 10800,
									"end": 10814,
									"name": "DUP4"
								},
								{
									"begin": 10782,
									"end": 10790,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10791,
									"end": 10796,
									"name": "DUP1"
								},
								{
									"begin": 10791,
									"end": 10796,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10791,
									"end": 10796,
									"name": "SWAP1"
								},
								{
									"begin": 10791,
									"end": 10796,
									"name": "SLOAD"
								},
								{
									"begin": 10791,
									"end": 10796,
									"name": "SWAP1"
								},
								{
									"begin": 10791,
									"end": 10796,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10791,
									"end": 10796,
									"name": "EXP"
								},
								{
									"begin": 10791,
									"end": 10796,
									"name": "SWAP1"
								},
								{
									"begin": 10791,
									"end": 10796,
									"name": "DIV"
								},
								{
									"begin": 10791,
									"end": 10796,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10791,
									"end": 10796,
									"name": "AND"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "AND"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "AND"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "DUP2"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "MSTORE"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "ADD"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "SWAP1"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "DUP2"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "MSTORE"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "ADD"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10782,
									"end": 10797,
									"name": "KECCAK256"
								},
								{
									"begin": 10782,
									"end": 10814,
									"name": "DUP2"
								},
								{
									"begin": 10782,
									"end": 10814,
									"name": "SWAP1"
								},
								{
									"begin": 10782,
									"end": 10814,
									"name": "SSTORE"
								},
								{
									"begin": 10782,
									"end": 10814,
									"name": "POP"
								},
								{
									"begin": 10838,
									"end": 10843,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10825,
									"end": 10835,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 10825,
									"end": 10835,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "EXP"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "DUP2"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "SLOAD"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "DUP2"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "MUL"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "NOT"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "AND"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "SWAP1"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "DUP4"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "ISZERO"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "ISZERO"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "MUL"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "OR"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "SWAP1"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "SSTORE"
								},
								{
									"begin": 10825,
									"end": 10843,
									"name": "POP"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "POP"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "POP"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "POP"
								},
								{
									"begin": 10555,
									"end": 10851,
									"name": "POP"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMP"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPDEST"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP3"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SLOAD"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP2"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "AND"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "ISZERO"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "MUL"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SUB"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "AND"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DIV"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "MSTORE"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "KECCAK256"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "ADD"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DIV"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP2"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "ADD"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP3"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP3"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "LT"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPI"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "MLOAD"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "NOT"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "AND"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP4"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "ADD"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "OR"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP6"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SSTORE"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMP"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPDEST"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP3"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "ADD"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "ADD"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP6"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SSTORE"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP3"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "ISZERO"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPI"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP2"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP3"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "ADD"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPDEST"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP3"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP2"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "GT"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "ISZERO"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPI"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP3"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "MLOAD"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP3"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SSTORE"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP2"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "ADD"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP2"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "ADD"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMP"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPDEST"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPDEST"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "POP"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "POP"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP2"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPDEST"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "POP"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPDEST"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP2"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPDEST"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP3"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "GT"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "ISZERO"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPI"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP2"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SSTORE"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "POP"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "ADD"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMP"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPDEST"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "POP"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMP"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPDEST"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "SWAP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "JUMPDEST"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "DUP1"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "CODECOPY"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10045,
									"end": 14962,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582054d4b0872072efed3976463f72c661e8e12d095c324850e6460601cb413712d50029",
									".code": [
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "MSTORE"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "ISZERO"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "SWAP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DIV"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "AND"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "753C30C"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "E136B19"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "ECB93C0"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "26976E3F"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "27E235E3"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "35390714"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "3EAAF86B"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "59BF1ABE"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "5C658165"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "C0324C77"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "CC872B66"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "DB006A75"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "DD644F72"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "E47D6060"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "E4997DC5"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "E5B5019A"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "F3BDC228"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "EQ"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPI"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "JUMPDEST"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "DUP1"
										},
										{
											"begin": 10045,
											"end": 14962,
											"name": "REVERT"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMPDEST"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "CALLVALUE"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ISZERO"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMPI"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "REVERT"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMPDEST"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMP"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMPDEST"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MLOAD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP3"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SUB"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP3"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MSTORE"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP4"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MLOAD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MSTORE"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "POP"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MLOAD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP4"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ISZERO"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPI"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP4"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "EXP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "NOT"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPDEST"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "RETURN"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "JUMPDEST"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "CALLVALUE"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "ISZERO"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "JUMPI"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "DUP1"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "REVERT"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "JUMPDEST"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "DUP1"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "DUP1"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "AND"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "SWAP1"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "ADD"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "SWAP1"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "SWAP2"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "SWAP1"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "POP"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "POP"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "JUMP"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "JUMPDEST"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "STOP"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "JUMPDEST"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "CALLVALUE"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "ISZERO"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "JUMPI"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "DUP1"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "REVERT"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "JUMPDEST"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "DUP1"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "DUP1"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "AND"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "SWAP1"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "ADD"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "SWAP1"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "SWAP2"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "SWAP1"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "DUP1"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "SWAP1"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "ADD"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "SWAP1"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "SWAP2"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "SWAP1"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "POP"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "POP"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "JUMP"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "JUMPDEST"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "STOP"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "JUMPDEST"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "CALLVALUE"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "ISZERO"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "JUMPI"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "DUP1"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "REVERT"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "JUMPDEST"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "JUMP"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "JUMPDEST"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "MLOAD"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "DUP1"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "DUP3"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "ISZERO"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "ISZERO"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "ISZERO"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "ISZERO"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "DUP2"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "MSTORE"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "ADD"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "SWAP2"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "POP"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "POP"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "MLOAD"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "DUP1"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "SWAP2"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "SUB"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "SWAP1"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "RETURN"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "JUMPDEST"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "CALLVALUE"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "ISZERO"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "JUMPI"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "DUP1"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "REVERT"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "JUMPDEST"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "DUP1"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "DUP1"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "AND"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "SWAP1"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "ADD"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "SWAP1"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "SWAP2"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "SWAP1"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "POP"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "POP"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "JUMP"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "JUMPDEST"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "STOP"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "JUMPDEST"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "CALLVALUE"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "ISZERO"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "JUMPI"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "DUP1"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "REVERT"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "JUMPDEST"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "JUMP"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "JUMPDEST"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "MLOAD"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "DUP1"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "DUP3"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "DUP2"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "MSTORE"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "ADD"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "SWAP2"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "POP"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "POP"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "MLOAD"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "DUP1"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "SWAP2"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "SUB"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "SWAP1"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "RETURN"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "JUMPDEST"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "CALLVALUE"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "ISZERO"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "JUMPI"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "DUP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "REVERT"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "JUMPDEST"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "DUP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "DUP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "AND"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "SWAP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "ADD"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "SWAP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "SWAP2"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "SWAP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "DUP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "AND"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "SWAP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "ADD"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "SWAP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "SWAP2"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "SWAP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "DUP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "SWAP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "ADD"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "SWAP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "SWAP2"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "SWAP1"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "POP"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "POP"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "JUMP"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "JUMPDEST"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "STOP"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "JUMPDEST"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "CALLVALUE"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "ISZERO"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "JUMPI"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "REVERT"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "JUMPDEST"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "JUMP"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "JUMPDEST"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "MLOAD"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "DUP3"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "AND"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "AND"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "MSTORE"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "ADD"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "SWAP2"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "POP"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "POP"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "MLOAD"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "SWAP2"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "SUB"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "SWAP1"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "RETURN"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "JUMPDEST"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "CALLVALUE"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "ISZERO"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "JUMPI"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "DUP1"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "REVERT"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "JUMPDEST"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "DUP1"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "DUP1"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "AND"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "SWAP1"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "ADD"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "SWAP1"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "SWAP2"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "SWAP1"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "POP"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "POP"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "JUMP"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "JUMPDEST"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "MLOAD"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "DUP1"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "DUP3"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "DUP2"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "MSTORE"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "ADD"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "SWAP2"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "POP"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "POP"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "MLOAD"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "DUP1"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "SWAP2"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "SUB"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "SWAP1"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "RETURN"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "JUMPDEST"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "CALLVALUE"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "ISZERO"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "JUMPI"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "DUP1"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "REVERT"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "JUMPDEST"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "JUMP"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "JUMPDEST"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "MLOAD"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "DUP1"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "DUP3"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "DUP2"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "MSTORE"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "ADD"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "SWAP2"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "POP"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "POP"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "MLOAD"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "DUP1"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "SWAP2"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "SUB"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "SWAP1"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "RETURN"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "JUMPDEST"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "CALLVALUE"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "ISZERO"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "JUMPI"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "DUP1"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "REVERT"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "JUMPDEST"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "JUMP"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "JUMPDEST"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "MLOAD"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "DUP1"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "DUP3"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "DUP2"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "MSTORE"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "ADD"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "SWAP2"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "POP"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "POP"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "MLOAD"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "DUP1"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "SWAP2"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "SUB"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "SWAP1"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "RETURN"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "JUMPDEST"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "CALLVALUE"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "ISZERO"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "JUMPI"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "DUP1"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "REVERT"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "JUMPDEST"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "JUMP"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "JUMPDEST"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "MLOAD"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "DUP1"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "DUP3"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "DUP2"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "MSTORE"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "ADD"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "SWAP2"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "POP"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "POP"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "MLOAD"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "DUP1"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "SWAP2"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "SUB"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "SWAP1"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "RETURN"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMPDEST"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "CALLVALUE"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "ISZERO"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMPI"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "DUP1"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "REVERT"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMPDEST"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMP"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMPDEST"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "STOP"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "JUMPDEST"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "CALLVALUE"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "ISZERO"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "JUMPI"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "DUP1"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "REVERT"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "JUMPDEST"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "DUP1"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "DUP1"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "AND"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "SWAP1"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "ADD"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "SWAP1"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "SWAP2"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "SWAP1"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "POP"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "POP"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "JUMP"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "JUMPDEST"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "MLOAD"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "DUP1"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "DUP3"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "ISZERO"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "ISZERO"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "ISZERO"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "ISZERO"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "DUP2"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "MSTORE"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "ADD"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "SWAP2"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "POP"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "POP"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "MLOAD"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "DUP1"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "SWAP2"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "SUB"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "SWAP1"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "RETURN"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "JUMPDEST"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "CALLVALUE"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "ISZERO"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "JUMPI"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "DUP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "REVERT"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "JUMPDEST"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "DUP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "DUP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "AND"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "ADD"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SWAP2"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "DUP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "AND"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "ADD"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SWAP2"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "JUMP"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "JUMPDEST"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "MLOAD"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "DUP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "DUP3"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "DUP2"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "MSTORE"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "ADD"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SWAP2"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "MLOAD"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "DUP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SWAP2"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SUB"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SWAP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "RETURN"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMPDEST"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "CALLVALUE"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMPI"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DUP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "REVERT"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMPDEST"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMP"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMPDEST"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "MLOAD"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DUP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DUP3"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DUP2"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "MSTORE"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "ADD"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SWAP2"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "POP"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "POP"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "MLOAD"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DUP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SWAP2"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SUB"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SWAP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "RETURN"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "JUMPDEST"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "CALLVALUE"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "ISZERO"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "JUMPI"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "DUP1"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "REVERT"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "JUMPDEST"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "DUP1"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "DUP1"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "AND"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "SWAP1"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "ADD"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "SWAP1"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "SWAP2"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "SWAP1"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "POP"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "POP"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "JUMP"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "JUMPDEST"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "MLOAD"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "DUP1"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "DUP3"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "DUP2"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "MSTORE"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "ADD"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "SWAP2"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "POP"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "POP"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "MLOAD"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "DUP1"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "SWAP2"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "SUB"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "SWAP1"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "RETURN"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMPDEST"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "CALLVALUE"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "ISZERO"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMPI"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "DUP1"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "REVERT"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMPDEST"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMP"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMPDEST"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "STOP"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "JUMPDEST"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "CALLVALUE"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "ISZERO"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "JUMPI"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "DUP1"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "REVERT"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "JUMPDEST"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "JUMP"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "JUMPDEST"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "MLOAD"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "DUP1"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "DUP3"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "AND"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "AND"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "DUP2"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "MSTORE"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "ADD"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "SWAP2"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "POP"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "POP"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "MLOAD"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "DUP1"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "SWAP2"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "SUB"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "SWAP1"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "RETURN"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPDEST"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "CALLVALUE"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "ISZERO"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPI"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "REVERT"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPDEST"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPDEST"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "MLOAD"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP3"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "AND"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "AND"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP2"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "MSTORE"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "ADD"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP2"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "POP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "POP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "MLOAD"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP2"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SUB"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "RETURN"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMPDEST"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "CALLVALUE"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ISZERO"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMPI"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "REVERT"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMPDEST"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMP"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMPDEST"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MLOAD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ADD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP3"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SUB"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP3"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MSTORE"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP4"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MLOAD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MSTORE"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ADD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "POP"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MLOAD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ADD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP4"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ISZERO"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPI"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP4"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "EXP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "NOT"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPDEST"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "RETURN"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "JUMPDEST"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "CALLVALUE"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "ISZERO"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "JUMPI"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "DUP1"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "REVERT"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "JUMPDEST"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "DUP1"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "DUP1"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "AND"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "SWAP1"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "ADD"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "SWAP1"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "SWAP2"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "SWAP1"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "DUP1"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "SWAP1"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "ADD"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "SWAP1"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "SWAP2"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "SWAP1"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "POP"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "POP"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "JUMP"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "JUMPDEST"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "STOP"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "JUMPDEST"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "CALLVALUE"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "ISZERO"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "JUMPI"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "DUP1"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "REVERT"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "JUMPDEST"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "DUP1"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "DUP1"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "SWAP1"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "ADD"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "SWAP1"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "SWAP2"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "SWAP1"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "DUP1"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "SWAP1"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "ADD"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "SWAP1"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "SWAP2"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "SWAP1"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "POP"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "POP"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "JUMP"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "JUMPDEST"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "STOP"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "JUMPDEST"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "CALLVALUE"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "ISZERO"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "JUMPI"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "DUP1"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "REVERT"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "JUMPDEST"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "DUP1"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "DUP1"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "SWAP1"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "ADD"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "SWAP1"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "SWAP2"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "SWAP1"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "POP"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "POP"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "JUMP"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "JUMPDEST"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "STOP"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "JUMPDEST"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "CALLVALUE"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "ISZERO"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "JUMPI"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "DUP1"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "REVERT"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "JUMPDEST"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "DUP1"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "DUP1"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "SWAP1"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "ADD"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "SWAP1"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "SWAP2"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "SWAP1"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "POP"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "POP"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "JUMP"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "JUMPDEST"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "STOP"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "JUMPDEST"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "CALLVALUE"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "ISZERO"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "JUMPI"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "DUP1"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "REVERT"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "JUMPDEST"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "DUP1"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "DUP1"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "AND"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SWAP1"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "ADD"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SWAP1"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SWAP2"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SWAP1"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "DUP1"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "AND"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SWAP1"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "ADD"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SWAP1"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SWAP2"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SWAP1"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "POP"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "POP"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "JUMP"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "JUMPDEST"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "MLOAD"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "DUP1"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "DUP3"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "DUP2"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "MSTORE"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "ADD"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SWAP2"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "POP"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "POP"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "MLOAD"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "DUP1"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SWAP2"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SUB"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SWAP1"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "RETURN"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "JUMPDEST"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "CALLVALUE"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "ISZERO"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "JUMPI"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "DUP1"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "REVERT"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "JUMPDEST"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "JUMP"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "JUMPDEST"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "MLOAD"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "DUP1"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "DUP3"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "DUP2"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "MSTORE"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "ADD"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "SWAP2"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "POP"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "POP"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "MLOAD"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "DUP1"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "SWAP2"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "SUB"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "SWAP1"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "RETURN"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "JUMPDEST"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "CALLVALUE"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "ISZERO"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "JUMPI"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "DUP1"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "REVERT"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "JUMPDEST"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "DUP1"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "DUP1"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "AND"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "SWAP1"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "ADD"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "SWAP1"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "SWAP2"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "SWAP1"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "POP"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "POP"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "JUMP"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "JUMPDEST"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "MLOAD"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "DUP1"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "DUP3"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "ISZERO"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "ISZERO"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "ISZERO"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "ISZERO"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "DUP2"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "MSTORE"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "ADD"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "SWAP2"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "POP"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "POP"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "MLOAD"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "DUP1"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "SWAP2"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "SUB"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "SWAP1"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "RETURN"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "JUMPDEST"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "CALLVALUE"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "ISZERO"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "JUMPI"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "DUP1"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "REVERT"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "JUMPDEST"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "DUP1"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "DUP1"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "AND"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "SWAP1"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "ADD"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "SWAP1"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "SWAP2"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "SWAP1"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "POP"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "POP"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "JUMP"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "JUMPDEST"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "STOP"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "JUMPDEST"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "CALLVALUE"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "ISZERO"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "JUMPI"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "DUP1"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "REVERT"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "JUMPDEST"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "JUMP"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "JUMPDEST"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "MLOAD"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "DUP1"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "DUP3"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "DUP2"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "MSTORE"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "ADD"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "SWAP2"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "MLOAD"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "DUP1"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "SWAP2"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "SUB"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "RETURN"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "CALLVALUE"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "ISZERO"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPI"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "REVERT"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "DUP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "AND"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "ADD"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "SWAP2"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "POP"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "POP"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMP"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "STOP"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "JUMPDEST"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "CALLVALUE"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "ISZERO"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "JUMPI"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "DUP1"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "REVERT"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "JUMPDEST"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "DUP1"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "DUP1"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "AND"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "SWAP1"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "ADD"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "SWAP1"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "SWAP2"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "SWAP1"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "POP"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "POP"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "JUMP"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "JUMPDEST"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "STOP"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMPDEST"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SLOAD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "AND"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ISZERO"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MUL"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SUB"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "AND"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DIV"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DIV"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MUL"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MLOAD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MSTORE"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP3"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MSTORE"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP3"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SLOAD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "AND"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ISZERO"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MUL"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SUB"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "AND"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DIV"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ISZERO"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMPI"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "LT"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMPI"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP4"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SLOAD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DIV"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MUL"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP4"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MSTORE"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMP"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMPDEST"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP3"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MSTORE"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "KECCAK256"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMPDEST"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SLOAD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MSTORE"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP4"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "GT"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMPI"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP3"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP1"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SUB"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "AND"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP3"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMPDEST"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "POP"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "POP"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "POP"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "POP"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "POP"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 12955,
											"end": 12959,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12942,
											"end": 12952,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12942,
											"end": 12952,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "EXP"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "DUP2"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "SLOAD"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "DUP2"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "MUL"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "NOT"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "AND"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "SWAP1"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "DUP4"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "ISZERO"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "ISZERO"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "MUL"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "OR"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "SWAP1"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "SSTORE"
										},
										{
											"begin": 12942,
											"end": 12959,
											"name": "POP"
										},
										{
											"begin": 12988,
											"end": 13004,
											"name": "DUP1"
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "EXP"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "DUP2"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "SLOAD"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "DUP2"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "MUL"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "NOT"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "AND"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "SWAP1"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "DUP4"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "AND"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "MUL"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "OR"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "SWAP1"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "SSTORE"
										},
										{
											"begin": 12970,
											"end": 13004,
											"name": "POP"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "PUSH",
											"value": "CC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E"
										},
										{
											"begin": 13025,
											"end": 13041,
											"name": "DUP2"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "MLOAD"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "DUP1"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "DUP3"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "AND"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "AND"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "DUP2"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "MSTORE"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "ADD"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "SWAP2"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "POP"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "POP"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "MLOAD"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "DUP1"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "SWAP2"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "SUB"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "SWAP1"
										},
										{
											"begin": 13015,
											"end": 13042,
											"name": "LOG1"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "POP"
										},
										{
											"begin": 12869,
											"end": 13050,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "JUMPDEST"
										},
										{
											"begin": 12194,
											"end": 12200,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3378,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3370,
											"end": 3374,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3378,
											"name": "ADD"
										},
										{
											"begin": 3352,
											"end": 3360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3360,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3352,
											"end": 3367,
											"name": "SWAP1"
										},
										{
											"begin": 3352,
											"end": 3367,
											"name": "POP"
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "LT"
										},
										{
											"begin": 3350,
											"end": 3379,
											"name": "ISZERO"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "ISZERO"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "ISZERO"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "JUMPI"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "DUP1"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "REVERT"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "JUMPDEST"
										},
										{
											"begin": 12217,
											"end": 12227,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12217,
											"end": 12227,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 12217,
											"end": 12227,
											"name": "SWAP1"
										},
										{
											"begin": 12217,
											"end": 12227,
											"name": "SLOAD"
										},
										{
											"begin": 12217,
											"end": 12227,
											"name": "SWAP1"
										},
										{
											"begin": 12217,
											"end": 12227,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12217,
											"end": 12227,
											"name": "EXP"
										},
										{
											"begin": 12217,
											"end": 12227,
											"name": "SWAP1"
										},
										{
											"begin": 12217,
											"end": 12227,
											"name": "DIV"
										},
										{
											"begin": 12217,
											"end": 12227,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12217,
											"end": 12227,
											"name": "AND"
										},
										{
											"begin": 12213,
											"end": 12418,
											"name": "ISZERO"
										},
										{
											"begin": 12213,
											"end": 12418,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 12213,
											"end": 12418,
											"name": "JUMPI"
										},
										{
											"begin": 12273,
											"end": 12288,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12273,
											"end": 12288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12273,
											"end": 12288,
											"name": "SWAP1"
										},
										{
											"begin": 12273,
											"end": 12288,
											"name": "SLOAD"
										},
										{
											"begin": 12273,
											"end": 12288,
											"name": "SWAP1"
										},
										{
											"begin": 12273,
											"end": 12288,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12273,
											"end": 12288,
											"name": "EXP"
										},
										{
											"begin": 12273,
											"end": 12288,
											"name": "SWAP1"
										},
										{
											"begin": 12273,
											"end": 12288,
											"name": "DIV"
										},
										{
											"begin": 12273,
											"end": 12288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12273,
											"end": 12288,
											"name": "AND"
										},
										{
											"begin": 12251,
											"end": 12305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12251,
											"end": 12305,
											"name": "AND"
										},
										{
											"begin": 12251,
											"end": 12305,
											"name": "PUSH",
											"value": "AEE92D33"
										},
										{
											"begin": 12306,
											"end": 12316,
											"name": "CALLER"
										},
										{
											"begin": 12318,
											"end": 12326,
											"name": "DUP6"
										},
										{
											"begin": 12328,
											"end": 12334,
											"name": "DUP6"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "MLOAD"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP5"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "AND"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "MUL"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP2"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "MSTORE"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "ADD"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP1"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP5"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "AND"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "AND"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP2"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "MSTORE"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "ADD"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP4"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "AND"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "AND"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP2"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "MSTORE"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "ADD"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP3"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP2"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "MSTORE"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "ADD"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "SWAP4"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "POP"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "POP"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "POP"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "POP"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "MLOAD"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP1"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP4"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "SUB"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP2"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP8"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP1"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "ISZERO"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "ISZERO"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "JUMPI"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP1"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "REVERT"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "JUMPDEST"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "GAS"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "SUB"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "CALL"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "ISZERO"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "ISZERO"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "JUMPI"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "DUP1"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "REVERT"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "JUMPDEST"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "POP"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "POP"
										},
										{
											"begin": 12251,
											"end": 12335,
											"name": "POP"
										},
										{
											"begin": 12244,
											"end": 12335,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 12244,
											"end": 12335,
											"name": "JUMP"
										},
										{
											"begin": 12213,
											"end": 12418,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 12213,
											"end": 12418,
											"name": "JUMPDEST"
										},
										{
											"begin": 12375,
											"end": 12406,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 12389,
											"end": 12397,
											"name": "DUP4"
										},
										{
											"begin": 12399,
											"end": 12405,
											"name": "DUP4"
										},
										{
											"begin": 12375,
											"end": 12388,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 12375,
											"end": 12406,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12375,
											"end": 12406,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 12375,
											"end": 12406,
											"name": "JUMPDEST"
										},
										{
											"begin": 3391,
											"end": 3392,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 3391,
											"end": 3392,
											"name": "JUMPDEST"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "POP"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "POP"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "POP"
										},
										{
											"begin": 12123,
											"end": 12425,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "JUMPDEST"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "SWAP1"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "SLOAD"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "SWAP1"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "EXP"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "SWAP1"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "DIV"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "AND"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "DUP2"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 8885,
											"end": 8889,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8858,
											"end": 8871,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8872,
											"end": 8881,
											"name": "DUP4"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "AND"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "AND"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "DUP2"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "MSTORE"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "ADD"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "SWAP1"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "DUP2"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "MSTORE"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "ADD"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "KECCAK256"
										},
										{
											"begin": 8858,
											"end": 8882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "EXP"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "DUP2"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "SLOAD"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "DUP2"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "MUL"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "NOT"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "AND"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "SWAP1"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "DUP4"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "ISZERO"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "ISZERO"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "MUL"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "OR"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "SWAP1"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "SSTORE"
										},
										{
											"begin": 8858,
											"end": 8889,
											"name": "POP"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "PUSH",
											"value": "42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC"
										},
										{
											"begin": 8915,
											"end": 8924,
											"name": "DUP2"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "MLOAD"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "DUP1"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "DUP3"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "AND"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "AND"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "DUP2"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "MSTORE"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "ADD"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "SWAP2"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "POP"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "POP"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "MLOAD"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "DUP1"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "SWAP2"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "SUB"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "SWAP1"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "LOG1"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "POP"
										},
										{
											"begin": 8788,
											"end": 8933,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "JUMPDEST"
										},
										{
											"begin": 13164,
											"end": 13168,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13185,
											"end": 13195,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 13185,
											"end": 13195,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 13185,
											"end": 13195,
											"name": "SWAP1"
										},
										{
											"begin": 13185,
											"end": 13195,
											"name": "SLOAD"
										},
										{
											"begin": 13185,
											"end": 13195,
											"name": "SWAP1"
										},
										{
											"begin": 13185,
											"end": 13195,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13185,
											"end": 13195,
											"name": "EXP"
										},
										{
											"begin": 13185,
											"end": 13195,
											"name": "SWAP1"
										},
										{
											"begin": 13185,
											"end": 13195,
											"name": "DIV"
										},
										{
											"begin": 13185,
											"end": 13195,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13185,
											"end": 13195,
											"name": "AND"
										},
										{
											"begin": 13181,
											"end": 13327,
											"name": "ISZERO"
										},
										{
											"begin": 13181,
											"end": 13327,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 13181,
											"end": 13327,
											"name": "JUMPI"
										},
										{
											"begin": 13233,
											"end": 13248,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 13233,
											"end": 13248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13233,
											"end": 13248,
											"name": "SWAP1"
										},
										{
											"begin": 13233,
											"end": 13248,
											"name": "SLOAD"
										},
										{
											"begin": 13233,
											"end": 13248,
											"name": "SWAP1"
										},
										{
											"begin": 13233,
											"end": 13248,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13233,
											"end": 13248,
											"name": "EXP"
										},
										{
											"begin": 13233,
											"end": 13248,
											"name": "SWAP1"
										},
										{
											"begin": 13233,
											"end": 13248,
											"name": "DIV"
										},
										{
											"begin": 13233,
											"end": 13248,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13233,
											"end": 13248,
											"name": "AND"
										},
										{
											"begin": 13219,
											"end": 13261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13219,
											"end": 13261,
											"name": "AND"
										},
										{
											"begin": 13219,
											"end": 13261,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "MLOAD"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "ADD"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "MSTORE"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "MLOAD"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "DUP2"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "AND"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "MUL"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "DUP2"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "MSTORE"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "ADD"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "MLOAD"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "DUP1"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "DUP4"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "SUB"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "DUP2"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "DUP8"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "DUP1"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "ISZERO"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "ISZERO"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "JUMPI"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "DUP1"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "REVERT"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "JUMPDEST"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "GAS"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "SUB"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "CALL"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "ISZERO"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "ISZERO"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "JUMPI"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "DUP1"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "REVERT"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "JUMPDEST"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "POP"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "POP"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "POP"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "MLOAD"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "DUP1"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "MLOAD"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "SWAP1"
										},
										{
											"begin": 13219,
											"end": 13263,
											"name": "POP"
										},
										{
											"begin": 13212,
											"end": 13263,
											"name": "SWAP1"
										},
										{
											"begin": 13212,
											"end": 13263,
											"name": "POP"
										},
										{
											"begin": 13212,
											"end": 13263,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 13212,
											"end": 13263,
											"name": "JUMP"
										},
										{
											"begin": 13181,
											"end": 13327,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 13181,
											"end": 13327,
											"name": "JUMPDEST"
										},
										{
											"begin": 13303,
											"end": 13315,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13303,
											"end": 13315,
											"name": "SLOAD"
										},
										{
											"begin": 13296,
											"end": 13315,
											"name": "SWAP1"
										},
										{
											"begin": 13296,
											"end": 13315,
											"name": "POP"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "JUMPDEST"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "SWAP1"
										},
										{
											"begin": 13116,
											"end": 13334,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "JUMPDEST"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SWAP1"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SLOAD"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SWAP1"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "EXP"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SWAP1"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "DIV"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "AND"
										},
										{
											"begin": 7793,
											"end": 7800,
											"name": "ISZERO"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "ISZERO"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "ISZERO"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "JUMPI"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "DUP1"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "REVERT"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "JUMPDEST"
										},
										{
											"begin": 11451,
											"end": 11464,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11465,
											"end": 11470,
											"name": "DUP5"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "AND"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "AND"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "DUP2"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "MSTORE"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "ADD"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "SWAP1"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "DUP2"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "MSTORE"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "ADD"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "KECCAK256"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "SWAP1"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "SLOAD"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "SWAP1"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "EXP"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "SWAP1"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "DIV"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11451,
											"end": 11471,
											"name": "AND"
										},
										{
											"begin": 11450,
											"end": 11471,
											"name": "ISZERO"
										},
										{
											"begin": 11442,
											"end": 11472,
											"name": "ISZERO"
										},
										{
											"begin": 11442,
											"end": 11472,
											"name": "ISZERO"
										},
										{
											"begin": 11442,
											"end": 11472,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 11442,
											"end": 11472,
											"name": "JUMPI"
										},
										{
											"begin": 11442,
											"end": 11472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11442,
											"end": 11472,
											"name": "DUP1"
										},
										{
											"begin": 11442,
											"end": 11472,
											"name": "REVERT"
										},
										{
											"begin": 11442,
											"end": 11472,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 11442,
											"end": 11472,
											"name": "JUMPDEST"
										},
										{
											"begin": 11487,
											"end": 11497,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11487,
											"end": 11497,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 11487,
											"end": 11497,
											"name": "SWAP1"
										},
										{
											"begin": 11487,
											"end": 11497,
											"name": "SLOAD"
										},
										{
											"begin": 11487,
											"end": 11497,
											"name": "SWAP1"
										},
										{
											"begin": 11487,
											"end": 11497,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11487,
											"end": 11497,
											"name": "EXP"
										},
										{
											"begin": 11487,
											"end": 11497,
											"name": "SWAP1"
										},
										{
											"begin": 11487,
											"end": 11497,
											"name": "DIV"
										},
										{
											"begin": 11487,
											"end": 11497,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11487,
											"end": 11497,
											"name": "AND"
										},
										{
											"begin": 11483,
											"end": 11702,
											"name": "ISZERO"
										},
										{
											"begin": 11483,
											"end": 11702,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 11483,
											"end": 11702,
											"name": "JUMPI"
										},
										{
											"begin": 11543,
											"end": 11558,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11543,
											"end": 11558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11543,
											"end": 11558,
											"name": "SWAP1"
										},
										{
											"begin": 11543,
											"end": 11558,
											"name": "SLOAD"
										},
										{
											"begin": 11543,
											"end": 11558,
											"name": "SWAP1"
										},
										{
											"begin": 11543,
											"end": 11558,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11543,
											"end": 11558,
											"name": "EXP"
										},
										{
											"begin": 11543,
											"end": 11558,
											"name": "SWAP1"
										},
										{
											"begin": 11543,
											"end": 11558,
											"name": "DIV"
										},
										{
											"begin": 11543,
											"end": 11558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11543,
											"end": 11558,
											"name": "AND"
										},
										{
											"begin": 11521,
											"end": 11580,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11521,
											"end": 11580,
											"name": "AND"
										},
										{
											"begin": 11521,
											"end": 11580,
											"name": "PUSH",
											"value": "8B477ADB"
										},
										{
											"begin": 11581,
											"end": 11591,
											"name": "CALLER"
										},
										{
											"begin": 11593,
											"end": 11598,
											"name": "DUP6"
										},
										{
											"begin": 11600,
											"end": 11603,
											"name": "DUP6"
										},
										{
											"begin": 11605,
											"end": 11611,
											"name": "DUP6"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "MLOAD"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP6"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "AND"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "MUL"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP2"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "MSTORE"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "ADD"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP1"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP6"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "AND"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "AND"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP2"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "MSTORE"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "ADD"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP5"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "AND"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "AND"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP2"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "MSTORE"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "ADD"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP4"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "AND"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "AND"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP2"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "MSTORE"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "ADD"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP3"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP2"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "MSTORE"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "ADD"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "SWAP5"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "POP"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "POP"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "POP"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "POP"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "POP"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "MLOAD"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP1"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP4"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "SUB"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP2"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP8"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP1"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "ISZERO"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "ISZERO"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "JUMPI"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP1"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "REVERT"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "JUMPDEST"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "GAS"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "SUB"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "CALL"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "ISZERO"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "ISZERO"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "JUMPI"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "DUP1"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "REVERT"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "JUMPDEST"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "POP"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "POP"
										},
										{
											"begin": 11521,
											"end": 11612,
											"name": "POP"
										},
										{
											"begin": 11514,
											"end": 11612,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 11514,
											"end": 11612,
											"name": "JUMP"
										},
										{
											"begin": 11483,
											"end": 11702,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 11483,
											"end": 11702,
											"name": "JUMPDEST"
										},
										{
											"begin": 11652,
											"end": 11690,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 11671,
											"end": 11676,
											"name": "DUP4"
										},
										{
											"begin": 11678,
											"end": 11681,
											"name": "DUP4"
										},
										{
											"begin": 11683,
											"end": 11689,
											"name": "DUP4"
										},
										{
											"begin": 11652,
											"end": 11670,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 11652,
											"end": 11690,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11652,
											"end": 11690,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 11652,
											"end": 11690,
											"name": "JUMPDEST"
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "JUMPDEST"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "POP"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "POP"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "POP"
										},
										{
											"begin": 11347,
											"end": 11709,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "JUMPDEST"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "SWAP1"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "SLOAD"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "SWAP1"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "EXP"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "SWAP1"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "DIV"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "AND"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10222,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "JUMPDEST"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "MSTORE"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "DUP1"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "MSTORE"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "KECCAK256"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "SWAP2"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "POP"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "SWAP1"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "POP"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "SLOAD"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "DUP2"
										},
										{
											"begin": 3025,
											"end": 3065,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "JUMPDEST"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "SLOAD"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "DUP2"
										},
										{
											"begin": 10165,
											"end": 10185,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "JUMPDEST"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "SLOAD"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "DUP2"
										},
										{
											"begin": 3191,
											"end": 3217,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "JUMPDEST"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "SLOAD"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "DUP2"
										},
										{
											"begin": 2127,
											"end": 2151,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "SWAP1"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "SLOAD"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "SWAP1"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "EXP"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "SWAP1"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "DIV"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "AND"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ISZERO"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ISZERO"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "JUMPI"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "REVERT"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "JUMPDEST"
										},
										{
											"begin": 8297,
											"end": 8302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8288,
											"end": 8294,
											"name": "DUP1"
										},
										{
											"begin": 8288,
											"end": 8294,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "EXP"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "DUP2"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "SLOAD"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "DUP2"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "MUL"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "NOT"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "AND"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "SWAP1"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "DUP4"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "ISZERO"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "ISZERO"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "MUL"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "OR"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "SWAP1"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "SSTORE"
										},
										{
											"begin": 8288,
											"end": 8302,
											"name": "POP"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "MLOAD"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "MLOAD"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "DUP1"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "SWAP2"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "SUB"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "SWAP1"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "LOG1"
										},
										{
											"begin": 8234,
											"end": 8324,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "JUMPDEST"
										},
										{
											"begin": 8573,
											"end": 8577,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8597,
											"end": 8610,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8611,
											"end": 8617,
											"name": "DUP4"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "AND"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "AND"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "DUP2"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "MSTORE"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "ADD"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "SWAP1"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "DUP2"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "MSTORE"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "ADD"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "KECCAK256"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "SWAP1"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "SLOAD"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "SWAP1"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "EXP"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "SWAP1"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "DIV"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8597,
											"end": 8618,
											"name": "AND"
										},
										{
											"begin": 8590,
											"end": 8618,
											"name": "SWAP1"
										},
										{
											"begin": 8590,
											"end": 8618,
											"name": "POP"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "SWAP2"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "SWAP1"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "POP"
										},
										{
											"begin": 8502,
											"end": 8626,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "JUMPDEST"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "MSTORE"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "DUP2"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "MSTORE"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "KECCAK256"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "MSTORE"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "DUP1"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "MSTORE"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "KECCAK256"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SWAP2"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SWAP2"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "POP"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "SLOAD"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "DUP2"
										},
										{
											"begin": 4815,
											"end": 4876,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMPDEST"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SWAP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SLOAD"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SWAP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "EXP"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "SWAP1"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DIV"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "AND"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "DUP2"
										},
										{
											"begin": 7618,
											"end": 7644,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "JUMPDEST"
										},
										{
											"begin": 11851,
											"end": 11855,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11872,
											"end": 11882,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11872,
											"end": 11882,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 11872,
											"end": 11882,
											"name": "SWAP1"
										},
										{
											"begin": 11872,
											"end": 11882,
											"name": "SLOAD"
										},
										{
											"begin": 11872,
											"end": 11882,
											"name": "SWAP1"
										},
										{
											"begin": 11872,
											"end": 11882,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11872,
											"end": 11882,
											"name": "EXP"
										},
										{
											"begin": 11872,
											"end": 11882,
											"name": "SWAP1"
										},
										{
											"begin": 11872,
											"end": 11882,
											"name": "DIV"
										},
										{
											"begin": 11872,
											"end": 11882,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11872,
											"end": 11882,
											"name": "AND"
										},
										{
											"begin": 11868,
											"end": 12031,
											"name": "ISZERO"
										},
										{
											"begin": 11868,
											"end": 12031,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 11868,
											"end": 12031,
											"name": "JUMPI"
										},
										{
											"begin": 11928,
											"end": 11943,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11928,
											"end": 11943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11928,
											"end": 11943,
											"name": "SWAP1"
										},
										{
											"begin": 11928,
											"end": 11943,
											"name": "SLOAD"
										},
										{
											"begin": 11928,
											"end": 11943,
											"name": "SWAP1"
										},
										{
											"begin": 11928,
											"end": 11943,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11928,
											"end": 11943,
											"name": "EXP"
										},
										{
											"begin": 11928,
											"end": 11943,
											"name": "SWAP1"
										},
										{
											"begin": 11928,
											"end": 11943,
											"name": "DIV"
										},
										{
											"begin": 11928,
											"end": 11943,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11928,
											"end": 11943,
											"name": "AND"
										},
										{
											"begin": 11906,
											"end": 11954,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11906,
											"end": 11954,
											"name": "AND"
										},
										{
											"begin": 11906,
											"end": 11954,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11955,
											"end": 11958,
											"name": "DUP4"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "MLOAD"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "ADD"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "MSTORE"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "MLOAD"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "DUP3"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "AND"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "MUL"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "DUP2"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "MSTORE"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "ADD"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "DUP1"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "DUP3"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "AND"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "AND"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "DUP2"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "MSTORE"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "ADD"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "SWAP2"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "POP"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "POP"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "MLOAD"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "DUP1"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "DUP4"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "SUB"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "DUP2"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "DUP8"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "DUP1"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "ISZERO"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "ISZERO"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "JUMPI"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "DUP1"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "REVERT"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "JUMPDEST"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "GAS"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "SUB"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "CALL"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "ISZERO"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "ISZERO"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "JUMPI"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "DUP1"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "REVERT"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "JUMPDEST"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "POP"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "POP"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "POP"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "MLOAD"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "DUP1"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "MLOAD"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "SWAP1"
										},
										{
											"begin": 11906,
											"end": 11959,
											"name": "POP"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "SWAP1"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "POP"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "JUMP"
										},
										{
											"begin": 11868,
											"end": 12031,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 11868,
											"end": 12031,
											"name": "JUMPDEST"
										},
										{
											"begin": 11999,
											"end": 12019,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 12015,
											"end": 12018,
											"name": "DUP3"
										},
										{
											"begin": 11999,
											"end": 12014,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 11999,
											"end": 12019,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11999,
											"end": 12019,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 11999,
											"end": 12019,
											"name": "JUMPDEST"
										},
										{
											"begin": 11992,
											"end": 12019,
											"name": "SWAP1"
										},
										{
											"begin": 11992,
											"end": 12019,
											"name": "POP"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "JUMPDEST"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "SWAP2"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "SWAP1"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "POP"
										},
										{
											"begin": 11794,
											"end": 12038,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SWAP1"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SLOAD"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SWAP1"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "EXP"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SWAP1"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "DIV"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "AND"
										},
										{
											"begin": 7793,
											"end": 7800,
											"name": "ISZERO"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "ISZERO"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "ISZERO"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "JUMPI"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "DUP1"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "REVERT"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "JUMPDEST"
										},
										{
											"begin": 8123,
											"end": 8127,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8114,
											"end": 8120,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8114,
											"end": 8120,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "EXP"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP2"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SLOAD"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP2"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MUL"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "NOT"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "ISZERO"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "ISZERO"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MUL"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "OR"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SSTORE"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "POP"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "MLOAD"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "MLOAD"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "DUP1"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "SWAP2"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "SUB"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "SWAP1"
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "LOG1"
										},
										{
											"begin": 8059,
											"end": 8147,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "JUMPDEST"
										},
										{
											"begin": 8681,
											"end": 8688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "DUP1"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "SWAP1"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "SLOAD"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "SWAP1"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "EXP"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "SWAP1"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "DIV"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "AND"
										},
										{
											"begin": 8701,
											"end": 8713,
											"name": "SWAP1"
										},
										{
											"begin": 8701,
											"end": 8713,
											"name": "POP"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "SWAP1"
										},
										{
											"begin": 8634,
											"end": 8721,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMPDEST"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SLOAD"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "EXP"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DIV"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "AND"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "DUP2"
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMPDEST"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SLOAD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "AND"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ISZERO"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MUL"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SUB"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "AND"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DIV"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ADD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DIV"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MUL"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ADD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MLOAD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ADD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MSTORE"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP3"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MSTORE"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ADD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP3"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SLOAD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "AND"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ISZERO"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MUL"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SUB"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "AND"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DIV"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ISZERO"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMPI"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "LT"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMPI"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP4"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SLOAD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DIV"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MUL"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP4"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MSTORE"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ADD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMP"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMPDEST"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP3"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ADD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MSTORE"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "KECCAK256"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMPDEST"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SLOAD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "MSTORE"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ADD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ADD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP4"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "GT"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMPI"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP3"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP1"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SUB"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "AND"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP3"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "ADD"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "SWAP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMPDEST"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "POP"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "POP"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "POP"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "POP"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "POP"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "DUP2"
										},
										{
											"begin": 10138,
											"end": 10158,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "JUMPDEST"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SWAP1"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SLOAD"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SWAP1"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "EXP"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "SWAP1"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "DIV"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "AND"
										},
										{
											"begin": 7793,
											"end": 7800,
											"name": "ISZERO"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "ISZERO"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "ISZERO"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "JUMPI"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "DUP1"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "REVERT"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 7785,
											"end": 7801,
											"name": "JUMPDEST"
										},
										{
											"begin": 11021,
											"end": 11034,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11035,
											"end": 11045,
											"name": "CALLER"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "AND"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "AND"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "DUP2"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "MSTORE"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "ADD"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "SWAP1"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "DUP2"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "MSTORE"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "ADD"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "KECCAK256"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "SWAP1"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "SLOAD"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "SWAP1"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "EXP"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "SWAP1"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "DIV"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11021,
											"end": 11046,
											"name": "AND"
										},
										{
											"begin": 11020,
											"end": 11046,
											"name": "ISZERO"
										},
										{
											"begin": 11012,
											"end": 11047,
											"name": "ISZERO"
										},
										{
											"begin": 11012,
											"end": 11047,
											"name": "ISZERO"
										},
										{
											"begin": 11012,
											"end": 11047,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 11012,
											"end": 11047,
											"name": "JUMPI"
										},
										{
											"begin": 11012,
											"end": 11047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11012,
											"end": 11047,
											"name": "DUP1"
										},
										{
											"begin": 11012,
											"end": 11047,
											"name": "REVERT"
										},
										{
											"begin": 11012,
											"end": 11047,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 11012,
											"end": 11047,
											"name": "JUMPDEST"
										},
										{
											"begin": 11062,
											"end": 11072,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11062,
											"end": 11072,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 11062,
											"end": 11072,
											"name": "SWAP1"
										},
										{
											"begin": 11062,
											"end": 11072,
											"name": "SLOAD"
										},
										{
											"begin": 11062,
											"end": 11072,
											"name": "SWAP1"
										},
										{
											"begin": 11062,
											"end": 11072,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11062,
											"end": 11072,
											"name": "EXP"
										},
										{
											"begin": 11062,
											"end": 11072,
											"name": "SWAP1"
										},
										{
											"begin": 11062,
											"end": 11072,
											"name": "DIV"
										},
										{
											"begin": 11062,
											"end": 11072,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11062,
											"end": 11072,
											"name": "AND"
										},
										{
											"begin": 11058,
											"end": 11255,
											"name": "ISZERO"
										},
										{
											"begin": 11058,
											"end": 11255,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 11058,
											"end": 11255,
											"name": "JUMPI"
										},
										{
											"begin": 11118,
											"end": 11133,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11118,
											"end": 11133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11118,
											"end": 11133,
											"name": "SWAP1"
										},
										{
											"begin": 11118,
											"end": 11133,
											"name": "SLOAD"
										},
										{
											"begin": 11118,
											"end": 11133,
											"name": "SWAP1"
										},
										{
											"begin": 11118,
											"end": 11133,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11118,
											"end": 11133,
											"name": "EXP"
										},
										{
											"begin": 11118,
											"end": 11133,
											"name": "SWAP1"
										},
										{
											"begin": 11118,
											"end": 11133,
											"name": "DIV"
										},
										{
											"begin": 11118,
											"end": 11133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11118,
											"end": 11133,
											"name": "AND"
										},
										{
											"begin": 11096,
											"end": 11151,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11096,
											"end": 11151,
											"name": "AND"
										},
										{
											"begin": 11096,
											"end": 11151,
											"name": "PUSH",
											"value": "6E18980A"
										},
										{
											"begin": 11152,
											"end": 11162,
											"name": "CALLER"
										},
										{
											"begin": 11164,
											"end": 11167,
											"name": "DUP5"
										},
										{
											"begin": 11169,
											"end": 11175,
											"name": "DUP5"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "MLOAD"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP5"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "AND"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "MUL"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP2"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "MSTORE"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "ADD"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP1"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP5"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "AND"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "AND"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP2"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "MSTORE"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "ADD"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP4"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "AND"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "AND"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP2"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "MSTORE"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "ADD"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP3"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP2"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "MSTORE"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "ADD"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "SWAP4"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "POP"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "POP"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "POP"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "POP"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "MLOAD"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP1"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP4"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "SUB"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP2"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP8"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP1"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "ISZERO"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "ISZERO"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "JUMPI"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP1"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "REVERT"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "JUMPDEST"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "GAS"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "SUB"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "CALL"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "ISZERO"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "ISZERO"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "JUMPI"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "DUP1"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "REVERT"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "JUMPDEST"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "POP"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "POP"
										},
										{
											"begin": 11096,
											"end": 11176,
											"name": "POP"
										},
										{
											"begin": 11089,
											"end": 11176,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 11089,
											"end": 11176,
											"name": "JUMP"
										},
										{
											"begin": 11058,
											"end": 11255,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 11058,
											"end": 11255,
											"name": "JUMPDEST"
										},
										{
											"begin": 11216,
											"end": 11243,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 11231,
											"end": 11234,
											"name": "DUP3"
										},
										{
											"begin": 11236,
											"end": 11242,
											"name": "DUP3"
										},
										{
											"begin": 11216,
											"end": 11230,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 11216,
											"end": 11243,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11216,
											"end": 11243,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 11216,
											"end": 11243,
											"name": "JUMPDEST"
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "JUMPDEST"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "POP"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "POP"
										},
										{
											"begin": 10936,
											"end": 11262,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 14438,
											"end": 14440,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 14421,
											"end": 14435,
											"name": "DUP3"
										},
										{
											"begin": 14421,
											"end": 14440,
											"name": "LT"
										},
										{
											"begin": 14413,
											"end": 14441,
											"name": "ISZERO"
										},
										{
											"begin": 14413,
											"end": 14441,
											"name": "ISZERO"
										},
										{
											"begin": 14413,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 14413,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 14413,
											"end": 14441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14413,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 14413,
											"end": 14441,
											"name": "REVERT"
										},
										{
											"begin": 14413,
											"end": 14441,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 14413,
											"end": 14441,
											"name": "JUMPDEST"
										},
										{
											"begin": 14472,
											"end": 14474,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 14460,
											"end": 14469,
											"name": "DUP2"
										},
										{
											"begin": 14460,
											"end": 14474,
											"name": "LT"
										},
										{
											"begin": 14452,
											"end": 14475,
											"name": "ISZERO"
										},
										{
											"begin": 14452,
											"end": 14475,
											"name": "ISZERO"
										},
										{
											"begin": 14452,
											"end": 14475,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 14452,
											"end": 14475,
											"name": "JUMPI"
										},
										{
											"begin": 14452,
											"end": 14475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14452,
											"end": 14475,
											"name": "DUP1"
										},
										{
											"begin": 14452,
											"end": 14475,
											"name": "REVERT"
										},
										{
											"begin": 14452,
											"end": 14475,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 14452,
											"end": 14475,
											"name": "JUMPDEST"
										},
										{
											"begin": 14506,
											"end": 14520,
											"name": "DUP2"
										},
										{
											"begin": 14488,
											"end": 14503,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14488,
											"end": 14520,
											"name": "DUP2"
										},
										{
											"begin": 14488,
											"end": 14520,
											"name": "SWAP1"
										},
										{
											"begin": 14488,
											"end": 14520,
											"name": "SSTORE"
										},
										{
											"begin": 14488,
											"end": 14520,
											"name": "POP"
										},
										{
											"begin": 14544,
											"end": 14571,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 14562,
											"end": 14570,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 14562,
											"end": 14570,
											"name": "SLOAD"
										},
										{
											"begin": 14558,
											"end": 14560,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14558,
											"end": 14570,
											"name": "EXP"
										},
										{
											"begin": 14544,
											"end": 14553,
											"name": "DUP3"
										},
										{
											"begin": 14544,
											"end": 14557,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 14544,
											"end": 14557,
											"name": "SWAP1"
										},
										{
											"begin": 14544,
											"end": 14571,
											"name": "SWAP2"
										},
										{
											"begin": 14544,
											"end": 14571,
											"name": "SWAP1"
										},
										{
											"begin": 14544,
											"end": 14571,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14544,
											"end": 14571,
											"name": "AND"
										},
										{
											"begin": 14544,
											"end": 14571,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14544,
											"end": 14571,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 14544,
											"end": 14571,
											"name": "JUMPDEST"
										},
										{
											"begin": 14531,
											"end": 14541,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14531,
											"end": 14571,
											"name": "DUP2"
										},
										{
											"begin": 14531,
											"end": 14571,
											"name": "SWAP1"
										},
										{
											"begin": 14531,
											"end": 14571,
											"name": "SSTORE"
										},
										{
											"begin": 14531,
											"end": 14571,
											"name": "POP"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "PUSH",
											"value": "B044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E"
										},
										{
											"begin": 14591,
											"end": 14606,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14591,
											"end": 14606,
											"name": "SLOAD"
										},
										{
											"begin": 14608,
											"end": 14618,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14608,
											"end": 14618,
											"name": "SLOAD"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "MLOAD"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "DUP1"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "DUP4"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "DUP2"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "MSTORE"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "ADD"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "DUP3"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "DUP2"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "MSTORE"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "ADD"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "SWAP3"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "POP"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "POP"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "POP"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "MLOAD"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "DUP1"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "SWAP2"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "SUB"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "SWAP1"
										},
										{
											"begin": 14584,
											"end": 14619,
											"name": "LOG1"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "POP"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "POP"
										},
										{
											"begin": 14240,
											"end": 14627,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 13586,
											"end": 13598,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13586,
											"end": 13598,
											"name": "SLOAD"
										},
										{
											"begin": 13577,
											"end": 13583,
											"name": "DUP2"
										},
										{
											"begin": 13562,
											"end": 13574,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13562,
											"end": 13574,
											"name": "SLOAD"
										},
										{
											"begin": 13562,
											"end": 13583,
											"name": "ADD"
										},
										{
											"begin": 13562,
											"end": 13598,
											"name": "GT"
										},
										{
											"begin": 13554,
											"end": 13599,
											"name": "ISZERO"
										},
										{
											"begin": 13554,
											"end": 13599,
											"name": "ISZERO"
										},
										{
											"begin": 13554,
											"end": 13599,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 13554,
											"end": 13599,
											"name": "JUMPI"
										},
										{
											"begin": 13554,
											"end": 13599,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13554,
											"end": 13599,
											"name": "DUP1"
										},
										{
											"begin": 13554,
											"end": 13599,
											"name": "REVERT"
										},
										{
											"begin": 13554,
											"end": 13599,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 13554,
											"end": 13599,
											"name": "JUMPDEST"
										},
										{
											"begin": 13645,
											"end": 13653,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "DUP1"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "SWAP1"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "SLOAD"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "SWAP1"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "EXP"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "SWAP1"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "DIV"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13654,
											"end": 13659,
											"name": "AND"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "AND"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "AND"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "DUP2"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "MSTORE"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "ADD"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "SWAP1"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "DUP2"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "MSTORE"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "ADD"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "KECCAK256"
										},
										{
											"begin": 13645,
											"end": 13660,
											"name": "SLOAD"
										},
										{
											"begin": 13636,
											"end": 13642,
											"name": "DUP2"
										},
										{
											"begin": 13618,
											"end": 13626,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13627,
											"end": 13632,
											"name": "DUP1"
										},
										{
											"begin": 13627,
											"end": 13632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13627,
											"end": 13632,
											"name": "SWAP1"
										},
										{
											"begin": 13627,
											"end": 13632,
											"name": "SLOAD"
										},
										{
											"begin": 13627,
											"end": 13632,
											"name": "SWAP1"
										},
										{
											"begin": 13627,
											"end": 13632,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13627,
											"end": 13632,
											"name": "EXP"
										},
										{
											"begin": 13627,
											"end": 13632,
											"name": "SWAP1"
										},
										{
											"begin": 13627,
											"end": 13632,
											"name": "DIV"
										},
										{
											"begin": 13627,
											"end": 13632,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13627,
											"end": 13632,
											"name": "AND"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "AND"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "AND"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "DUP2"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "MSTORE"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "ADD"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "SWAP1"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "DUP2"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "MSTORE"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "ADD"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "KECCAK256"
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "SLOAD"
										},
										{
											"begin": 13618,
											"end": 13642,
											"name": "ADD"
										},
										{
											"begin": 13618,
											"end": 13660,
											"name": "GT"
										},
										{
											"begin": 13610,
											"end": 13661,
											"name": "ISZERO"
										},
										{
											"begin": 13610,
											"end": 13661,
											"name": "ISZERO"
										},
										{
											"begin": 13610,
											"end": 13661,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 13610,
											"end": 13661,
											"name": "JUMPI"
										},
										{
											"begin": 13610,
											"end": 13661,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13610,
											"end": 13661,
											"name": "DUP1"
										},
										{
											"begin": 13610,
											"end": 13661,
											"name": "REVERT"
										},
										{
											"begin": 13610,
											"end": 13661,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 13610,
											"end": 13661,
											"name": "JUMPDEST"
										},
										{
											"begin": 13693,
											"end": 13699,
											"name": "DUP1"
										},
										{
											"begin": 13674,
											"end": 13682,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13683,
											"end": 13688,
											"name": "DUP1"
										},
										{
											"begin": 13683,
											"end": 13688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13683,
											"end": 13688,
											"name": "SWAP1"
										},
										{
											"begin": 13683,
											"end": 13688,
											"name": "SLOAD"
										},
										{
											"begin": 13683,
											"end": 13688,
											"name": "SWAP1"
										},
										{
											"begin": 13683,
											"end": 13688,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13683,
											"end": 13688,
											"name": "EXP"
										},
										{
											"begin": 13683,
											"end": 13688,
											"name": "SWAP1"
										},
										{
											"begin": 13683,
											"end": 13688,
											"name": "DIV"
										},
										{
											"begin": 13683,
											"end": 13688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13683,
											"end": 13688,
											"name": "AND"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "AND"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "AND"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "DUP2"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "MSTORE"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "ADD"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "SWAP1"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "DUP2"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "MSTORE"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "ADD"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "KECCAK256"
										},
										{
											"begin": 13674,
											"end": 13689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13674,
											"end": 13699,
											"name": "DUP3"
										},
										{
											"begin": 13674,
											"end": 13699,
											"name": "DUP3"
										},
										{
											"begin": 13674,
											"end": 13699,
											"name": "SLOAD"
										},
										{
											"begin": 13674,
											"end": 13699,
											"name": "ADD"
										},
										{
											"begin": 13674,
											"end": 13699,
											"name": "SWAP3"
										},
										{
											"begin": 13674,
											"end": 13699,
											"name": "POP"
										},
										{
											"begin": 13674,
											"end": 13699,
											"name": "POP"
										},
										{
											"begin": 13674,
											"end": 13699,
											"name": "DUP2"
										},
										{
											"begin": 13674,
											"end": 13699,
											"name": "SWAP1"
										},
										{
											"begin": 13674,
											"end": 13699,
											"name": "SSTORE"
										},
										{
											"begin": 13674,
											"end": 13699,
											"name": "POP"
										},
										{
											"begin": 13726,
											"end": 13732,
											"name": "DUP1"
										},
										{
											"begin": 13710,
											"end": 13722,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13710,
											"end": 13722,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "DUP3"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "DUP3"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "SLOAD"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "ADD"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "SWAP3"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "POP"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "POP"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "DUP2"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "SWAP1"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "SSTORE"
										},
										{
											"begin": 13710,
											"end": 13732,
											"name": "POP"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "PUSH",
											"value": "CB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A"
										},
										{
											"begin": 13749,
											"end": 13755,
											"name": "DUP2"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "MLOAD"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "DUP1"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "DUP3"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "DUP2"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "MSTORE"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "ADD"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "SWAP2"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "POP"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "POP"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "MLOAD"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "DUP1"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "SWAP2"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "SUB"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "SWAP1"
										},
										{
											"begin": 13743,
											"end": 13756,
											"name": "LOG1"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "POP"
										},
										{
											"begin": 13498,
											"end": 13764,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 14076,
											"end": 14082,
											"name": "DUP1"
										},
										{
											"begin": 14060,
											"end": 14072,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14060,
											"end": 14072,
											"name": "SLOAD"
										},
										{
											"begin": 14060,
											"end": 14082,
											"name": "LT"
										},
										{
											"begin": 14060,
											"end": 14082,
											"name": "ISZERO"
										},
										{
											"begin": 14052,
											"end": 14083,
											"name": "ISZERO"
										},
										{
											"begin": 14052,
											"end": 14083,
											"name": "ISZERO"
										},
										{
											"begin": 14052,
											"end": 14083,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 14052,
											"end": 14083,
											"name": "JUMPI"
										},
										{
											"begin": 14052,
											"end": 14083,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14052,
											"end": 14083,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14083,
											"name": "REVERT"
										},
										{
											"begin": 14052,
											"end": 14083,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 14052,
											"end": 14083,
											"name": "JUMPDEST"
										},
										{
											"begin": 14121,
											"end": 14127,
											"name": "DUP1"
										},
										{
											"begin": 14102,
											"end": 14110,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14111,
											"end": 14116,
											"name": "DUP1"
										},
										{
											"begin": 14111,
											"end": 14116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14111,
											"end": 14116,
											"name": "SWAP1"
										},
										{
											"begin": 14111,
											"end": 14116,
											"name": "SLOAD"
										},
										{
											"begin": 14111,
											"end": 14116,
											"name": "SWAP1"
										},
										{
											"begin": 14111,
											"end": 14116,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14111,
											"end": 14116,
											"name": "EXP"
										},
										{
											"begin": 14111,
											"end": 14116,
											"name": "SWAP1"
										},
										{
											"begin": 14111,
											"end": 14116,
											"name": "DIV"
										},
										{
											"begin": 14111,
											"end": 14116,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14111,
											"end": 14116,
											"name": "AND"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "AND"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "AND"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "DUP2"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "MSTORE"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "ADD"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "SWAP1"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "DUP2"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "MSTORE"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "ADD"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "KECCAK256"
										},
										{
											"begin": 14102,
											"end": 14117,
											"name": "SLOAD"
										},
										{
											"begin": 14102,
											"end": 14127,
											"name": "LT"
										},
										{
											"begin": 14102,
											"end": 14127,
											"name": "ISZERO"
										},
										{
											"begin": 14094,
											"end": 14128,
											"name": "ISZERO"
										},
										{
											"begin": 14094,
											"end": 14128,
											"name": "ISZERO"
										},
										{
											"begin": 14094,
											"end": 14128,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 14094,
											"end": 14128,
											"name": "JUMPI"
										},
										{
											"begin": 14094,
											"end": 14128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14094,
											"end": 14128,
											"name": "DUP1"
										},
										{
											"begin": 14094,
											"end": 14128,
											"name": "REVERT"
										},
										{
											"begin": 14094,
											"end": 14128,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 14094,
											"end": 14128,
											"name": "JUMPDEST"
										},
										{
											"begin": 14157,
											"end": 14163,
											"name": "DUP1"
										},
										{
											"begin": 14141,
											"end": 14153,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14141,
											"end": 14153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14141,
											"end": 14163,
											"name": "DUP3"
										},
										{
											"begin": 14141,
											"end": 14163,
											"name": "DUP3"
										},
										{
											"begin": 14141,
											"end": 14163,
											"name": "SLOAD"
										},
										{
											"begin": 14141,
											"end": 14163,
											"name": "SUB"
										},
										{
											"begin": 14141,
											"end": 14163,
											"name": "SWAP3"
										},
										{
											"begin": 14141,
											"end": 14163,
											"name": "POP"
										},
										{
											"begin": 14141,
											"end": 14163,
											"name": "POP"
										},
										{
											"begin": 14141,
											"end": 14163,
											"name": "DUP2"
										},
										{
											"begin": 14141,
											"end": 14163,
											"name": "SWAP1"
										},
										{
											"begin": 14141,
											"end": 14163,
											"name": "SSTORE"
										},
										{
											"begin": 14141,
											"end": 14163,
											"name": "POP"
										},
										{
											"begin": 14193,
											"end": 14199,
											"name": "DUP1"
										},
										{
											"begin": 14174,
											"end": 14182,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14183,
											"end": 14188,
											"name": "DUP1"
										},
										{
											"begin": 14183,
											"end": 14188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14183,
											"end": 14188,
											"name": "SWAP1"
										},
										{
											"begin": 14183,
											"end": 14188,
											"name": "SLOAD"
										},
										{
											"begin": 14183,
											"end": 14188,
											"name": "SWAP1"
										},
										{
											"begin": 14183,
											"end": 14188,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14183,
											"end": 14188,
											"name": "EXP"
										},
										{
											"begin": 14183,
											"end": 14188,
											"name": "SWAP1"
										},
										{
											"begin": 14183,
											"end": 14188,
											"name": "DIV"
										},
										{
											"begin": 14183,
											"end": 14188,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14183,
											"end": 14188,
											"name": "AND"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "AND"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "AND"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "DUP2"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "MSTORE"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "ADD"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "SWAP1"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "DUP2"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "MSTORE"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "ADD"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "KECCAK256"
										},
										{
											"begin": 14174,
											"end": 14189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "DUP3"
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "DUP3"
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "SLOAD"
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "SUB"
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "SWAP3"
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "POP"
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "POP"
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "DUP2"
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "SWAP1"
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "SSTORE"
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "POP"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "PUSH",
											"value": "702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44"
										},
										{
											"begin": 14217,
											"end": 14223,
											"name": "DUP2"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "MLOAD"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "DUP1"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "DUP3"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "DUP2"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "MSTORE"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "ADD"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "SWAP2"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "POP"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "POP"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "MLOAD"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "DUP1"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "SWAP2"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "SUB"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "SWAP1"
										},
										{
											"begin": 14210,
											"end": 14224,
											"name": "LOG1"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "POP"
										},
										{
											"begin": 13995,
											"end": 14232,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "JUMPDEST"
										},
										{
											"begin": 12588,
											"end": 12602,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12619,
											"end": 12629,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12619,
											"end": 12629,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 12619,
											"end": 12629,
											"name": "SWAP1"
										},
										{
											"begin": 12619,
											"end": 12629,
											"name": "SLOAD"
										},
										{
											"begin": 12619,
											"end": 12629,
											"name": "SWAP1"
										},
										{
											"begin": 12619,
											"end": 12629,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12619,
											"end": 12629,
											"name": "EXP"
										},
										{
											"begin": 12619,
											"end": 12629,
											"name": "SWAP1"
										},
										{
											"begin": 12619,
											"end": 12629,
											"name": "DIV"
										},
										{
											"begin": 12619,
											"end": 12629,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12619,
											"end": 12629,
											"name": "AND"
										},
										{
											"begin": 12615,
											"end": 12796,
											"name": "ISZERO"
										},
										{
											"begin": 12615,
											"end": 12796,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 12615,
											"end": 12796,
											"name": "JUMPI"
										},
										{
											"begin": 12667,
											"end": 12682,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12667,
											"end": 12682,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12667,
											"end": 12682,
											"name": "SWAP1"
										},
										{
											"begin": 12667,
											"end": 12682,
											"name": "SLOAD"
										},
										{
											"begin": 12667,
											"end": 12682,
											"name": "SWAP1"
										},
										{
											"begin": 12667,
											"end": 12682,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12667,
											"end": 12682,
											"name": "EXP"
										},
										{
											"begin": 12667,
											"end": 12682,
											"name": "SWAP1"
										},
										{
											"begin": 12667,
											"end": 12682,
											"name": "DIV"
										},
										{
											"begin": 12667,
											"end": 12682,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12667,
											"end": 12682,
											"name": "AND"
										},
										{
											"begin": 12653,
											"end": 12693,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12653,
											"end": 12693,
											"name": "AND"
										},
										{
											"begin": 12653,
											"end": 12693,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 12694,
											"end": 12700,
											"name": "DUP5"
										},
										{
											"begin": 12702,
											"end": 12710,
											"name": "DUP5"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "MLOAD"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "ADD"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "MSTORE"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "MLOAD"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP4"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "AND"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "MUL"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP2"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "MSTORE"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "ADD"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP1"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP4"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "AND"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "AND"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP2"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "MSTORE"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "ADD"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP3"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "AND"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "AND"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP2"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "MSTORE"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "ADD"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "SWAP3"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "POP"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "POP"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "POP"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "MLOAD"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP1"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP4"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "SUB"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP2"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP8"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP1"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "ISZERO"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "ISZERO"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "JUMPI"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP1"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "REVERT"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "JUMPDEST"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "GAS"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "SUB"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "CALL"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "ISZERO"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "ISZERO"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "JUMPI"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP1"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "REVERT"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "JUMPDEST"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "POP"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "POP"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "POP"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "MLOAD"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "DUP1"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "MLOAD"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "SWAP1"
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "POP"
										},
										{
											"begin": 12646,
											"end": 12711,
											"name": "SWAP1"
										},
										{
											"begin": 12646,
											"end": 12711,
											"name": "POP"
										},
										{
											"begin": 12646,
											"end": 12711,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 12646,
											"end": 12711,
											"name": "JUMP"
										},
										{
											"begin": 12615,
											"end": 12796,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 12615,
											"end": 12796,
											"name": "JUMPDEST"
										},
										{
											"begin": 12751,
											"end": 12784,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 12767,
											"end": 12773,
											"name": "DUP4"
										},
										{
											"begin": 12775,
											"end": 12783,
											"name": "DUP4"
										},
										{
											"begin": 12751,
											"end": 12766,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 12751,
											"end": 12784,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12751,
											"end": 12784,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 12751,
											"end": 12784,
											"name": "JUMPDEST"
										},
										{
											"begin": 12744,
											"end": 12784,
											"name": "SWAP1"
										},
										{
											"begin": 12744,
											"end": 12784,
											"name": "POP"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "JUMPDEST"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SWAP3"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "SWAP2"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "POP"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "POP"
										},
										{
											"begin": 12510,
											"end": 12803,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "JUMPDEST"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "SLOAD"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "DUP2"
										},
										{
											"begin": 3153,
											"end": 3184,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "JUMPDEST"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "MSTORE"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "DUP1"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "MSTORE"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "KECCAK256"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "SWAP2"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "POP"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "SLOAD"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "SWAP1"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "EXP"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "SWAP1"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "DIV"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "AND"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "DUP2"
										},
										{
											"begin": 8729,
											"end": 8775,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 9047,
											"end": 9052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9017,
											"end": 9030,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9031,
											"end": 9043,
											"name": "DUP4"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "AND"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "AND"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "DUP2"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "MSTORE"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "ADD"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "SWAP1"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "DUP2"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "MSTORE"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "ADD"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "KECCAK256"
										},
										{
											"begin": 9017,
											"end": 9044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "EXP"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "DUP2"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "SLOAD"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "DUP2"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "MUL"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "NOT"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "AND"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "SWAP1"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "DUP4"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "ISZERO"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "ISZERO"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "MUL"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "OR"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "SWAP1"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "SSTORE"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "POP"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "PUSH",
											"value": "D7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C"
										},
										{
											"begin": 9080,
											"end": 9092,
											"name": "DUP2"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "MLOAD"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "DUP1"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "DUP3"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "AND"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "AND"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "DUP2"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "MSTORE"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "ADD"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "SWAP2"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "POP"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "POP"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "MLOAD"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "DUP1"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "SWAP2"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "SUB"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "SWAP1"
										},
										{
											"begin": 9063,
											"end": 9093,
											"name": "LOG1"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "POP"
										},
										{
											"begin": 8941,
											"end": 9101,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "JUMPDEST"
										},
										{
											"begin": 4917,
											"end": 4927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "DUP2"
										},
										{
											"begin": 4885,
											"end": 4927,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 1905,
											"end": 1906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "AND"
										},
										{
											"begin": 1885,
											"end": 1893,
											"name": "DUP2"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "AND"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "EQ"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "ISZERO"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "JUMPI"
										},
										{
											"begin": 1932,
											"end": 1940,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "EXP"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SLOAD"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "MUL"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "NOT"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "AND"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "DUP4"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "AND"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "MUL"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "OR"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SWAP1"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SSTORE"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "POP"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 1881,
											"end": 1952,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "POP"
										},
										{
											"begin": 1808,
											"end": 1959,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "JUMPDEST"
										},
										{
											"begin": 9242,
											"end": 9257,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DUP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "CALLER"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1594,
											"end": 1613,
											"name": "EQ"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "ISZERO"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPI"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "REVERT"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "JUMPDEST"
										},
										{
											"begin": 9199,
											"end": 9212,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9229,
											"name": "DUP4"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "AND"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "AND"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "DUP2"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "MSTORE"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "ADD"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "SWAP1"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "DUP2"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "MSTORE"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "ADD"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "KECCAK256"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "SWAP1"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "SLOAD"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "SWAP1"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "EXP"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "SWAP1"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "DIV"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "AND"
										},
										{
											"begin": 9191,
											"end": 9231,
											"name": "ISZERO"
										},
										{
											"begin": 9191,
											"end": 9231,
											"name": "ISZERO"
										},
										{
											"begin": 9191,
											"end": 9231,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 9191,
											"end": 9231,
											"name": "JUMPI"
										},
										{
											"begin": 9191,
											"end": 9231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9191,
											"end": 9231,
											"name": "DUP1"
										},
										{
											"begin": 9191,
											"end": 9231,
											"name": "REVERT"
										},
										{
											"begin": 9191,
											"end": 9231,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 9191,
											"end": 9231,
											"name": "JUMPDEST"
										},
										{
											"begin": 9260,
											"end": 9287,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 9270,
											"end": 9286,
											"name": "DUP3"
										},
										{
											"begin": 9260,
											"end": 9269,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 9260,
											"end": 9287,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9260,
											"end": 9287,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 9260,
											"end": 9287,
											"name": "JUMPDEST"
										},
										{
											"begin": 9242,
											"end": 9287,
											"name": "SWAP1"
										},
										{
											"begin": 9242,
											"end": 9287,
											"name": "POP"
										},
										{
											"begin": 9327,
											"end": 9328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9306,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9307,
											"end": 9323,
											"name": "DUP5"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "AND"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "AND"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "DUP2"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "MSTORE"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "ADD"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "DUP2"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "MSTORE"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "ADD"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "KECCAK256"
										},
										{
											"begin": 9298,
											"end": 9328,
											"name": "DUP2"
										},
										{
											"begin": 9298,
											"end": 9328,
											"name": "SWAP1"
										},
										{
											"begin": 9298,
											"end": 9328,
											"name": "SSTORE"
										},
										{
											"begin": 9298,
											"end": 9328,
											"name": "POP"
										},
										{
											"begin": 9355,
											"end": 9365,
											"name": "DUP1"
										},
										{
											"begin": 9339,
											"end": 9351,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9339,
											"end": 9351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9339,
											"end": 9365,
											"name": "DUP3"
										},
										{
											"begin": 9339,
											"end": 9365,
											"name": "DUP3"
										},
										{
											"begin": 9339,
											"end": 9365,
											"name": "SLOAD"
										},
										{
											"begin": 9339,
											"end": 9365,
											"name": "SUB"
										},
										{
											"begin": 9339,
											"end": 9365,
											"name": "SWAP3"
										},
										{
											"begin": 9339,
											"end": 9365,
											"name": "POP"
										},
										{
											"begin": 9339,
											"end": 9365,
											"name": "POP"
										},
										{
											"begin": 9339,
											"end": 9365,
											"name": "DUP2"
										},
										{
											"begin": 9339,
											"end": 9365,
											"name": "SWAP1"
										},
										{
											"begin": 9339,
											"end": 9365,
											"name": "SSTORE"
										},
										{
											"begin": 9339,
											"end": 9365,
											"name": "POP"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "PUSH",
											"value": "61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6"
										},
										{
											"begin": 9396,
											"end": 9412,
											"name": "DUP3"
										},
										{
											"begin": 9414,
											"end": 9424,
											"name": "DUP3"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "MLOAD"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "DUP4"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "AND"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "AND"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "MSTORE"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "DUP3"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "DUP2"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "MSTORE"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "ADD"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "SWAP3"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "POP"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "POP"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "POP"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "MLOAD"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "DUP1"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "SWAP2"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "SUB"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "SWAP1"
										},
										{
											"begin": 9376,
											"end": 9425,
											"name": "LOG1"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "POP"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "POP"
										},
										{
											"begin": 9109,
											"end": 9433,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6365,
											"end": 6938,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 6365,
											"end": 6938,
											"name": "JUMPDEST"
										},
										{
											"begin": 6436,
											"end": 6442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3378,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3370,
											"end": 3374,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3378,
											"name": "ADD"
										},
										{
											"begin": 3352,
											"end": 3360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3360,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3352,
											"end": 3367,
											"name": "SWAP1"
										},
										{
											"begin": 3352,
											"end": 3367,
											"name": "POP"
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "LT"
										},
										{
											"begin": 3350,
											"end": 3379,
											"name": "ISZERO"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "ISZERO"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "ISZERO"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "JUMPI"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "DUP1"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "REVERT"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "JUMPDEST"
										},
										{
											"begin": 6786,
											"end": 6787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6782,
											"name": "DUP3"
										},
										{
											"begin": 6776,
											"end": 6787,
											"name": "EQ"
										},
										{
											"begin": 6776,
											"end": 6787,
											"name": "ISZERO"
										},
										{
											"begin": 6775,
											"end": 6828,
											"name": "DUP1"
										},
										{
											"begin": 6775,
											"end": 6828,
											"name": "ISZERO"
										},
										{
											"begin": 6775,
											"end": 6828,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 6775,
											"end": 6828,
											"name": "JUMPI"
										},
										{
											"begin": 6775,
											"end": 6828,
											"name": "POP"
										},
										{
											"begin": 6826,
											"end": 6827,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6793,
											"end": 6800,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6801,
											"end": 6811,
											"name": "CALLER"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "AND"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "AND"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "DUP2"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "MSTORE"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "ADD"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "SWAP1"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "DUP2"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "MSTORE"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "ADD"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "KECCAK256"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6813,
											"end": 6821,
											"name": "DUP6"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "AND"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "AND"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "DUP2"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "MSTORE"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "ADD"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "SWAP1"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "DUP2"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "MSTORE"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "ADD"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "KECCAK256"
										},
										{
											"begin": 6793,
											"end": 6822,
											"name": "SLOAD"
										},
										{
											"begin": 6793,
											"end": 6827,
											"name": "EQ"
										},
										{
											"begin": 6793,
											"end": 6827,
											"name": "ISZERO"
										},
										{
											"begin": 6775,
											"end": 6828,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 6775,
											"end": 6828,
											"name": "JUMPDEST"
										},
										{
											"begin": 6773,
											"end": 6829,
											"name": "ISZERO"
										},
										{
											"begin": 6765,
											"end": 6830,
											"name": "ISZERO"
										},
										{
											"begin": 6765,
											"end": 6830,
											"name": "ISZERO"
										},
										{
											"begin": 6765,
											"end": 6830,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 6765,
											"end": 6830,
											"name": "JUMPI"
										},
										{
											"begin": 6765,
											"end": 6830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6830,
											"name": "DUP1"
										},
										{
											"begin": 6765,
											"end": 6830,
											"name": "REVERT"
										},
										{
											"begin": 6765,
											"end": 6830,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 6765,
											"end": 6830,
											"name": "JUMPDEST"
										},
										{
											"begin": 6875,
											"end": 6881,
											"name": "DUP2"
										},
										{
											"begin": 6843,
											"end": 6850,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6861,
											"name": "CALLER"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "AND"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "AND"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "DUP2"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "MSTORE"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "ADD"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "SWAP1"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "DUP2"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "MSTORE"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "ADD"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6862,
											"name": "KECCAK256"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6871,
											"name": "DUP6"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "AND"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "AND"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "DUP2"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "MSTORE"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "ADD"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "SWAP1"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "DUP2"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "MSTORE"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "ADD"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6872,
											"name": "KECCAK256"
										},
										{
											"begin": 6843,
											"end": 6881,
											"name": "DUP2"
										},
										{
											"begin": 6843,
											"end": 6881,
											"name": "SWAP1"
										},
										{
											"begin": 6843,
											"end": 6881,
											"name": "SSTORE"
										},
										{
											"begin": 6843,
											"end": 6881,
											"name": "POP"
										},
										{
											"begin": 6913,
											"end": 6921,
											"name": "DUP3"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "AND"
										},
										{
											"begin": 6901,
											"end": 6911,
											"name": "CALLER"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "AND"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6923,
											"end": 6929,
											"name": "DUP5"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "MLOAD"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "DUP1"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "DUP3"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "DUP2"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "MSTORE"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "ADD"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "SWAP2"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "POP"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "POP"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "MLOAD"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "DUP1"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "SWAP2"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "SUB"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "SWAP1"
										},
										{
											"begin": 6892,
											"end": 6930,
											"name": "LOG3"
										},
										{
											"begin": 6365,
											"end": 6938,
											"name": "POP"
										},
										{
											"begin": 6365,
											"end": 6938,
											"name": "POP"
										},
										{
											"begin": 6365,
											"end": 6938,
											"name": "POP"
										},
										{
											"begin": 6365,
											"end": 6938,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5217,
											"end": 6118,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 5217,
											"end": 6118,
											"name": "JUMPDEST"
										},
										{
											"begin": 5322,
											"end": 5336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5544,
											"name": "DUP1"
										},
										{
											"begin": 5788,
											"end": 5803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5309,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3377,
											"end": 3378,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3370,
											"end": 3374,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3378,
											"name": "ADD"
										},
										{
											"begin": 3352,
											"end": 3360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3360,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3352,
											"end": 3367,
											"name": "SWAP1"
										},
										{
											"begin": 3352,
											"end": 3367,
											"name": "POP"
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "LT"
										},
										{
											"begin": 3350,
											"end": 3379,
											"name": "ISZERO"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "ISZERO"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "ISZERO"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "JUMPI"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "DUP1"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "REVERT"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "JUMPDEST"
										},
										{
											"begin": 5339,
											"end": 5346,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5352,
											"name": "DUP9"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "AND"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "AND"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "DUP2"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "MSTORE"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "ADD"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "SWAP1"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "DUP2"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "MSTORE"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "ADD"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5339,
											"end": 5353,
											"name": "KECCAK256"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5364,
											"name": "CALLER"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "AND"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "AND"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "DUP2"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "MSTORE"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "ADD"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "SWAP1"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "DUP2"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "MSTORE"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "ADD"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "KECCAK256"
										},
										{
											"begin": 5339,
											"end": 5365,
											"name": "SLOAD"
										},
										{
											"begin": 5322,
											"end": 5365,
											"name": "SWAP4"
										},
										{
											"begin": 5322,
											"end": 5365,
											"name": "POP"
										},
										{
											"begin": 5547,
											"end": 5587,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 5581,
											"end": 5586,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 5559,
											"end": 5574,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5559,
											"end": 5574,
											"name": "SLOAD"
										},
										{
											"begin": 5548,
											"end": 5554,
											"name": "DUP9"
										},
										{
											"begin": 5548,
											"end": 5558,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 5548,
											"end": 5558,
											"name": "SWAP1"
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "SWAP2"
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "SWAP1"
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "AND"
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "JUMPDEST"
										},
										{
											"begin": 5547,
											"end": 5580,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 5547,
											"end": 5580,
											"name": "SWAP1"
										},
										{
											"begin": 5547,
											"end": 5587,
											"name": "SWAP2"
										},
										{
											"begin": 5547,
											"end": 5587,
											"name": "SWAP1"
										},
										{
											"begin": 5547,
											"end": 5587,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5547,
											"end": 5587,
											"name": "AND"
										},
										{
											"begin": 5547,
											"end": 5587,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5547,
											"end": 5587,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 5547,
											"end": 5587,
											"name": "JUMPDEST"
										},
										{
											"begin": 5536,
											"end": 5587,
											"name": "SWAP3"
										},
										{
											"begin": 5536,
											"end": 5587,
											"name": "POP"
										},
										{
											"begin": 5608,
											"end": 5618,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5608,
											"end": 5618,
											"name": "SLOAD"
										},
										{
											"begin": 5602,
											"end": 5605,
											"name": "DUP4"
										},
										{
											"begin": 5602,
											"end": 5618,
											"name": "GT"
										},
										{
											"begin": 5598,
											"end": 5663,
											"name": "ISZERO"
										},
										{
											"begin": 5598,
											"end": 5663,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 5598,
											"end": 5663,
											"name": "JUMPI"
										},
										{
											"begin": 5641,
											"end": 5651,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5641,
											"end": 5651,
											"name": "SLOAD"
										},
										{
											"begin": 5635,
											"end": 5651,
											"name": "SWAP3"
										},
										{
											"begin": 5635,
											"end": 5651,
											"name": "POP"
										},
										{
											"begin": 5598,
											"end": 5663,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 5598,
											"end": 5663,
											"name": "JUMPDEST"
										},
										{
											"begin": 4917,
											"end": 4927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5687,
											"name": "DUP5"
										},
										{
											"begin": 5677,
											"end": 5698,
											"name": "LT"
										},
										{
											"begin": 5673,
											"end": 5778,
											"name": "ISZERO"
										},
										{
											"begin": 5673,
											"end": 5778,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 5673,
											"end": 5778,
											"name": "JUMPI"
										},
										{
											"begin": 5744,
											"end": 5766,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 5759,
											"end": 5765,
											"name": "DUP6"
										},
										{
											"begin": 5744,
											"end": 5754,
											"name": "DUP6"
										},
										{
											"begin": 5744,
											"end": 5758,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 5744,
											"end": 5758,
											"name": "SWAP1"
										},
										{
											"begin": 5744,
											"end": 5766,
											"name": "SWAP2"
										},
										{
											"begin": 5744,
											"end": 5766,
											"name": "SWAP1"
										},
										{
											"begin": 5744,
											"end": 5766,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5744,
											"end": 5766,
											"name": "AND"
										},
										{
											"begin": 5744,
											"end": 5766,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5744,
											"end": 5766,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 5744,
											"end": 5766,
											"name": "JUMPDEST"
										},
										{
											"begin": 5715,
											"end": 5722,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "DUP10"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "AND"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "AND"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "DUP2"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "MSTORE"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "ADD"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "SWAP1"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "DUP2"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "MSTORE"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "ADD"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5729,
											"name": "KECCAK256"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5730,
											"end": 5740,
											"name": "CALLER"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "AND"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "AND"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "DUP2"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "MSTORE"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "ADD"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "SWAP1"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "DUP2"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "MSTORE"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "ADD"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "KECCAK256"
										},
										{
											"begin": 5715,
											"end": 5766,
											"name": "DUP2"
										},
										{
											"begin": 5715,
											"end": 5766,
											"name": "SWAP1"
										},
										{
											"begin": 5715,
											"end": 5766,
											"name": "SSTORE"
										},
										{
											"begin": 5715,
											"end": 5766,
											"name": "POP"
										},
										{
											"begin": 5673,
											"end": 5778,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 5673,
											"end": 5778,
											"name": "JUMPDEST"
										},
										{
											"begin": 5806,
											"end": 5821,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 5817,
											"end": 5820,
											"name": "DUP4"
										},
										{
											"begin": 5806,
											"end": 5812,
											"name": "DUP7"
										},
										{
											"begin": 5806,
											"end": 5816,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 5806,
											"end": 5816,
											"name": "SWAP1"
										},
										{
											"begin": 5806,
											"end": 5821,
											"name": "SWAP2"
										},
										{
											"begin": 5806,
											"end": 5821,
											"name": "SWAP1"
										},
										{
											"begin": 5806,
											"end": 5821,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5806,
											"end": 5821,
											"name": "AND"
										},
										{
											"begin": 5806,
											"end": 5821,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5806,
											"end": 5821,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 5806,
											"end": 5821,
											"name": "JUMPDEST"
										},
										{
											"begin": 5788,
											"end": 5821,
											"name": "SWAP2"
										},
										{
											"begin": 5788,
											"end": 5821,
											"name": "POP"
										},
										{
											"begin": 5850,
											"end": 5877,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 5870,
											"end": 5876,
											"name": "DUP6"
										},
										{
											"begin": 5850,
											"end": 5858,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5864,
											"name": "DUP11"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "AND"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "AND"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "DUP2"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "MSTORE"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "ADD"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "SWAP1"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "DUP2"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "MSTORE"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "ADD"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "KECCAK256"
										},
										{
											"begin": 5850,
											"end": 5865,
											"name": "SLOAD"
										},
										{
											"begin": 5850,
											"end": 5869,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 5850,
											"end": 5869,
											"name": "SWAP1"
										},
										{
											"begin": 5850,
											"end": 5877,
											"name": "SWAP2"
										},
										{
											"begin": 5850,
											"end": 5877,
											"name": "SWAP1"
										},
										{
											"begin": 5850,
											"end": 5877,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5850,
											"end": 5877,
											"name": "AND"
										},
										{
											"begin": 5850,
											"end": 5877,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5850,
											"end": 5877,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 5850,
											"end": 5877,
											"name": "JUMPDEST"
										},
										{
											"begin": 5832,
											"end": 5840,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5846,
											"name": "DUP10"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "AND"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "AND"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "DUP2"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "MSTORE"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "ADD"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "SWAP1"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "DUP2"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "MSTORE"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "ADD"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "KECCAK256"
										},
										{
											"begin": 5832,
											"end": 5877,
											"name": "DUP2"
										},
										{
											"begin": 5832,
											"end": 5877,
											"name": "SWAP1"
										},
										{
											"begin": 5832,
											"end": 5877,
											"name": "SSTORE"
										},
										{
											"begin": 5832,
											"end": 5877,
											"name": "POP"
										},
										{
											"begin": 5904,
											"end": 5933,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 5922,
											"end": 5932,
											"name": "DUP3"
										},
										{
											"begin": 5904,
											"end": 5912,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5916,
											"name": "DUP10"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "AND"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "AND"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "DUP2"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "MSTORE"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "ADD"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "SWAP1"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "DUP2"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "MSTORE"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "ADD"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "KECCAK256"
										},
										{
											"begin": 5904,
											"end": 5917,
											"name": "SLOAD"
										},
										{
											"begin": 5904,
											"end": 5921,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5904,
											"end": 5921,
											"name": "SWAP1"
										},
										{
											"begin": 5904,
											"end": 5933,
											"name": "SWAP2"
										},
										{
											"begin": 5904,
											"end": 5933,
											"name": "SWAP1"
										},
										{
											"begin": 5904,
											"end": 5933,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5904,
											"end": 5933,
											"name": "AND"
										},
										{
											"begin": 5904,
											"end": 5933,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5904,
											"end": 5933,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 5904,
											"end": 5933,
											"name": "JUMPDEST"
										},
										{
											"begin": 5888,
											"end": 5896,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5897,
											"end": 5900,
											"name": "DUP9"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "AND"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "AND"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "DUP2"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "MSTORE"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "ADD"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "SWAP1"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "DUP2"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "MSTORE"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "ADD"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 5901,
											"name": "KECCAK256"
										},
										{
											"begin": 5888,
											"end": 5933,
											"name": "DUP2"
										},
										{
											"begin": 5888,
											"end": 5933,
											"name": "SWAP1"
										},
										{
											"begin": 5888,
											"end": 5933,
											"name": "SSTORE"
										},
										{
											"begin": 5888,
											"end": 5933,
											"name": "POP"
										},
										{
											"begin": 5954,
											"end": 5955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 5951,
											"name": "DUP4"
										},
										{
											"begin": 5948,
											"end": 5955,
											"name": "GT"
										},
										{
											"begin": 5944,
											"end": 6068,
											"name": "ISZERO"
										},
										{
											"begin": 5944,
											"end": 6068,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 5944,
											"end": 6068,
											"name": "JUMPI"
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 6010,
											"end": 6013,
											"name": "DUP4"
										},
										{
											"begin": 5990,
											"end": 5998,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6004,
											"name": "DUP1"
										},
										{
											"begin": 5999,
											"end": 6004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6004,
											"name": "SWAP1"
										},
										{
											"begin": 5999,
											"end": 6004,
											"name": "SLOAD"
										},
										{
											"begin": 5999,
											"end": 6004,
											"name": "SWAP1"
										},
										{
											"begin": 5999,
											"end": 6004,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5999,
											"end": 6004,
											"name": "EXP"
										},
										{
											"begin": 5999,
											"end": 6004,
											"name": "SWAP1"
										},
										{
											"begin": 5999,
											"end": 6004,
											"name": "DIV"
										},
										{
											"begin": 5999,
											"end": 6004,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5999,
											"end": 6004,
											"name": "AND"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "AND"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "AND"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "DUP2"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "MSTORE"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "ADD"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "SWAP1"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "DUP2"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "MSTORE"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "ADD"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "KECCAK256"
										},
										{
											"begin": 5990,
											"end": 6005,
											"name": "SLOAD"
										},
										{
											"begin": 5990,
											"end": 6009,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5990,
											"end": 6009,
											"name": "SWAP1"
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "SWAP2"
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "SWAP1"
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "AND"
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "JUMPDEST"
										},
										{
											"begin": 5972,
											"end": 5980,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 5986,
											"name": "DUP1"
										},
										{
											"begin": 5981,
											"end": 5986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 5986,
											"name": "SWAP1"
										},
										{
											"begin": 5981,
											"end": 5986,
											"name": "SLOAD"
										},
										{
											"begin": 5981,
											"end": 5986,
											"name": "SWAP1"
										},
										{
											"begin": 5981,
											"end": 5986,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5981,
											"end": 5986,
											"name": "EXP"
										},
										{
											"begin": 5981,
											"end": 5986,
											"name": "SWAP1"
										},
										{
											"begin": 5981,
											"end": 5986,
											"name": "DIV"
										},
										{
											"begin": 5981,
											"end": 5986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5981,
											"end": 5986,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "KECCAK256"
										},
										{
											"begin": 5972,
											"end": 6014,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 6014,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 6014,
											"name": "SSTORE"
										},
										{
											"begin": 5972,
											"end": 6014,
											"name": "POP"
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "DUP1"
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "SWAP1"
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "SLOAD"
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "SWAP1"
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "EXP"
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "SWAP1"
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "DIV"
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "AND"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "AND"
										},
										{
											"begin": 6038,
											"end": 6043,
											"name": "DUP8"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "AND"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6052,
											"end": 6055,
											"name": "DUP6"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "MLOAD"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "DUP1"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "DUP3"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "DUP2"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "MSTORE"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "ADD"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "SWAP2"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "POP"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "POP"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "MLOAD"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "DUP1"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "SWAP2"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "SUB"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "SWAP1"
										},
										{
											"begin": 6029,
											"end": 6056,
											"name": "LOG3"
										},
										{
											"begin": 5944,
											"end": 6068,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 5944,
											"end": 6068,
											"name": "JUMPDEST"
										},
										{
											"begin": 6094,
											"end": 6097,
											"name": "DUP6"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "AND"
										},
										{
											"begin": 6087,
											"end": 6092,
											"name": "DUP8"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "AND"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6099,
											"end": 6109,
											"name": "DUP5"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "MLOAD"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "DUP1"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "DUP3"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "DUP2"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "MSTORE"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "ADD"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "SWAP2"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "POP"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "POP"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "MLOAD"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "DUP1"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "SWAP2"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "SUB"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "SWAP1"
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "LOG3"
										},
										{
											"begin": 5217,
											"end": 6118,
											"name": "POP"
										},
										{
											"begin": 5217,
											"end": 6118,
											"name": "POP"
										},
										{
											"begin": 5217,
											"end": 6118,
											"name": "POP"
										},
										{
											"begin": 5217,
											"end": 6118,
											"name": "POP"
										},
										{
											"begin": 5217,
											"end": 6118,
											"name": "POP"
										},
										{
											"begin": 5217,
											"end": 6118,
											"name": "POP"
										},
										{
											"begin": 5217,
											"end": 6118,
											"name": "POP"
										},
										{
											"begin": 5217,
											"end": 6118,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4364,
											"end": 4480,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 4364,
											"end": 4480,
											"name": "JUMPDEST"
										},
										{
											"begin": 4424,
											"end": 4436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4464,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4471,
											"name": "DUP4"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "AND"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "AND"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "DUP2"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "MSTORE"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "ADD"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "SWAP1"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "DUP2"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "MSTORE"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "ADD"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "KECCAK256"
										},
										{
											"begin": 4456,
											"end": 4472,
											"name": "SLOAD"
										},
										{
											"begin": 4449,
											"end": 4472,
											"name": "SWAP1"
										},
										{
											"begin": 4449,
											"end": 4472,
											"name": "POP"
										},
										{
											"begin": 4364,
											"end": 4480,
											"name": "SWAP2"
										},
										{
											"begin": 4364,
											"end": 4480,
											"name": "SWAP1"
										},
										{
											"begin": 4364,
											"end": 4480,
											"name": "POP"
										},
										{
											"begin": 4364,
											"end": 4480,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3573,
											"end": 4146,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 3573,
											"end": 4146,
											"name": "JUMPDEST"
										},
										{
											"begin": 3659,
											"end": 3667,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3811,
											"name": "DUP1"
										},
										{
											"begin": 3640,
											"end": 3646,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3378,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3370,
											"end": 3374,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3378,
											"name": "ADD"
										},
										{
											"begin": 3352,
											"end": 3360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3360,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3352,
											"end": 3367,
											"name": "SWAP1"
										},
										{
											"begin": 3352,
											"end": 3367,
											"name": "POP"
										},
										{
											"begin": 3352,
											"end": 3378,
											"name": "LT"
										},
										{
											"begin": 3350,
											"end": 3379,
											"name": "ISZERO"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "ISZERO"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "ISZERO"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "JUMPI"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "DUP1"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "REVERT"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 3342,
											"end": 3380,
											"name": "JUMPDEST"
										},
										{
											"begin": 3670,
											"end": 3710,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 3704,
											"end": 3709,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 3671,
											"end": 3698,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SLOAD"
										},
										{
											"begin": 3671,
											"end": 3677,
											"name": "DUP8"
										},
										{
											"begin": 3671,
											"end": 3681,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 3671,
											"end": 3681,
											"name": "SWAP1"
										},
										{
											"begin": 3671,
											"end": 3698,
											"name": "SWAP2"
										},
										{
											"begin": 3671,
											"end": 3698,
											"name": "SWAP1"
										},
										{
											"begin": 3671,
											"end": 3698,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3671,
											"end": 3698,
											"name": "AND"
										},
										{
											"begin": 3671,
											"end": 3698,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3671,
											"end": 3698,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 3671,
											"end": 3698,
											"name": "JUMPDEST"
										},
										{
											"begin": 3670,
											"end": 3703,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 3670,
											"end": 3703,
											"name": "SWAP1"
										},
										{
											"begin": 3670,
											"end": 3710,
											"name": "SWAP2"
										},
										{
											"begin": 3670,
											"end": 3710,
											"name": "SWAP1"
										},
										{
											"begin": 3670,
											"end": 3710,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3670,
											"end": 3710,
											"name": "AND"
										},
										{
											"begin": 3670,
											"end": 3710,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3670,
											"end": 3710,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 3670,
											"end": 3710,
											"name": "JUMPDEST"
										},
										{
											"begin": 3659,
											"end": 3710,
											"name": "SWAP3"
										},
										{
											"begin": 3659,
											"end": 3710,
											"name": "POP"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "SLOAD"
										},
										{
											"begin": 3725,
											"end": 3728,
											"name": "DUP4"
										},
										{
											"begin": 3725,
											"end": 3741,
											"name": "GT"
										},
										{
											"begin": 3721,
											"end": 3786,
											"name": "ISZERO"
										},
										{
											"begin": 3721,
											"end": 3786,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 3721,
											"end": 3786,
											"name": "JUMPI"
										},
										{
											"begin": 3764,
											"end": 3774,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 3774,
											"name": "SLOAD"
										},
										{
											"begin": 3758,
											"end": 3774,
											"name": "SWAP3"
										},
										{
											"begin": 3758,
											"end": 3774,
											"name": "POP"
										},
										{
											"begin": 3721,
											"end": 3786,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 3721,
											"end": 3786,
											"name": "JUMPDEST"
										},
										{
											"begin": 3814,
											"end": 3829,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 3825,
											"end": 3828,
											"name": "DUP4"
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "DUP6"
										},
										{
											"begin": 3814,
											"end": 3824,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 3814,
											"end": 3824,
											"name": "SWAP1"
										},
										{
											"begin": 3814,
											"end": 3829,
											"name": "SWAP2"
										},
										{
											"begin": 3814,
											"end": 3829,
											"name": "SWAP1"
										},
										{
											"begin": 3814,
											"end": 3829,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3814,
											"end": 3829,
											"name": "AND"
										},
										{
											"begin": 3814,
											"end": 3829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3814,
											"end": 3829,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 3814,
											"end": 3829,
											"name": "JUMPDEST"
										},
										{
											"begin": 3796,
											"end": 3829,
											"name": "SWAP2"
										},
										{
											"begin": 3796,
											"end": 3829,
											"name": "POP"
										},
										{
											"begin": 3863,
											"end": 3895,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 3888,
											"end": 3894,
											"name": "DUP5"
										},
										{
											"begin": 3863,
											"end": 3871,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3882,
											"name": "CALLER"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "AND"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "AND"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "DUP2"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "MSTORE"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "ADD"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "SWAP1"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "DUP2"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "MSTORE"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "ADD"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "KECCAK256"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "SLOAD"
										},
										{
											"begin": 3863,
											"end": 3887,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 3863,
											"end": 3887,
											"name": "SWAP1"
										},
										{
											"begin": 3863,
											"end": 3895,
											"name": "SWAP2"
										},
										{
											"begin": 3863,
											"end": 3895,
											"name": "SWAP1"
										},
										{
											"begin": 3863,
											"end": 3895,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3895,
											"name": "AND"
										},
										{
											"begin": 3863,
											"end": 3895,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3863,
											"end": 3895,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 3863,
											"end": 3895,
											"name": "JUMPDEST"
										},
										{
											"begin": 3840,
											"end": 3848,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "CALLER"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "AND"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "AND"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "DUP2"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "MSTORE"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "ADD"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "SWAP1"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "DUP2"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "MSTORE"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "ADD"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3860,
											"name": "KECCAK256"
										},
										{
											"begin": 3840,
											"end": 3895,
											"name": "DUP2"
										},
										{
											"begin": 3840,
											"end": 3895,
											"name": "SWAP1"
										},
										{
											"begin": 3840,
											"end": 3895,
											"name": "SSTORE"
										},
										{
											"begin": 3840,
											"end": 3895,
											"name": "POP"
										},
										{
											"begin": 3922,
											"end": 3951,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 3940,
											"end": 3950,
											"name": "DUP3"
										},
										{
											"begin": 3922,
											"end": 3930,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3934,
											"name": "DUP9"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "AND"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "AND"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "DUP2"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "MSTORE"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "ADD"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "SWAP1"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "DUP2"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "MSTORE"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "ADD"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "KECCAK256"
										},
										{
											"begin": 3922,
											"end": 3935,
											"name": "SLOAD"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "SWAP1"
										},
										{
											"begin": 3922,
											"end": 3951,
											"name": "SWAP2"
										},
										{
											"begin": 3922,
											"end": 3951,
											"name": "SWAP1"
										},
										{
											"begin": 3922,
											"end": 3951,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3922,
											"end": 3951,
											"name": "AND"
										},
										{
											"begin": 3922,
											"end": 3951,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3922,
											"end": 3951,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 3922,
											"end": 3951,
											"name": "JUMPDEST"
										},
										{
											"begin": 3906,
											"end": 3914,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3918,
											"name": "DUP8"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "AND"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "AND"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "DUP2"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "MSTORE"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "ADD"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "SWAP1"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "DUP2"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "MSTORE"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "ADD"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "KECCAK256"
										},
										{
											"begin": 3906,
											"end": 3951,
											"name": "DUP2"
										},
										{
											"begin": 3906,
											"end": 3951,
											"name": "SWAP1"
										},
										{
											"begin": 3906,
											"end": 3951,
											"name": "SSTORE"
										},
										{
											"begin": 3906,
											"end": 3951,
											"name": "POP"
										},
										{
											"begin": 3972,
											"end": 3973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "DUP4"
										},
										{
											"begin": 3966,
											"end": 3973,
											"name": "GT"
										},
										{
											"begin": 3962,
											"end": 4091,
											"name": "ISZERO"
										},
										{
											"begin": 3962,
											"end": 4091,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 3962,
											"end": 4091,
											"name": "JUMPI"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 4028,
											"end": 4031,
											"name": "DUP4"
										},
										{
											"begin": 4008,
											"end": 4016,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "DUP1"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "SWAP1"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "SLOAD"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "SWAP1"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "EXP"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "SWAP1"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "DIV"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "AND"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "AND"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "AND"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "DUP2"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "MSTORE"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "ADD"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "SWAP1"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "DUP2"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "MSTORE"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "ADD"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "KECCAK256"
										},
										{
											"begin": 4008,
											"end": 4023,
											"name": "SLOAD"
										},
										{
											"begin": 4008,
											"end": 4027,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 4008,
											"end": 4027,
											"name": "SWAP1"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "SWAP2"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "SWAP1"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "AND"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "JUMPDEST"
										},
										{
											"begin": 3990,
											"end": 3998,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4004,
											"name": "DUP1"
										},
										{
											"begin": 3999,
											"end": 4004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4004,
											"name": "SWAP1"
										},
										{
											"begin": 3999,
											"end": 4004,
											"name": "SLOAD"
										},
										{
											"begin": 3999,
											"end": 4004,
											"name": "SWAP1"
										},
										{
											"begin": 3999,
											"end": 4004,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3999,
											"end": 4004,
											"name": "EXP"
										},
										{
											"begin": 3999,
											"end": 4004,
											"name": "SWAP1"
										},
										{
											"begin": 3999,
											"end": 4004,
											"name": "DIV"
										},
										{
											"begin": 3999,
											"end": 4004,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3999,
											"end": 4004,
											"name": "AND"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "AND"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "AND"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "DUP2"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "MSTORE"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "ADD"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "SWAP1"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "DUP2"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "MSTORE"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "ADD"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 4005,
											"name": "KECCAK256"
										},
										{
											"begin": 3990,
											"end": 4032,
											"name": "DUP2"
										},
										{
											"begin": 3990,
											"end": 4032,
											"name": "SWAP1"
										},
										{
											"begin": 3990,
											"end": 4032,
											"name": "SSTORE"
										},
										{
											"begin": 3990,
											"end": 4032,
											"name": "POP"
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "DUP1"
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "SLOAD"
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "EXP"
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "SWAP1"
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "DIV"
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "AND"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "AND"
										},
										{
											"begin": 4056,
											"end": 4066,
											"name": "CALLER"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "AND"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4075,
											"end": 4078,
											"name": "DUP6"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "MLOAD"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "DUP1"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "DUP3"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "DUP2"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "MSTORE"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "ADD"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "SWAP2"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "POP"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "POP"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "MLOAD"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "DUP1"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "SWAP2"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "SUB"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "SWAP1"
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "LOG3"
										},
										{
											"begin": 3962,
											"end": 4091,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 3962,
											"end": 4091,
											"name": "JUMPDEST"
										},
										{
											"begin": 4122,
											"end": 4125,
											"name": "DUP5"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "AND"
										},
										{
											"begin": 4110,
											"end": 4120,
											"name": "CALLER"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "AND"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4127,
											"end": 4137,
											"name": "DUP5"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "MLOAD"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "DUP1"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "DUP3"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "DUP2"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "MSTORE"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "ADD"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "SWAP2"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "POP"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "POP"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "MLOAD"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "DUP1"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "SWAP2"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "SUB"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "SWAP1"
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "LOG3"
										},
										{
											"begin": 3573,
											"end": 4146,
											"name": "POP"
										},
										{
											"begin": 3573,
											"end": 4146,
											"name": "POP"
										},
										{
											"begin": 3573,
											"end": 4146,
											"name": "POP"
										},
										{
											"begin": 3573,
											"end": 4146,
											"name": "POP"
										},
										{
											"begin": 3573,
											"end": 4146,
											"name": "POP"
										},
										{
											"begin": 3573,
											"end": 4146,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 217,
											"end": 428,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 217,
											"end": 428,
											"name": "JUMPDEST"
										},
										{
											"begin": 275,
											"end": 282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 355,
											"end": 364,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 299,
											"end": 300,
											"name": "DUP5"
										},
										{
											"begin": 299,
											"end": 305,
											"name": "EQ"
										},
										{
											"begin": 295,
											"end": 342,
											"name": "ISZERO"
										},
										{
											"begin": 295,
											"end": 342,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 295,
											"end": 342,
											"name": "JUMPI"
										},
										{
											"begin": 329,
											"end": 330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 322,
											"end": 330,
											"name": "SWAP2"
										},
										{
											"begin": 322,
											"end": 330,
											"name": "POP"
										},
										{
											"begin": 322,
											"end": 330,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 322,
											"end": 330,
											"name": "JUMP"
										},
										{
											"begin": 295,
											"end": 342,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 295,
											"end": 342,
											"name": "JUMPDEST"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "DUP3"
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP5"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "MUL"
										},
										{
											"begin": 355,
											"end": 372,
											"name": "SWAP1"
										},
										{
											"begin": 355,
											"end": 372,
											"name": "POP"
										},
										{
											"begin": 399,
											"end": 400,
											"name": "DUP3"
										},
										{
											"begin": 394,
											"end": 395,
											"name": "DUP5"
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP3"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "DUP2"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "ISZERO"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "ISZERO"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "JUMPI"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "INVALID"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "JUMPDEST"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "DIV"
										},
										{
											"begin": 390,
											"end": 400,
											"name": "EQ"
										},
										{
											"begin": 383,
											"end": 401,
											"name": "ISZERO"
										},
										{
											"begin": 383,
											"end": 401,
											"name": "ISZERO"
										},
										{
											"begin": 383,
											"end": 401,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 383,
											"end": 401,
											"name": "JUMPI"
										},
										{
											"begin": 383,
											"end": 401,
											"name": "INVALID"
										},
										{
											"begin": 383,
											"end": 401,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 383,
											"end": 401,
											"name": "JUMPDEST"
										},
										{
											"begin": 419,
											"end": 420,
											"name": "DUP1"
										},
										{
											"begin": 412,
											"end": 420,
											"name": "SWAP2"
										},
										{
											"begin": 412,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 428,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 217,
											"end": 428,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 428,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 428,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 428,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 428,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 428,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 428,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7271,
											"end": 7416,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 7271,
											"end": 7416,
											"name": "JUMPDEST"
										},
										{
											"begin": 7349,
											"end": 7363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7383,
											"end": 7390,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7391,
											"end": 7397,
											"name": "DUP5"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "AND"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "AND"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "DUP2"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "MSTORE"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "ADD"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "SWAP1"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "DUP2"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "MSTORE"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "ADD"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7383,
											"end": 7398,
											"name": "KECCAK256"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7399,
											"end": 7407,
											"name": "DUP4"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "AND"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "AND"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "DUP2"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "MSTORE"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "ADD"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "SWAP1"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "DUP2"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "MSTORE"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "ADD"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "KECCAK256"
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "SLOAD"
										},
										{
											"begin": 7376,
											"end": 7408,
											"name": "SWAP1"
										},
										{
											"begin": 7376,
											"end": 7408,
											"name": "POP"
										},
										{
											"begin": 7271,
											"end": 7416,
											"name": "SWAP3"
										},
										{
											"begin": 7271,
											"end": 7416,
											"name": "SWAP2"
										},
										{
											"begin": 7271,
											"end": 7416,
											"name": "POP"
										},
										{
											"begin": 7271,
											"end": 7416,
											"name": "POP"
										},
										{
											"begin": 7271,
											"end": 7416,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 436,
											"end": 724,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 436,
											"end": 724,
											"name": "JUMPDEST"
										},
										{
											"begin": 494,
											"end": 501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 593,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 609,
											"end": 610,
											"name": "DUP3"
										},
										{
											"begin": 605,
											"end": 606,
											"name": "DUP5"
										},
										{
											"begin": 605,
											"end": 610,
											"name": "DUP2"
										},
										{
											"begin": 605,
											"end": 610,
											"name": "ISZERO"
										},
										{
											"begin": 605,
											"end": 610,
											"name": "ISZERO"
										},
										{
											"begin": 605,
											"end": 610,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 605,
											"end": 610,
											"name": "JUMPI"
										},
										{
											"begin": 605,
											"end": 610,
											"name": "INVALID"
										},
										{
											"begin": 605,
											"end": 610,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 605,
											"end": 610,
											"name": "JUMPDEST"
										},
										{
											"begin": 605,
											"end": 610,
											"name": "DIV"
										},
										{
											"begin": 593,
											"end": 610,
											"name": "SWAP1"
										},
										{
											"begin": 593,
											"end": 610,
											"name": "POP"
										},
										{
											"begin": 715,
											"end": 716,
											"name": "DUP1"
										},
										{
											"begin": 708,
											"end": 716,
											"name": "SWAP2"
										},
										{
											"begin": 708,
											"end": 716,
											"name": "POP"
										},
										{
											"begin": 436,
											"end": 724,
											"name": "POP"
										},
										{
											"begin": 436,
											"end": 724,
											"name": "SWAP3"
										},
										{
											"begin": 436,
											"end": 724,
											"name": "SWAP2"
										},
										{
											"begin": 436,
											"end": 724,
											"name": "POP"
										},
										{
											"begin": 436,
											"end": 724,
											"name": "POP"
										},
										{
											"begin": 436,
											"end": 724,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 732,
											"end": 855,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 732,
											"end": 855,
											"name": "JUMPDEST"
										},
										{
											"begin": 790,
											"end": 797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 822,
											"end": 823,
											"name": "DUP3"
										},
										{
											"begin": 817,
											"end": 818,
											"name": "DUP3"
										},
										{
											"begin": 817,
											"end": 823,
											"name": "GT"
										},
										{
											"begin": 817,
											"end": 823,
											"name": "ISZERO"
										},
										{
											"begin": 810,
											"end": 824,
											"name": "ISZERO"
										},
										{
											"begin": 810,
											"end": 824,
											"name": "ISZERO"
										},
										{
											"begin": 810,
											"end": 824,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 810,
											"end": 824,
											"name": "JUMPI"
										},
										{
											"begin": 810,
											"end": 824,
											"name": "INVALID"
										},
										{
											"begin": 810,
											"end": 824,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 810,
											"end": 824,
											"name": "JUMPDEST"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "DUP2"
										},
										{
											"begin": 842,
											"end": 843,
											"name": "DUP4"
										},
										{
											"begin": 842,
											"end": 847,
											"name": "SUB"
										},
										{
											"begin": 835,
											"end": 847,
											"name": "SWAP1"
										},
										{
											"begin": 835,
											"end": 847,
											"name": "POP"
										},
										{
											"begin": 732,
											"end": 855,
											"name": "SWAP3"
										},
										{
											"begin": 732,
											"end": 855,
											"name": "SWAP2"
										},
										{
											"begin": 732,
											"end": 855,
											"name": "POP"
										},
										{
											"begin": 732,
											"end": 855,
											"name": "POP"
										},
										{
											"begin": 732,
											"end": 855,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 863,
											"end": 1010,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 863,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 921,
											"end": 928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 941,
											"end": 950,
											"name": "DUP1"
										},
										{
											"begin": 957,
											"end": 958,
											"name": "DUP3"
										},
										{
											"begin": 953,
											"end": 954,
											"name": "DUP5"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "ADD"
										},
										{
											"begin": 941,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 941,
											"end": 958,
											"name": "POP"
										},
										{
											"begin": 981,
											"end": 982,
											"name": "DUP4"
										},
										{
											"begin": 976,
											"end": 977,
											"name": "DUP2"
										},
										{
											"begin": 976,
											"end": 982,
											"name": "LT"
										},
										{
											"begin": 976,
											"end": 982,
											"name": "ISZERO"
										},
										{
											"begin": 969,
											"end": 983,
											"name": "ISZERO"
										},
										{
											"begin": 969,
											"end": 983,
											"name": "ISZERO"
										},
										{
											"begin": 969,
											"end": 983,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 969,
											"end": 983,
											"name": "JUMPI"
										},
										{
											"begin": 969,
											"end": 983,
											"name": "INVALID"
										},
										{
											"begin": 969,
											"end": 983,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 969,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 1001,
											"end": 1002,
											"name": "DUP1"
										},
										{
											"begin": 994,
											"end": 1002,
											"name": "SWAP2"
										},
										{
											"begin": 994,
											"end": 1002,
											"name": "POP"
										},
										{
											"begin": 863,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 863,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 863,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 863,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 863,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 863,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"addBlackList(address)": "0ecb93c0",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"decimals()": "313ce567",
							"deprecate(address)": "0753c30c",
							"deprecated()": "0e136b19",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"issue(uint256)": "cc872b66",
							"maximumFee()": "35390714",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"redeem(uint256)": "db006a75",
							"removeBlackList(address)": "e4997dc5",
							"setParams(uint256,uint256)": "c0324c77",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"upgradedAddress()": "26976e3f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\\r\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\\r\"}}},\"userdoc\":{\"methods\":{\"getBlackListStatus(address)\":{\"notice\":\"//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\r\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/Tether.sol\":\"TetherToken\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/Tether.sol\":{\"keccak256\":\"0x6b252bc962a16fa94f52d1b11c13769ee80a7542f4336b3021806a28f2d71c09\",\"urls\":[\"bzzr://1c2978e2cd781eaf07b101b387c36df7b146ee1948bd415e19bbf36344aef4aa\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\r"
							}
						}
					}
				},
				"UpgradedStandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.\r",
								"params": {
									"_owner": "address The address which owns the funds.\r",
									"_spender": "address The address which will spend the funds.\r"
								},
								"return": "A uint specifying the amount of tokens still available for the spender.\r"
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r",
								"params": {
									"_spender": "The address which will spend the funds.\r",
									"_value": "The amount of tokens to be spent.\r"
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint representing the amount owned by the passed address.\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another\r",
								"params": {
									"_from": "address The address which you want to send tokens from\r",
									"_to": "address The address which you want to transfer to\r",
									"_value": "uint the amount of tokens to be transferred\r"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"approveByLegacy(address,address,uint256)": "aee92d33",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferByLegacy(address,address,uint256)": "6e18980a",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromByLegacy(address,address,address,uint256)": "8b477adb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/tokens/Tether.sol": {
				"ast": {
					"absolutePath": "contracts/tokens/Tether.sol",
					"exportedSymbols": {
						"BasicToken": [
							347
						],
						"BlackList": [
							717
						],
						"ERC20": [
							205
						],
						"ERC20Basic": [
							169
						],
						"Ownable": [
							139
						],
						"Pausable": [
							603
						],
						"SafeMath": [
							97
						],
						"StandardToken": [
							546
						],
						"TetherToken": [
							1142
						],
						"UpgradedStandardToken": [
							749
						]
					},
					"id": 1143,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "71:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\r\n@dev Math operations with safety checks that throw on error\r",
							"fullyImplemented": true,
							"id": 97,
							"linearizedBaseContracts": [
								97
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "284:144:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 10,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "299:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "304:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "299:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 16,
												"nodeType": "IfStatement",
												"src": "295:47:0",
												"trueBody": {
													"id": 15,
													"nodeType": "Block",
													"src": "307:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "329:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 9,
															"id": 14,
															"nodeType": "Return",
															"src": "322:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "355:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "355:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 22,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "367:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "371:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "367:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "355:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 24,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "390:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "394:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "390:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "399:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "390:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "383:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "383:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "383:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "419:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 32,
												"nodeType": "Return",
												"src": "412:8:0"
											}
										]
									},
									"id": 34,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "230:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "241:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "229:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "275:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "274:9:0"
									},
									"scope": 97,
									"src": "217:211:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "503:221:0",
										"statements": [
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "593:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "605:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 46,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "609:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "605:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "593:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 49,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "715:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 50,
												"nodeType": "Return",
												"src": "708:8:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "449:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "460:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "448:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "494:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "493:9:0"
									},
									"scope": 97,
									"src": "436:288:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "799:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 62,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "817:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "822:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "817:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "810:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "810:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "810:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "842:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "846:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "842:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 60,
												"id": 70,
												"nodeType": "Return",
												"src": "835:12:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "745:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "756:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "744:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "789:9:0"
									},
									"scope": 97,
									"src": "732:123:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "930:80:0",
										"statements": [
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 96,
														"src": "941:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 81,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 86,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 83,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "953:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 84,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "957:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "953:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "941:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 88,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "976:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "981:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "976:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 87,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "969:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "969:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "969:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 82,
													"src": "1001:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 94,
												"nodeType": "Return",
												"src": "994:8:0"
											}
										]
									},
									"id": 96,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "876:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "887:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "875:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "921:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "920:9:0"
									},
									"scope": 97,
									"src": "863:147:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1143,
							"src": "193:820:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Ownable\r\n@dev The Ownable contract has an owner address, and provides basic authorization control\r\nfunctions, this simplifies the implementation of \"user permissions\".\r",
							"fullyImplemented": true,
							"id": 139,
							"linearizedBaseContracts": [
								139
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 99,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 139,
									"src": "1236:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 98,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1236:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1422:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 102,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1433:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 103,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "1441:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1441:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1433:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1433:18:0"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ownable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1412:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1422:0:0"
									},
									"scope": 139,
									"src": "1396:63:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1575:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 111,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "1594:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1594:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 113,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1608:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1594:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "1586:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "1586:28:0"
											},
											{
												"id": 117,
												"nodeType": "PlaceholderStatement",
												"src": "1625:1:0"
											}
										]
									},
									"id": 119,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1572:2:0"
									},
									"src": "1554:80:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "1870:89:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "1885:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1905:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1897:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1897:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1885:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 136,
												"nodeType": "IfStatement",
												"src": "1881:71:0",
												"trueBody": {
													"id": 135,
													"nodeType": "Block",
													"src": "1909:43:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "1924:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 132,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "1932:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1924:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 134,
															"nodeType": "ExpressionStatement",
															"src": "1924:16:0"
														}
													]
												}
											}
										]
									},
									"id": 138,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 124,
											"modifierName": {
												"argumentTypes": null,
												"id": 123,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "1860:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1860:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1835:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1834:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1870:0:0"
									},
									"scope": 139,
									"src": "1808:151:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "1212:752:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title ERC20Basic\r\n@dev Simpler version of ERC20 interface\r\n@dev see https://github.com/ethereum/EIPs/issues/20\r",
							"fullyImplemented": false,
							"id": 169,
							"linearizedBaseContracts": [
								169
							],
							"name": "ERC20Basic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 141,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 169,
									"src": "2127:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2127:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 146,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2178:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2206:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2206:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2205:6:0"
									},
									"scope": 169,
									"src": "2158:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 153,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2237:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2236:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2275:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2275:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2274:6:0"
									},
									"scope": 169,
									"src": "2218:63:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 160,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2305:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2317:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2317:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2304:24:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2335:0:0"
									},
									"scope": 169,
									"src": "2287:49:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 168,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2357:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2379:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2399:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2399:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2356:54:0"
									},
									"src": "2342:69:0"
								}
							],
							"scope": 1143,
							"src": "2100:314:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 170,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 169,
										"src": "2529:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$169",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 171,
									"nodeType": "InheritanceSpecifier",
									"src": "2529:10:0"
								}
							],
							"contractDependencies": [
								169
							],
							"contractKind": "contract",
							"documentation": "@title ERC20 interface\r\n@dev see https://github.com/ethereum/EIPs/issues/20\r",
							"fullyImplemented": false,
							"id": 205,
							"linearizedBaseContracts": [
								205,
								169
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"id": 180,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2565:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2623:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2623:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2622:6:0"
									},
									"scope": 205,
									"src": "2547:82:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 189,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2657:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2671:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2683:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2683:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2656:38:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2701:0:0"
									},
									"scope": 205,
									"src": "2635:67:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 196,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2725:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2742:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2742:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2724:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2760:0:0"
									},
									"scope": 205,
									"src": "2708:53:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 204,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2782:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2805:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2830:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2781:60:0"
									},
									"src": "2767:75:0"
								}
							],
							"scope": 1143,
							"src": "2511:334:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 206,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "2966:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 207,
									"nodeType": "InheritanceSpecifier",
									"src": "2966:7:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 208,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 169,
										"src": "2975:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$169",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 209,
									"nodeType": "InheritanceSpecifier",
									"src": "2975:10:0"
								}
							],
							"contractDependencies": [
								139,
								169
							],
							"contractKind": "contract",
							"documentation": "@title Basic token\r\n@dev Basic version of StandardToken, with no allowances.\r",
							"fullyImplemented": false,
							"id": 347,
							"linearizedBaseContracts": [
								347,
								169,
								139
							],
							"name": "BasicToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 212,
									"libraryName": {
										"contractScope": null,
										"id": 210,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 97,
										"src": "2999:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$97",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2993:24:0",
									"typeName": {
										"id": 211,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3012:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 216,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "3025:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 215,
										"keyType": {
											"id": 213,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3033:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3025:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 214,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "3044:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 219,
									"name": "basisPointsRate",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "3153:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 217,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3153:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 218,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3183:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 222,
									"name": "maximumFee",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "3191:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 220,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3191:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 221,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3216:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "3331:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3350:29:0",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 227,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1145,
																					"src": "3352:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "data",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3352:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			},
																			"id": 229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3352:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 230,
																				"name": "size",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "3370:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "34",
																				"id": 231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3377:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "3370:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3352:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 234,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3351:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "3342:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3342:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "3342:38:0"
											},
											{
												"id": 238,
												"nodeType": "PlaceholderStatement",
												"src": "3391:1:0"
											}
										]
									},
									"id": 240,
									"name": "onlyPayloadSize",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "size",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3320:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3320:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3319:11:0"
									},
									"src": "3295:105:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "3648:498:0",
										"statements": [
											{
												"assignments": [
													253
												],
												"declarations": [
													{
														"constant": false,
														"id": 253,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "3659:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 252,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3659:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3704:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 256,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "3682:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 254,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "3671:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 34,
																		"src": "3671:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3671:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 258,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3670:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "3670:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3670:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3659:51:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 263,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "3725:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 264,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "3731:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3725:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 271,
												"nodeType": "IfStatement",
												"src": "3721:65:0",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "3743:43:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 266,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "3758:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 267,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "3764:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3758:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "3758:16:0"
														}
													]
												}
											},
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "3796:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 272,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3796:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 276,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "3825:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 274,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "3814:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 72,
														"src": "3814:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3814:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3796:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 279,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3840:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 282,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 280,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "3849:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3849:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3840:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 288,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "3888:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 283,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "3863:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 286,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 284,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "3872:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3872:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3863:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "3863:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3863:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3840:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "3840:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 292,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3906:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 294,
														"indexExpression": {
															"argumentTypes": null,
															"id": 293,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3915:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3906:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 299,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "3940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 295,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "3922:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 297,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 296,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "3931:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3922:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "3922:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3922:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3906:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "3906:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 303,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "3966:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3972:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 325,
												"nodeType": "IfStatement",
												"src": "3962:129:0",
												"trueBody": {
													"id": 324,
													"nodeType": "Block",
													"src": "3975:116:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 306,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "3990:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 307,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3999:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3990:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 313,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "4028:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 309,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "4008:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 311,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 310,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 99,
																				"src": "4017:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4008:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "4008:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4008:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3990:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 316,
															"nodeType": "ExpressionStatement",
															"src": "3990:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 318,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "4056:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4056:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 320,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "4068:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 321,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "4075:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 317,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "4047:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4047:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 323,
															"nodeType": "ExpressionStatement",
															"src": "4047:32:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 327,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "4110:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4110:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 329,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4122:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 330,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "4127:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "4101:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4101:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "4101:37:0"
											}
										]
									},
									"id": 334,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3640:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3644:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3640:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 250,
											"modifierName": {
												"argumentTypes": null,
												"id": 246,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "3624:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3624:23:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3591:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3604:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3604:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3590:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3648:0:0"
									},
									"scope": 347,
									"src": "3573:573:0",
									"stateMutability": "nonpayable",
									"superFunction": 160,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "4438:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 341,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4456:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 343,
													"indexExpression": {
														"argumentTypes": null,
														"id": 342,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "4465:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4456:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 344,
												"nodeType": "Return",
												"src": "4449:23:0"
											}
										]
									},
									"id": 346,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4383:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4382:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4424:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4424:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4423:14:0"
									},
									"scope": 347,
									"src": "4364:116:0",
									"stateMutability": "view",
									"superFunction": 153,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "2943:1542:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 348,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 347,
										"src": "4788:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$347",
											"typeString": "contract BasicToken"
										}
									},
									"id": 349,
									"nodeType": "InheritanceSpecifier",
									"src": "4788:10:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 350,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 205,
										"src": "4800:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$205",
											"typeString": "contract ERC20"
										}
									},
									"id": 351,
									"nodeType": "InheritanceSpecifier",
									"src": "4800:5:0"
								}
							],
							"contractDependencies": [
								139,
								169,
								205,
								347
							],
							"contractKind": "contract",
							"documentation": "@title Standard ERC20 token\r\n\n * @dev Implementation of the basic standard token.\r\n@dev https://github.com/ethereum/EIPs/issues/20\r\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r",
							"fullyImplemented": false,
							"id": 546,
							"linearizedBaseContracts": [
								546,
								205,
								347,
								169,
								139
							],
							"name": "StandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 357,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "4815:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 356,
										"keyType": {
											"id": 352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4824:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4815:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 355,
											"keyType": {
												"id": 353,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4844:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4835:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 354,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4855:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 364,
									"name": "MAX_UINT",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "4885:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 358,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "4885:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
										},
										"id": 363,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
											},
											"id": 361,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "32",
												"id": 359,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4917:1:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "323536",
												"id": 360,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4920:3:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "4917:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 362,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4926:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "4917:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "5311:807:0",
										"statements": [
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"name": "_allowance",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5322:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": null,
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 379,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 381,
														"indexExpression": {
															"argumentTypes": null,
															"id": 380,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5347:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5339:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 384,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 382,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "5354:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5354:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5339:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5322:43:0"
											},
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5536:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 386,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 396,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5581:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 390,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "5559:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 388,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "5548:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 34,
																		"src": "5548:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5548:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 392,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5547:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "5547:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5547:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5536:51:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 397,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "5602:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 398,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "5608:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5602:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 405,
												"nodeType": "IfStatement",
												"src": "5598:65:0",
												"trueBody": {
													"id": 404,
													"nodeType": "Block",
													"src": "5620:43:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 400,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5635:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 401,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "5641:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5635:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 403,
															"nodeType": "ExpressionStatement",
															"src": "5635:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 406,
														"name": "_allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "5677:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 407,
														"name": "MAX_UINT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5690:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5677:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 422,
												"nodeType": "IfStatement",
												"src": "5673:105:0",
												"trueBody": {
													"id": 421,
													"nodeType": "Block",
													"src": "5700:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 409,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5715:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 413,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 410,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "5723:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5715:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 414,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 411,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "5730:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "5730:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5715:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 417,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "5759:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 415,
																			"name": "_allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "5744:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 72,
																		"src": "5744:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5744:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5715:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 420,
															"nodeType": "ExpressionStatement",
															"src": "5715:51:0"
														}
													]
												}
											},
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5788:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 423,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5788:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 427,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "5817:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 425,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5806:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 72,
														"src": "5806:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5806:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5788:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 430,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5832:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 432,
														"indexExpression": {
															"argumentTypes": null,
															"id": 431,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5841:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5832:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 437,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "5870:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 433,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "5850:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 435,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 434,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "5859:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5850:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "5850:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5850:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5832:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "5832:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 441,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5888:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 443,
														"indexExpression": {
															"argumentTypes": null,
															"id": 442,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "5897:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5888:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 448,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "5922:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 444,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "5904:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 446,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 445,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "5913:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5904:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "5904:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5904:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5888:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "5888:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 452,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "5948:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5954:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 473,
												"nodeType": "IfStatement",
												"src": "5944:124:0",
												"trueBody": {
													"id": 472,
													"nodeType": "Block",
													"src": "5957:111:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 455,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "5972:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 457,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 456,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "5981:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5972:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 462,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 387,
																			"src": "6010:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 458,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "5990:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 460,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 459,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 99,
																				"src": "5999:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5990:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "5990:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5990:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5972:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 465,
															"nodeType": "ExpressionStatement",
															"src": "5972:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 467,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "6038:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 468,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "6045:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 469,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "6052:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 466,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "6029:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6029:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "6029:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 475,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "6087:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 476,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "6094:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 477,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "6099:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "6078:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6078:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "6078:32:0"
											}
										]
									},
									"id": 481,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5303:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5307:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "5303:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													}
												}
											],
											"id": 376,
											"modifierName": {
												"argumentTypes": null,
												"id": 372,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "5287:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5287:23:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "5239:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "5254:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "5267:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5238:41:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5311:0:0"
									},
									"scope": 546,
									"src": "5217:901:0",
									"stateMutability": "nonpayable",
									"superFunction": 189,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "6444:494:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6773:56:0",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 496,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 494,
																						"name": "_value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 485,
																						"src": "6776:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 495,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6786:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "6776:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 497,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6775:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 505,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 498,
																								"name": "allowed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 357,
																								"src": "6793:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(address => uint256))"
																								}
																							},
																							"id": 501,
																							"indexExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 499,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1145,
																									"src": "6801:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 500,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "6801:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6793:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 503,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 502,
																							"name": "_spender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 483,
																							"src": "6813:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6793:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 504,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6826:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "6793:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 506,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6792:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "6775:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 508,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6774:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "6765:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6765:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 512,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "6843:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 516,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 513,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "6851:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6851:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6843:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 517,
														"indexExpression": {
															"argumentTypes": null,
															"id": 515,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "6863:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6843:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 518,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "6875:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6843:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "6843:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 522,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "6901:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6901:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 524,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "6913:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 525,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "6923:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 521,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "6892:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6892:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "6892:38:0"
											}
										]
									},
									"id": 529,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6436:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6440:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "6436:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 491,
											"modifierName": {
												"argumentTypes": null,
												"id": 487,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "6420:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6420:23:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "6382:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "6400:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6381:31:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6444:0:0"
									},
									"scope": 546,
									"src": "6365:573:0",
									"stateMutability": "nonpayable",
									"superFunction": 196,
									"visibility": "public"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "7365:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 538,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "7383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 540,
														"indexExpression": {
															"argumentTypes": null,
															"id": 539,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "7391:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7383:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 542,
													"indexExpression": {
														"argumentTypes": null,
														"id": 541,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "7399:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7383:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 537,
												"id": 543,
												"nodeType": "Return",
												"src": "7376:32:0"
											}
										]
									},
									"id": 545,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "7290:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "7306:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7289:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "7349:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7349:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7348:16:0"
									},
									"scope": 546,
									"src": "7271:145:0",
									"stateMutability": "view",
									"superFunction": 180,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "4762:2659:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 547,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "7565:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 548,
									"nodeType": "InheritanceSpecifier",
									"src": "7565:7:0"
								}
							],
							"contractDependencies": [
								139
							],
							"contractKind": "contract",
							"documentation": "@title Pausable\r\n@dev Base contract which allows children to implement an emergency stop mechanism.\r",
							"fullyImplemented": true,
							"id": 603,
							"linearizedBaseContracts": [
								603,
								139
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 550,
									"name": "Pause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7589:2:0"
									},
									"src": "7578:14:0"
								},
								{
									"anonymous": false,
									"id": 552,
									"name": "Unpause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7609:2:0"
									},
									"src": "7596:16:0"
								},
								{
									"constant": false,
									"id": 555,
									"name": "paused",
									"nodeType": "VariableDeclaration",
									"scope": 603,
									"src": "7618:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 553,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "7618:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 554,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7639:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "7778:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7793:7:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 558,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "7794:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "7785:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7785:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "7785:16:0"
											},
											{
												"id": 562,
												"nodeType": "PlaceholderStatement",
												"src": "7808:1:0"
											}
										]
									},
									"id": 564,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7775:2:0"
									},
									"src": "7753:62:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "7939:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 567,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "7954:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "7946:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7946:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "7946:15:0"
											},
											{
												"id": 570,
												"nodeType": "PlaceholderStatement",
												"src": "7968:1:0"
											}
										]
									},
									"id": 572,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7936:2:0"
									},
									"src": "7917:58:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "8107:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 579,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "8114:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8123:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8114:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "8114:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 583,
														"name": "Pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "8134:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "8134:7:0"
											}
										]
									},
									"id": 587,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 575,
											"modifierName": {
												"argumentTypes": null,
												"id": 574,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8076:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8076:9:0"
										},
										{
											"arguments": [],
											"id": 577,
											"modifierName": {
												"argumentTypes": null,
												"id": 576,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 564,
												"src": "8086:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8086:13:0"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8073:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8107:0:0"
									},
									"scope": 603,
									"src": "8059:88:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "8281:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 594,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "8288:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8297:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8288:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "8288:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 598,
														"name": "Unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "8309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8309:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "8309:9:0"
											}
										]
									},
									"id": 602,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 590,
											"modifierName": {
												"argumentTypes": null,
												"id": 589,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8253:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8253:9:0"
										},
										{
											"arguments": [],
											"id": 592,
											"modifierName": {
												"argumentTypes": null,
												"id": 591,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 572,
												"src": "8263:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8263:10:0"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8250:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8281:0:0"
									},
									"scope": 603,
									"src": "8234:90:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "7544:783:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 604,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "8353:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 605,
									"nodeType": "InheritanceSpecifier",
									"src": "8353:7:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 606,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 347,
										"src": "8362:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$347",
											"typeString": "contract BasicToken"
										}
									},
									"id": 607,
									"nodeType": "InheritanceSpecifier",
									"src": "8362:10:0"
								}
							],
							"contractDependencies": [
								139,
								169,
								347
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 717,
							"linearizedBaseContracts": [
								717,
								347,
								169,
								139
							],
							"name": "BlackList",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "8579:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 614,
														"name": "isBlackListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "8597:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 616,
													"indexExpression": {
														"argumentTypes": null,
														"id": 615,
														"name": "_maker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "8611:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8597:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 613,
												"id": 617,
												"nodeType": "Return",
												"src": "8590:28:0"
											}
										]
									},
									"id": 619,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getBlackListStatus",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"name": "_maker",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "8530:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8530:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8529:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "8573:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8573:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8572:6:0"
									},
									"scope": 717,
									"src": "8502:124:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "8690:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 624,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 99,
													"src": "8708:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 623,
												"id": 625,
												"nodeType": "Return",
												"src": "8701:12:0"
											}
										]
									},
									"id": 627,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8651:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "8681:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8680:9:0"
									},
									"scope": 717,
									"src": "8634:87:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"constant": false,
									"id": 631,
									"name": "isBlackListed",
									"nodeType": "VariableDeclaration",
									"scope": 717,
									"src": "8729:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 630,
										"keyType": {
											"id": 628,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8738:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8729:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 629,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "8749:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "8847:86:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 638,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "8858:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 640,
														"indexExpression": {
															"argumentTypes": null,
															"id": 639,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "8872:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8858:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8885:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8858:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "8858:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 645,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "8915:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 644,
														"name": "AddedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "8900:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8900:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "8900:25:0"
											}
										]
									},
									"id": 649,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 636,
											"modifierName": {
												"argumentTypes": null,
												"id": 635,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8837:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8837:9:0"
										}
									],
									"name": "addBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"name": "_evilUser",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8811:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8810:19:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8847:0:0"
									},
									"scope": 717,
									"src": "8788:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "9006:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 656,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "9017:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 658,
														"indexExpression": {
															"argumentTypes": null,
															"id": 657,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "9031:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9017:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9047:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "9017:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "9017:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 663,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "9080:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 662,
														"name": "RemovedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "9063:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9063:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "9063:30:0"
											}
										]
									},
									"id": 667,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 654,
											"modifierName": {
												"argumentTypes": null,
												"id": 653,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8996:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8996:9:0"
										}
									],
									"name": "removeBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"name": "_clearedUser",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "8967:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8966:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9006:0:0"
									},
									"scope": 717,
									"src": "8941:160:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "9180:253:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 675,
																"name": "isBlackListed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "9199:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 677,
															"indexExpression": {
																"argumentTypes": null,
																"id": 676,
																"name": "_blackListedUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "9213:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9199:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "9191:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9191:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "9191:40:0"
											},
											{
												"assignments": [
													681
												],
												"declarations": [
													{
														"constant": false,
														"id": 681,
														"name": "dirtyFunds",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "9242:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 680,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9242:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 683,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9270:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 682,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															346
														],
														"referencedDeclaration": 346,
														"src": "9260:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9260:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9242:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 686,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "9298:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 688,
														"indexExpression": {
															"argumentTypes": null,
															"id": 687,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9307:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9298:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9327:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9298:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "9298:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 692,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "9339:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 693,
														"name": "dirtyFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "9355:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9339:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "9339:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 697,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9396:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 698,
															"name": "dirtyFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "9414:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "DestroyedBlackFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "9376:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9376:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "9376:49:0"
											}
										]
									},
									"id": 702,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 672,
											"modifierName": {
												"argumentTypes": null,
												"id": 671,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "9170:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9170:9:0"
										}
									],
									"name": "destroyBlackFunds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "9137:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9136:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9180:0:0"
									},
									"scope": 717,
									"src": "9109:324:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 708,
									"name": "DestroyedBlackFunds",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"indexed": false,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "9467:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"indexed": false,
												"name": "_balance",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "9493:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9493:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9466:41:0"
									},
									"src": "9441:67:0"
								},
								{
									"anonymous": false,
									"id": 712,
									"name": "AddedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "9537:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9536:15:0"
									},
									"src": "9516:36:0"
								},
								{
									"anonymous": false,
									"id": 716,
									"name": "RemovedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "9583:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9582:15:0"
									},
									"src": "9560:38:0"
								}
							],
							"scope": 1143,
							"src": "8331:1272:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 718,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 546,
										"src": "9641:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$546",
											"typeString": "contract StandardToken"
										}
									},
									"id": 719,
									"nodeType": "InheritanceSpecifier",
									"src": "9641:13:0"
								}
							],
							"contractDependencies": [
								139,
								169,
								205,
								347,
								546
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 749,
							"linearizedBaseContracts": [
								749,
								546,
								205,
								347,
								169,
								139
							],
							"name": "UpgradedStandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"id": 728,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "9810:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "9824:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "9836:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9836:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9809:38:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9854:0:0"
									},
									"scope": 749,
									"src": "9784:71:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 739,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFromByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "9891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "9907:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "9921:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "9938:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9938:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9890:59:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9956:0:0"
									},
									"scope": 749,
									"src": "9861:96:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 748,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approveByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "9988:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "10002:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "10019:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10019:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9987:43:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10037:0:0"
									},
									"scope": 749,
									"src": "9963:75:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "9607:434:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 750,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 603,
										"src": "10069:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$603",
											"typeString": "contract Pausable"
										}
									},
									"id": 751,
									"nodeType": "InheritanceSpecifier",
									"src": "10069:8:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 752,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 546,
										"src": "10079:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$546",
											"typeString": "contract StandardToken"
										}
									},
									"id": 753,
									"nodeType": "InheritanceSpecifier",
									"src": "10079:13:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 754,
										"name": "BlackList",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 717,
										"src": "10094:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BlackList_$717",
											"typeString": "contract BlackList"
										}
									},
									"id": 755,
									"nodeType": "InheritanceSpecifier",
									"src": "10094:9:0"
								}
							],
							"contractDependencies": [
								139,
								169,
								205,
								347,
								546,
								603,
								717
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1142,
							"linearizedBaseContracts": [
								1142,
								717,
								546,
								205,
								347,
								169,
								603,
								139
							],
							"name": "TetherToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 757,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "10113:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string storage ref"
									},
									"typeName": {
										"id": 756,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "10113:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 759,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "10138:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string storage ref"
									},
									"typeName": {
										"id": 758,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "10138:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 761,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "10165:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 760,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10165:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 763,
									"name": "upgradedAddress",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "10192:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 762,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10192:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 765,
									"name": "deprecated",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "10229:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 764,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10229:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "10650:201:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 776,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "10661:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 777,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "10676:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10661:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "10661:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 780,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "10701:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 781,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "10708:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10701:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "10701:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 784,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "10724:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 785,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "10733:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10724:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "10724:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 788,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10751:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 789,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "10762:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10751:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "10751:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 792,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "10782:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 794,
														"indexExpression": {
															"argumentTypes": null,
															"id": 793,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "10791:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10782:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 795,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "10800:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10782:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "10782:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 798,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "10825:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10838:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10825:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "10825:18:0"
											}
										]
									},
									"id": 803,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "TetherToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"name": "_initialSupply",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "10576:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10576:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "10597:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string memory"
												},
												"typeName": {
													"id": 768,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10597:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "10611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string memory"
												},
												"typeName": {
													"id": 770,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10611:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"name": "_decimals",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "10627:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10627:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10575:67:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10650:0:0"
									},
									"scope": 1142,
									"src": "10555:296:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "11001:261:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11020:26:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 813,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "11021:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 816,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 814,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "11035:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11035:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11021:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "11012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11012:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "11012:35:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 820,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "11062:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "11194:61:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 834,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "11231:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 835,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "11236:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 832,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "11216:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 334,
																	"src": "11216:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11216:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 811,
															"id": 837,
															"nodeType": "Return",
															"src": "11209:34:0"
														}
													]
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "11058:197:0",
												"trueBody": {
													"id": 831,
													"nodeType": "Block",
													"src": "11074:114:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 825,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "11152:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11152:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 827,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "11164:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 828,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "11169:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 822,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "11118:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 821,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "11096:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11096:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "11096:55:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11096:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 811,
															"id": 830,
															"nodeType": "Return",
															"src": "11089:87:0"
														}
													]
												}
											}
										]
									},
									"id": 841,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 810,
											"modifierName": {
												"argumentTypes": null,
												"id": 809,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 564,
												"src": "10987:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10987:13:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "10954:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "10967:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10967:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10953:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11001:0:0"
									},
									"scope": 1142,
									"src": "10936:326:0",
									"stateMutability": "nonpayable",
									"superFunction": 334,
									"visibility": "public"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "11431:278:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11450:21:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 853,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "11451:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 855,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 854,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "11465:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11451:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "11442:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11442:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "11442:30:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 859,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "11487:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 879,
													"nodeType": "Block",
													"src": "11630:72:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 874,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "11671:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 875,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "11678:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 876,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "11683:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 872,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "11652:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 481,
																	"src": "11652:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11652:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 851,
															"id": 878,
															"nodeType": "Return",
															"src": "11645:45:0"
														}
													]
												},
												"id": 880,
												"nodeType": "IfStatement",
												"src": "11483:219:0",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "11499:125:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 864,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "11581:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11581:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 866,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "11593:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 867,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "11600:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 868,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "11605:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 861,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "11543:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 860,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "11521:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11521:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFromByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 739,
																	"src": "11521:59:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256) external"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11521:91:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 851,
															"id": 870,
															"nodeType": "Return",
															"src": "11514:98:0"
														}
													]
												}
											}
										]
									},
									"id": 882,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 850,
											"modifierName": {
												"argumentTypes": null,
												"id": 849,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 564,
												"src": "11417:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11417:13:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "11369:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "11384:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "11397:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11397:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11368:41:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11431:0:0"
									},
									"scope": 1142,
									"src": "11347:362:0",
									"stateMutability": "nonpayable",
									"superFunction": 481,
									"visibility": "public"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "11857:181:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 889,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "11872:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "11977:54:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 900,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "12015:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 898,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "11999:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 346,
																	"src": "11999:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11999:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 888,
															"id": 902,
															"nodeType": "Return",
															"src": "11992:27:0"
														}
													]
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "11868:163:0",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "11884:87:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 894,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "11955:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 891,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "11928:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 890,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "11906:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11906:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 346,
																	"src": "11906:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11906:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 888,
															"id": 896,
															"nodeType": "Return",
															"src": "11899:60:0"
														}
													]
												}
											}
										]
									},
									"id": 906,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "11813:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11812:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "11851:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11851:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11850:6:0"
									},
									"scope": 1142,
									"src": "11794:244:0",
									"stateMutability": "view",
									"superFunction": 346,
									"visibility": "public"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "12202:223:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 918,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "12217:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "12353:65:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 932,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "12389:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 933,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "12399:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 930,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "12375:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 529,
																	"src": "12375:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12375:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 917,
															"id": 935,
															"nodeType": "Return",
															"src": "12368:38:0"
														}
													]
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "12213:205:0",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "12229:118:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 923,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "12306:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12306:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 925,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "12318:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 926,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "12328:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 920,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "12273:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 919,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "12251:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12251:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approveByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 748,
																	"src": "12251:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12251:84:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 917,
															"id": 928,
															"nodeType": "Return",
															"src": "12244:91:0"
														}
													]
												}
											}
										]
									},
									"id": 939,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12194:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12198:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "12194:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 916,
											"modifierName": {
												"argumentTypes": null,
												"id": 912,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "12178:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12178:23:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "12140:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "12158:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12158:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12139:31:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12202:0:0"
									},
									"scope": 1142,
									"src": "12123:302:0",
									"stateMutability": "nonpayable",
									"superFunction": 529,
									"visibility": "public"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "12604:199:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 948,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "12619:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 964,
													"nodeType": "Block",
													"src": "12729:67:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 960,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "12767:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 961,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "12775:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 958,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "12751:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 545,
																	"src": "12751:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12751:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 947,
															"id": 963,
															"nodeType": "Return",
															"src": "12744:40:0"
														}
													]
												},
												"id": 965,
												"nodeType": "IfStatement",
												"src": "12615:181:0",
												"trueBody": {
													"id": 957,
													"nodeType": "Block",
													"src": "12631:92:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 953,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "12694:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 954,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "12702:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 950,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "12667:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 949,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "12653:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12653:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$546",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 545,
																	"src": "12653:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12653:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 947,
															"id": 956,
															"nodeType": "Return",
															"src": "12646:65:0"
														}
													]
												}
											}
										]
									},
									"id": 967,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "12529:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "12545:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12528:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "12588:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12588:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12587:16:0"
									},
									"scope": 1142,
									"src": "12510:293:0",
									"stateMutability": "view",
									"superFunction": 545,
									"visibility": "public"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "12931:119:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 974,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "12942:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12955:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12942:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "12942:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 978,
														"name": "upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "12970:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 979,
														"name": "_upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "12988:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12970:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "12970:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 983,
															"name": "_upgradedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "13025:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 982,
														"name": "Deprecate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "13015:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13015:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "13015:27:0"
											}
										]
									},
									"id": 987,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 972,
											"modifierName": {
												"argumentTypes": null,
												"id": 971,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "12921:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12921:9:0"
										}
									],
									"name": "deprecate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"name": "_upgradedAddress",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "12888:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12887:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12931:0:0"
									},
									"scope": 1142,
									"src": "12869:181:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "13170:164:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 992,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "13185:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "13281:46:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1000,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "13303:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 991,
															"id": 1001,
															"nodeType": "Return",
															"src": "13296:19:0"
														}
													]
												},
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "13181:146:0",
												"trueBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "13197:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 994,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "13233:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 993,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "13219:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13219:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$546",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 146,
																	"src": "13219:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13219:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 991,
															"id": 998,
															"nodeType": "Return",
															"src": "13212:51:0"
														}
													]
												}
											}
										]
									},
									"id": 1005,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13136:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "13164:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13164:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13163:6:0"
									},
									"scope": 1142,
									"src": "13116:218:0",
									"stateMutability": "view",
									"superFunction": 146,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "13543:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1013,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "13562:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1014,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "13577:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13562:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1016,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "13586:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13562:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "13554:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13554:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "13554:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1021,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "13618:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1023,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1022,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "13627:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13618:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1024,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "13636:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13618:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1026,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "13645:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1028,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1027,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "13654:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13645:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13618:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1020,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "13610:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13610:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "13610:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1032,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "13674:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1034,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1033,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "13683:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13674:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1035,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "13693:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13674:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "13674:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1038,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13710:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1039,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "13726:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13710:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "13710:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1043,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "13749:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1042,
														"name": "Issue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "13743:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13743:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "13743:13:0"
											}
										]
									},
									"id": 1047,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1010,
											"modifierName": {
												"argumentTypes": null,
												"id": 1009,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "13533:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13533:9:0"
										}
									],
									"name": "issue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "13513:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13513:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13512:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13543:0:0"
									},
									"scope": 1142,
									"src": "13498:266:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "14041:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1055,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "14060:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1056,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "14076:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14060:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "14052:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14052:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "14052:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1061,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "14102:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1063,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1062,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "14111:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14102:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1064,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "14121:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14102:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "14094:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14094:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "14094:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1068,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "14141:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1069,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "14157:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14141:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "14141:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1072,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "14174:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1074,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1073,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "14183:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14174:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1075,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "14193:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14174:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "14174:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1079,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "14217:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1078,
														"name": "Redeem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "14210:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14210:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "14210:14:0"
											}
										]
									},
									"id": 1083,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1052,
											"modifierName": {
												"argumentTypes": null,
												"id": 1051,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "14031:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14031:9:0"
										}
									],
									"name": "redeem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "14011:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14011:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14010:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14041:0:0"
									},
									"scope": 1142,
									"src": "13995:237:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "14313:314:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1093,
																"name": "newBasisPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "14421:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3230",
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14438:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "14421:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "14413:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14413:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "14413:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1099,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "14460:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3530",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14472:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "14460:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1098,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "14452:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14452:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "14452:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1104,
														"name": "basisPointsRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "14488:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1105,
														"name": "newBasisPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "14506:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14488:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "14488:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1108,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "14531:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14558:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1112,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "14562:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14558:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1109,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "14544:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "14544:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14544:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14531:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "14531:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1118,
															"name": "basisPointsRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "14591:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1119,
															"name": "maximumFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "14608:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1117,
														"name": "Params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "14584:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14584:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "14584:35:0"
											}
										]
									},
									"id": 1123,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1090,
											"modifierName": {
												"argumentTypes": null,
												"id": 1089,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "14303:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14303:9:0"
										}
									],
									"name": "setParams",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"name": "newBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "14259:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14259:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"name": "newMaxFee",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "14280:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14280:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14258:37:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14313:0:0"
									},
									"scope": 1142,
									"src": "14240:387:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1127,
									"name": "Issue",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "14688:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14688:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14687:13:0"
									},
									"src": "14676:25:0"
								},
								{
									"anonymous": false,
									"id": 1131,
									"name": "Redeem",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "14762:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14762:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14761:13:0"
									},
									"src": "14749:26:0"
								},
								{
									"anonymous": false,
									"id": 1135,
									"name": "Deprecate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"indexed": false,
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "14842:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14842:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14841:20:0"
									},
									"src": "14826:36:0"
								},
								{
									"anonymous": false,
									"id": 1141,
									"name": "Params",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"name": "feeBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "14925:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14925:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": false,
												"name": "maxFee",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "14946:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14946:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14924:34:0"
									},
									"src": "14912:47:0"
								}
							],
							"scope": 1143,
							"src": "10045:4917:0"
						}
					],
					"src": "71:14891:0"
				},
				"id": 0,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/tokens/Tether.sol",
						"exportedSymbols": {
							"BasicToken": [
								347
							],
							"BlackList": [
								717
							],
							"ERC20": [
								205
							],
							"ERC20Basic": [
								169
							],
							"Ownable": [
								139
							],
							"Pausable": [
								603
							],
							"SafeMath": [
								97
							],
							"StandardToken": [
								546
							],
							"TetherToken": [
								1142
							],
							"UpgradedStandardToken": [
								749
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 1,
							"name": "PragmaDirective",
							"src": "71:24:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "library",
								"documentation": "@title SafeMath\r\n@dev Math operations with safety checks that throw on error\r",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									97
								],
								"name": "SafeMath",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "mul",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 34,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 2,
															"name": "ElementaryTypeName",
															"src": "230:7:0"
														}
													],
													"id": 3,
													"name": "VariableDeclaration",
													"src": "230:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 34,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 4,
															"name": "ElementaryTypeName",
															"src": "241:7:0"
														}
													],
													"id": 5,
													"name": "VariableDeclaration",
													"src": "241:9:0"
												}
											],
											"id": 6,
											"name": "ParameterList",
											"src": "229:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 34,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 7,
															"name": "ElementaryTypeName",
															"src": "275:7:0"
														}
													],
													"id": 8,
													"name": "VariableDeclaration",
													"src": "275:7:0"
												}
											],
											"id": 9,
											"name": "ParameterList",
											"src": "274:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 3,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 10,
																	"name": "Identifier",
																	"src": "299:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 11,
																	"name": "Literal",
																	"src": "304:1:0"
																}
															],
															"id": 12,
															"name": "BinaryOperation",
															"src": "299:6:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 9
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 13,
																			"name": "Literal",
																			"src": "329:1:0"
																		}
																	],
																	"id": 14,
																	"name": "Return",
																	"src": "322:8:0"
																}
															],
															"id": 15,
															"name": "Block",
															"src": "307:35:0"
														}
													],
													"id": 16,
													"name": "IfStatement",
													"src": "295:47:0"
												},
												{
													"attributes": {
														"assignments": [
															18
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 34,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 17,
																	"name": "ElementaryTypeName",
																	"src": "355:7:0"
																}
															],
															"id": 18,
															"name": "VariableDeclaration",
															"src": "355:9:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "*",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 3,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 19,
																	"name": "Identifier",
																	"src": "367:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 5,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 20,
																	"name": "Identifier",
																	"src": "371:1:0"
																}
															],
															"id": 21,
															"name": "BinaryOperation",
															"src": "367:5:0"
														}
													],
													"id": 22,
													"name": "VariableDeclarationStatement",
													"src": "355:17:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1162,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 23,
																	"name": "Identifier",
																	"src": "383:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "/",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 18,
																						"type": "uint256",
																						"value": "c"
																					},
																					"id": 24,
																					"name": "Identifier",
																					"src": "390:1:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 3,
																						"type": "uint256",
																						"value": "a"
																					},
																					"id": 25,
																					"name": "Identifier",
																					"src": "394:1:0"
																				}
																			],
																			"id": 26,
																			"name": "BinaryOperation",
																			"src": "390:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 5,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 27,
																			"name": "Identifier",
																			"src": "399:1:0"
																		}
																	],
																	"id": 28,
																	"name": "BinaryOperation",
																	"src": "390:10:0"
																}
															],
															"id": 29,
															"name": "FunctionCall",
															"src": "383:18:0"
														}
													],
													"id": 30,
													"name": "ExpressionStatement",
													"src": "383:18:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 9
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 18,
																"type": "uint256",
																"value": "c"
															},
															"id": 31,
															"name": "Identifier",
															"src": "419:1:0"
														}
													],
													"id": 32,
													"name": "Return",
													"src": "412:8:0"
												}
											],
											"id": 33,
											"name": "Block",
											"src": "284:144:0"
										}
									],
									"id": 34,
									"name": "FunctionDefinition",
									"src": "217:211:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "div",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 52,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 35,
															"name": "ElementaryTypeName",
															"src": "449:7:0"
														}
													],
													"id": 36,
													"name": "VariableDeclaration",
													"src": "449:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 52,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 37,
															"name": "ElementaryTypeName",
															"src": "460:7:0"
														}
													],
													"id": 38,
													"name": "VariableDeclaration",
													"src": "460:9:0"
												}
											],
											"id": 39,
											"name": "ParameterList",
											"src": "448:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 52,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 40,
															"name": "ElementaryTypeName",
															"src": "494:7:0"
														}
													],
													"id": 41,
													"name": "VariableDeclaration",
													"src": "494:7:0"
												}
											],
											"id": 42,
											"name": "ParameterList",
											"src": "493:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															44
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 52,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 43,
																	"name": "ElementaryTypeName",
																	"src": "593:7:0"
																}
															],
															"id": 44,
															"name": "VariableDeclaration",
															"src": "593:9:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "/",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 36,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 45,
																	"name": "Identifier",
																	"src": "605:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 38,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 46,
																	"name": "Identifier",
																	"src": "609:1:0"
																}
															],
															"id": 47,
															"name": "BinaryOperation",
															"src": "605:5:0"
														}
													],
													"id": 48,
													"name": "VariableDeclarationStatement",
													"src": "593:17:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 42
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 44,
																"type": "uint256",
																"value": "c"
															},
															"id": 49,
															"name": "Identifier",
															"src": "715:1:0"
														}
													],
													"id": 50,
													"name": "Return",
													"src": "708:8:0"
												}
											],
											"id": 51,
											"name": "Block",
											"src": "503:221:0"
										}
									],
									"id": 52,
									"name": "FunctionDefinition",
									"src": "436:288:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "sub",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 72,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 53,
															"name": "ElementaryTypeName",
															"src": "745:7:0"
														}
													],
													"id": 54,
													"name": "VariableDeclaration",
													"src": "745:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 72,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 55,
															"name": "ElementaryTypeName",
															"src": "756:7:0"
														}
													],
													"id": 56,
													"name": "VariableDeclaration",
													"src": "756:9:0"
												}
											],
											"id": 57,
											"name": "ParameterList",
											"src": "744:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 72,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 58,
															"name": "ElementaryTypeName",
															"src": "790:7:0"
														}
													],
													"id": 59,
													"name": "VariableDeclaration",
													"src": "790:7:0"
												}
											],
											"id": 60,
											"name": "ParameterList",
											"src": "789:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1162,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 61,
																	"name": "Identifier",
																	"src": "810:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 56,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 62,
																			"name": "Identifier",
																			"src": "817:1:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 54,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 63,
																			"name": "Identifier",
																			"src": "822:1:0"
																		}
																	],
																	"id": 64,
																	"name": "BinaryOperation",
																	"src": "817:6:0"
																}
															],
															"id": 65,
															"name": "FunctionCall",
															"src": "810:14:0"
														}
													],
													"id": 66,
													"name": "ExpressionStatement",
													"src": "810:14:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 60
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 54,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 67,
																	"name": "Identifier",
																	"src": "842:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 56,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 68,
																	"name": "Identifier",
																	"src": "846:1:0"
																}
															],
															"id": 69,
															"name": "BinaryOperation",
															"src": "842:5:0"
														}
													],
													"id": 70,
													"name": "Return",
													"src": "835:12:0"
												}
											],
											"id": 71,
											"name": "Block",
											"src": "799:56:0"
										}
									],
									"id": 72,
									"name": "FunctionDefinition",
									"src": "732:123:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "add",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 96,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 73,
															"name": "ElementaryTypeName",
															"src": "876:7:0"
														}
													],
													"id": 74,
													"name": "VariableDeclaration",
													"src": "876:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 96,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 75,
															"name": "ElementaryTypeName",
															"src": "887:7:0"
														}
													],
													"id": 76,
													"name": "VariableDeclaration",
													"src": "887:9:0"
												}
											],
											"id": 77,
											"name": "ParameterList",
											"src": "875:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 96,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 78,
															"name": "ElementaryTypeName",
															"src": "921:7:0"
														}
													],
													"id": 79,
													"name": "VariableDeclaration",
													"src": "921:7:0"
												}
											],
											"id": 80,
											"name": "ParameterList",
											"src": "920:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															82
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 96,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 81,
																	"name": "ElementaryTypeName",
																	"src": "941:7:0"
																}
															],
															"id": 82,
															"name": "VariableDeclaration",
															"src": "941:9:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 74,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 83,
																	"name": "Identifier",
																	"src": "953:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 76,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 84,
																	"name": "Identifier",
																	"src": "957:1:0"
																}
															],
															"id": 85,
															"name": "BinaryOperation",
															"src": "953:5:0"
														}
													],
													"id": 86,
													"name": "VariableDeclarationStatement",
													"src": "941:17:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1162,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 87,
																	"name": "Identifier",
																	"src": "969:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 82,
																				"type": "uint256",
																				"value": "c"
																			},
																			"id": 88,
																			"name": "Identifier",
																			"src": "976:1:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 74,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 89,
																			"name": "Identifier",
																			"src": "981:1:0"
																		}
																	],
																	"id": 90,
																	"name": "BinaryOperation",
																	"src": "976:6:0"
																}
															],
															"id": 91,
															"name": "FunctionCall",
															"src": "969:14:0"
														}
													],
													"id": 92,
													"name": "ExpressionStatement",
													"src": "969:14:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 80
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 82,
																"type": "uint256",
																"value": "c"
															},
															"id": 93,
															"name": "Identifier",
															"src": "1001:1:0"
														}
													],
													"id": 94,
													"name": "Return",
													"src": "994:8:0"
												}
											],
											"id": 95,
											"name": "Block",
											"src": "930:80:0"
										}
									],
									"id": 96,
									"name": "FunctionDefinition",
									"src": "863:147:0"
								}
							],
							"id": 97,
							"name": "ContractDefinition",
							"src": "193:820:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": "@title Ownable\r\n@dev The Ownable contract has an owner address, and provides basic authorization control\r\nfunctions, this simplifies the implementation of \"user permissions\".\r",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									139
								],
								"name": "Ownable",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "owner",
										"scope": 139,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 98,
											"name": "ElementaryTypeName",
											"src": "1236:7:0"
										}
									],
									"id": 99,
									"name": "VariableDeclaration",
									"src": "1236:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Ownable",
										"payable": false,
										"scope": 139,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 100,
											"name": "ParameterList",
											"src": "1412:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 101,
											"name": "ParameterList",
											"src": "1422:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 99,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 102,
																	"name": "Identifier",
																	"src": "1433:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1145,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 103,
																			"name": "Identifier",
																			"src": "1441:3:0"
																		}
																	],
																	"id": 104,
																	"name": "MemberAccess",
																	"src": "1441:10:0"
																}
															],
															"id": 105,
															"name": "Assignment",
															"src": "1433:18:0"
														}
													],
													"id": 106,
													"name": "ExpressionStatement",
													"src": "1433:18:0"
												}
											],
											"id": 107,
											"name": "Block",
											"src": "1422:37:0"
										}
									],
									"id": 108,
									"name": "FunctionDefinition",
									"src": "1396:63:0"
								},
								{
									"attributes": {
										"name": "onlyOwner",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 109,
											"name": "ParameterList",
											"src": "1572:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 110,
																	"name": "Identifier",
																	"src": "1586:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1145,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 111,
																					"name": "Identifier",
																					"src": "1594:3:0"
																				}
																			],
																			"id": 112,
																			"name": "MemberAccess",
																			"src": "1594:10:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 113,
																			"name": "Identifier",
																			"src": "1608:5:0"
																		}
																	],
																	"id": 114,
																	"name": "BinaryOperation",
																	"src": "1594:19:0"
																}
															],
															"id": 115,
															"name": "FunctionCall",
															"src": "1586:28:0"
														}
													],
													"id": 116,
													"name": "ExpressionStatement",
													"src": "1586:28:0"
												},
												{
													"id": 117,
													"name": "PlaceholderStatement",
													"src": "1625:1:0"
												}
											],
											"id": 118,
											"name": "Block",
											"src": "1575:59:0"
										}
									],
									"id": 119,
									"name": "ModifierDefinition",
									"src": "1554:80:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferOwnership",
										"payable": false,
										"scope": 139,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newOwner",
														"scope": 138,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 120,
															"name": "ElementaryTypeName",
															"src": "1835:7:0"
														}
													],
													"id": 121,
													"name": "VariableDeclaration",
													"src": "1835:16:0"
												}
											],
											"id": 122,
											"name": "ParameterList",
											"src": "1834:18:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 125,
											"name": "ParameterList",
											"src": "1870:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 123,
													"name": "Identifier",
													"src": "1860:9:0"
												}
											],
											"id": 124,
											"name": "ModifierInvocation",
											"src": "1860:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "!=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 121,
																		"type": "address",
																		"value": "newOwner"
																	},
																	"id": 126,
																	"name": "Identifier",
																	"src": "1885:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "address",
																		"type_conversion": true
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"type": "type(address)",
																				"value": "address"
																			},
																			"id": 127,
																			"name": "ElementaryTypeNameExpression",
																			"src": "1897:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 128,
																			"name": "Literal",
																			"src": "1905:1:0"
																		}
																	],
																	"id": 129,
																	"name": "FunctionCall",
																	"src": "1897:10:0"
																}
															],
															"id": 130,
															"name": "BinaryOperation",
															"src": "1885:22:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 131,
																					"name": "Identifier",
																					"src": "1924:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 121,
																						"type": "address",
																						"value": "newOwner"
																					},
																					"id": 132,
																					"name": "Identifier",
																					"src": "1932:8:0"
																				}
																			],
																			"id": 133,
																			"name": "Assignment",
																			"src": "1924:16:0"
																		}
																	],
																	"id": 134,
																	"name": "ExpressionStatement",
																	"src": "1924:16:0"
																}
															],
															"id": 135,
															"name": "Block",
															"src": "1909:43:0"
														}
													],
													"id": 136,
													"name": "IfStatement",
													"src": "1881:71:0"
												}
											],
											"id": 137,
											"name": "Block",
											"src": "1870:89:0"
										}
									],
									"id": 138,
									"name": "FunctionDefinition",
									"src": "1808:151:0"
								}
							],
							"id": 139,
							"name": "ContractDefinition",
							"src": "1212:752:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": "@title ERC20Basic\r\n@dev Simpler version of ERC20 interface\r\n@dev see https://github.com/ethereum/EIPs/issues/20\r",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									169
								],
								"name": "ERC20Basic",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "_totalSupply",
										"scope": 169,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 140,
											"name": "ElementaryTypeName",
											"src": "2127:4:0"
										}
									],
									"id": 141,
									"name": "VariableDeclaration",
									"src": "2127:24:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "totalSupply",
										"payable": false,
										"scope": 169,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 142,
											"name": "ParameterList",
											"src": "2178:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 146,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 143,
															"name": "ElementaryTypeName",
															"src": "2206:4:0"
														}
													],
													"id": 144,
													"name": "VariableDeclaration",
													"src": "2206:4:0"
												}
											],
											"id": 145,
											"name": "ParameterList",
											"src": "2205:6:0"
										}
									],
									"id": 146,
									"name": "FunctionDefinition",
									"src": "2158:54:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 169,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "who",
														"scope": 153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 147,
															"name": "ElementaryTypeName",
															"src": "2237:7:0"
														}
													],
													"id": 148,
													"name": "VariableDeclaration",
													"src": "2237:11:0"
												}
											],
											"id": 149,
											"name": "ParameterList",
											"src": "2236:13:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 150,
															"name": "ElementaryTypeName",
															"src": "2275:4:0"
														}
													],
													"id": 151,
													"name": "VariableDeclaration",
													"src": "2275:4:0"
												}
											],
											"id": 152,
											"name": "ParameterList",
											"src": "2274:6:0"
										}
									],
									"id": 153,
									"name": "FunctionDefinition",
									"src": "2218:63:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transfer",
										"payable": false,
										"scope": 169,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 160,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 154,
															"name": "ElementaryTypeName",
															"src": "2305:7:0"
														}
													],
													"id": 155,
													"name": "VariableDeclaration",
													"src": "2305:10:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 160,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 156,
															"name": "ElementaryTypeName",
															"src": "2317:4:0"
														}
													],
													"id": 157,
													"name": "VariableDeclaration",
													"src": "2317:10:0"
												}
											],
											"id": 158,
											"name": "ParameterList",
											"src": "2304:24:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 159,
											"name": "ParameterList",
											"src": "2335:0:0"
										}
									],
									"id": 160,
									"name": "FunctionDefinition",
									"src": "2287:49:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Transfer"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "from",
														"scope": 168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 161,
															"name": "ElementaryTypeName",
															"src": "2357:7:0"
														}
													],
													"id": 162,
													"name": "VariableDeclaration",
													"src": "2357:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "to",
														"scope": 168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 163,
															"name": "ElementaryTypeName",
															"src": "2379:7:0"
														}
													],
													"id": 164,
													"name": "VariableDeclaration",
													"src": "2379:18:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "value",
														"scope": 168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 165,
															"name": "ElementaryTypeName",
															"src": "2399:4:0"
														}
													],
													"id": 166,
													"name": "VariableDeclaration",
													"src": "2399:10:0"
												}
											],
											"id": 167,
											"name": "ParameterList",
											"src": "2356:54:0"
										}
									],
									"id": 168,
									"name": "EventDefinition",
									"src": "2342:69:0"
								}
							],
							"id": 169,
							"name": "ContractDefinition",
							"src": "2100:314:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									169
								],
								"contractKind": "contract",
								"documentation": "@title ERC20 interface\r\n@dev see https://github.com/ethereum/EIPs/issues/20\r",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									205,
									169
								],
								"name": "ERC20",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20Basic",
												"referencedDeclaration": 169,
												"type": "contract ERC20Basic"
											},
											"id": 170,
											"name": "UserDefinedTypeName",
											"src": "2529:10:0"
										}
									],
									"id": 171,
									"name": "InheritanceSpecifier",
									"src": "2529:10:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 205,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "owner",
														"scope": 180,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 172,
															"name": "ElementaryTypeName",
															"src": "2566:7:0"
														}
													],
													"id": 173,
													"name": "VariableDeclaration",
													"src": "2566:13:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 180,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 174,
															"name": "ElementaryTypeName",
															"src": "2581:7:0"
														}
													],
													"id": 175,
													"name": "VariableDeclaration",
													"src": "2581:15:0"
												}
											],
											"id": 176,
											"name": "ParameterList",
											"src": "2565:32:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 180,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 177,
															"name": "ElementaryTypeName",
															"src": "2623:4:0"
														}
													],
													"id": 178,
													"name": "VariableDeclaration",
													"src": "2623:4:0"
												}
											],
											"id": 179,
											"name": "ParameterList",
											"src": "2622:6:0"
										}
									],
									"id": 180,
									"name": "FunctionDefinition",
									"src": "2547:82:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferFrom",
										"payable": false,
										"scope": 205,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 189,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 181,
															"name": "ElementaryTypeName",
															"src": "2657:7:0"
														}
													],
													"id": 182,
													"name": "VariableDeclaration",
													"src": "2657:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 189,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 183,
															"name": "ElementaryTypeName",
															"src": "2671:7:0"
														}
													],
													"id": 184,
													"name": "VariableDeclaration",
													"src": "2671:10:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 189,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 185,
															"name": "ElementaryTypeName",
															"src": "2683:4:0"
														}
													],
													"id": 186,
													"name": "VariableDeclaration",
													"src": "2683:10:0"
												}
											],
											"id": 187,
											"name": "ParameterList",
											"src": "2656:38:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 188,
											"name": "ParameterList",
											"src": "2701:0:0"
										}
									],
									"id": 189,
									"name": "FunctionDefinition",
									"src": "2635:67:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "approve",
										"payable": false,
										"scope": 205,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 196,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 190,
															"name": "ElementaryTypeName",
															"src": "2725:7:0"
														}
													],
													"id": 191,
													"name": "VariableDeclaration",
													"src": "2725:15:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 196,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 192,
															"name": "ElementaryTypeName",
															"src": "2742:4:0"
														}
													],
													"id": 193,
													"name": "VariableDeclaration",
													"src": "2742:10:0"
												}
											],
											"id": 194,
											"name": "ParameterList",
											"src": "2724:29:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 195,
											"name": "ParameterList",
											"src": "2760:0:0"
										}
									],
									"id": 196,
									"name": "FunctionDefinition",
									"src": "2708:53:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Approval"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "owner",
														"scope": 204,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 197,
															"name": "ElementaryTypeName",
															"src": "2782:7:0"
														}
													],
													"id": 198,
													"name": "VariableDeclaration",
													"src": "2782:21:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "spender",
														"scope": 204,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 199,
															"name": "ElementaryTypeName",
															"src": "2805:7:0"
														}
													],
													"id": 200,
													"name": "VariableDeclaration",
													"src": "2805:23:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "value",
														"scope": 204,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 201,
															"name": "ElementaryTypeName",
															"src": "2830:4:0"
														}
													],
													"id": 202,
													"name": "VariableDeclaration",
													"src": "2830:10:0"
												}
											],
											"id": 203,
											"name": "ParameterList",
											"src": "2781:60:0"
										}
									],
									"id": 204,
									"name": "EventDefinition",
									"src": "2767:75:0"
								}
							],
							"id": 205,
							"name": "ContractDefinition",
							"src": "2511:334:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									169
								],
								"contractKind": "contract",
								"documentation": "@title Basic token\r\n@dev Basic version of StandardToken, with no allowances.\r",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									347,
									169,
									139
								],
								"name": "BasicToken",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 139,
												"type": "contract Ownable"
											},
											"id": 206,
											"name": "UserDefinedTypeName",
											"src": "2966:7:0"
										}
									],
									"id": 207,
									"name": "InheritanceSpecifier",
									"src": "2966:7:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20Basic",
												"referencedDeclaration": 169,
												"type": "contract ERC20Basic"
											},
											"id": 208,
											"name": "UserDefinedTypeName",
											"src": "2975:10:0"
										}
									],
									"id": 209,
									"name": "InheritanceSpecifier",
									"src": "2975:10:0"
								},
								{
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "SafeMath",
												"referencedDeclaration": 97,
												"type": "library SafeMath"
											},
											"id": 210,
											"name": "UserDefinedTypeName",
											"src": "2999:8:0"
										},
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 211,
											"name": "ElementaryTypeName",
											"src": "3012:4:0"
										}
									],
									"id": 212,
									"name": "UsingForDirective",
									"src": "2993:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "balances",
										"scope": 347,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => uint256)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => uint256)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 213,
													"name": "ElementaryTypeName",
													"src": "3033:7:0"
												},
												{
													"attributes": {
														"name": "uint",
														"type": "uint256"
													},
													"id": 214,
													"name": "ElementaryTypeName",
													"src": "3044:4:0"
												}
											],
											"id": 215,
											"name": "Mapping",
											"src": "3025:24:0"
										}
									],
									"id": 216,
									"name": "VariableDeclaration",
									"src": "3025:40:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "basisPointsRate",
										"scope": 347,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 217,
											"name": "ElementaryTypeName",
											"src": "3153:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 218,
											"name": "Literal",
											"src": "3183:1:0"
										}
									],
									"id": 219,
									"name": "VariableDeclaration",
									"src": "3153:31:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "maximumFee",
										"scope": 347,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 220,
											"name": "ElementaryTypeName",
											"src": "3191:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 221,
											"name": "Literal",
											"src": "3216:1:0"
										}
									],
									"id": 222,
									"name": "VariableDeclaration",
									"src": "3191:26:0"
								},
								{
									"attributes": {
										"name": "onlyPayloadSize",
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "size",
														"scope": 240,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 223,
															"name": "ElementaryTypeName",
															"src": "3320:4:0"
														}
													],
													"id": 224,
													"name": "VariableDeclaration",
													"src": "3320:9:0"
												}
											],
											"id": 225,
											"name": "ParameterList",
											"src": "3319:11:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 226,
																	"name": "Identifier",
																	"src": "3342:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "<",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "length",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "data",
																										"referencedDeclaration": null,
																										"type": "bytes calldata"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1145,
																												"type": "msg",
																												"value": "msg"
																											},
																											"id": 227,
																											"name": "Identifier",
																											"src": "3352:3:0"
																										}
																									],
																									"id": 228,
																									"name": "MemberAccess",
																									"src": "3352:8:0"
																								}
																							],
																							"id": 229,
																							"name": "MemberAccess",
																							"src": "3352:15:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"operator": "+",
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 224,
																										"type": "uint256",
																										"value": "size"
																									},
																									"id": 230,
																									"name": "Identifier",
																									"src": "3370:4:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"hexvalue": "34",
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"subdenomination": null,
																										"token": "number",
																										"type": "int_const 4",
																										"value": "4"
																									},
																									"id": 231,
																									"name": "Literal",
																									"src": "3377:1:0"
																								}
																							],
																							"id": 232,
																							"name": "BinaryOperation",
																							"src": "3370:8:0"
																						}
																					],
																					"id": 233,
																					"name": "BinaryOperation",
																					"src": "3352:26:0"
																				}
																			],
																			"id": 234,
																			"name": "TupleExpression",
																			"src": "3351:28:0"
																		}
																	],
																	"id": 235,
																	"name": "UnaryOperation",
																	"src": "3350:29:0"
																}
															],
															"id": 236,
															"name": "FunctionCall",
															"src": "3342:38:0"
														}
													],
													"id": 237,
													"name": "ExpressionStatement",
													"src": "3342:38:0"
												},
												{
													"id": 238,
													"name": "PlaceholderStatement",
													"src": "3391:1:0"
												}
											],
											"id": 239,
											"name": "Block",
											"src": "3331:69:0"
										}
									],
									"id": 240,
									"name": "ModifierDefinition",
									"src": "3295:105:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transfer",
										"payable": false,
										"scope": 347,
										"stateMutability": "nonpayable",
										"superFunction": 160,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 334,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 241,
															"name": "ElementaryTypeName",
															"src": "3591:7:0"
														}
													],
													"id": 242,
													"name": "VariableDeclaration",
													"src": "3591:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 334,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 243,
															"name": "ElementaryTypeName",
															"src": "3604:4:0"
														}
													],
													"id": 244,
													"name": "VariableDeclaration",
													"src": "3604:11:0"
												}
											],
											"id": 245,
											"name": "ParameterList",
											"src": "3590:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 251,
											"name": "ParameterList",
											"src": "3648:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 246,
													"name": "Identifier",
													"src": "3624:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 247,
															"name": "Literal",
															"src": "3640:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 248,
															"name": "Literal",
															"src": "3644:2:0"
														}
													],
													"id": 249,
													"name": "BinaryOperation",
													"src": "3640:6:0"
												}
											],
											"id": 250,
											"name": "ModifierInvocation",
											"src": "3624:23:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															253
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fee",
																"scope": 334,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 252,
																	"name": "ElementaryTypeName",
																	"src": "3659:4:0"
																}
															],
															"id": 253,
															"name": "VariableDeclaration",
															"src": "3659:8:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "div",
																		"referencedDeclaration": 52,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "mul",
																								"referencedDeclaration": 34,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 244,
																										"type": "uint256",
																										"value": "_value"
																									},
																									"id": 254,
																									"name": "Identifier",
																									"src": "3671:6:0"
																								}
																							],
																							"id": 255,
																							"name": "MemberAccess",
																							"src": "3671:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 219,
																								"type": "uint256",
																								"value": "basisPointsRate"
																							},
																							"id": 256,
																							"name": "Identifier",
																							"src": "3682:15:0"
																						}
																					],
																					"id": 257,
																					"name": "FunctionCall",
																					"src": "3671:27:0"
																				}
																			],
																			"id": 258,
																			"name": "TupleExpression",
																			"src": "3670:29:0"
																		}
																	],
																	"id": 259,
																	"name": "MemberAccess",
																	"src": "3670:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "3130303030",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 10000",
																		"value": "10000"
																	},
																	"id": 260,
																	"name": "Literal",
																	"src": "3704:5:0"
																}
															],
															"id": 261,
															"name": "FunctionCall",
															"src": "3670:40:0"
														}
													],
													"id": 262,
													"name": "VariableDeclarationStatement",
													"src": "3659:51:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 253,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 263,
																	"name": "Identifier",
																	"src": "3725:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 264,
																	"name": "Identifier",
																	"src": "3731:10:0"
																}
															],
															"id": 265,
															"name": "BinaryOperation",
															"src": "3725:16:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 253,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 266,
																					"name": "Identifier",
																					"src": "3758:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 222,
																						"type": "uint256",
																						"value": "maximumFee"
																					},
																					"id": 267,
																					"name": "Identifier",
																					"src": "3764:10:0"
																				}
																			],
																			"id": 268,
																			"name": "Assignment",
																			"src": "3758:16:0"
																		}
																	],
																	"id": 269,
																	"name": "ExpressionStatement",
																	"src": "3758:16:0"
																}
															],
															"id": 270,
															"name": "Block",
															"src": "3743:43:0"
														}
													],
													"id": 271,
													"name": "IfStatement",
													"src": "3721:65:0"
												},
												{
													"attributes": {
														"assignments": [
															273
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "sendAmount",
																"scope": 334,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 272,
																	"name": "ElementaryTypeName",
																	"src": "3796:4:0"
																}
															],
															"id": 273,
															"name": "VariableDeclaration",
															"src": "3796:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sub",
																		"referencedDeclaration": 72,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 244,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 274,
																			"name": "Identifier",
																			"src": "3814:6:0"
																		}
																	],
																	"id": 275,
																	"name": "MemberAccess",
																	"src": "3814:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 253,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 276,
																	"name": "Identifier",
																	"src": "3825:3:0"
																}
															],
															"id": 277,
															"name": "FunctionCall",
															"src": "3814:15:0"
														}
													],
													"id": 278,
													"name": "VariableDeclarationStatement",
													"src": "3796:33:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 279,
																			"name": "Identifier",
																			"src": "3840:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1145,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 280,
																					"name": "Identifier",
																					"src": "3849:3:0"
																				}
																			],
																			"id": 281,
																			"name": "MemberAccess",
																			"src": "3849:10:0"
																		}
																	],
																	"id": 282,
																	"name": "IndexAccess",
																	"src": "3840:20:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 72,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 283,
																							"name": "Identifier",
																							"src": "3863:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1145,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 284,
																									"name": "Identifier",
																									"src": "3872:3:0"
																								}
																							],
																							"id": 285,
																							"name": "MemberAccess",
																							"src": "3872:10:0"
																						}
																					],
																					"id": 286,
																					"name": "IndexAccess",
																					"src": "3863:20:0"
																				}
																			],
																			"id": 287,
																			"name": "MemberAccess",
																			"src": "3863:24:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 244,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 288,
																			"name": "Identifier",
																			"src": "3888:6:0"
																		}
																	],
																	"id": 289,
																	"name": "FunctionCall",
																	"src": "3863:32:0"
																}
															],
															"id": 290,
															"name": "Assignment",
															"src": "3840:55:0"
														}
													],
													"id": 291,
													"name": "ExpressionStatement",
													"src": "3840:55:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 292,
																			"name": "Identifier",
																			"src": "3906:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 242,
																				"type": "address",
																				"value": "_to"
																			},
																			"id": 293,
																			"name": "Identifier",
																			"src": "3915:3:0"
																		}
																	],
																	"id": 294,
																	"name": "IndexAccess",
																	"src": "3906:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 96,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 295,
																							"name": "Identifier",
																							"src": "3922:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 242,
																								"type": "address",
																								"value": "_to"
																							},
																							"id": 296,
																							"name": "Identifier",
																							"src": "3931:3:0"
																						}
																					],
																					"id": 297,
																					"name": "IndexAccess",
																					"src": "3922:13:0"
																				}
																			],
																			"id": 298,
																			"name": "MemberAccess",
																			"src": "3922:17:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 273,
																				"type": "uint256",
																				"value": "sendAmount"
																			},
																			"id": 299,
																			"name": "Identifier",
																			"src": "3940:10:0"
																		}
																	],
																	"id": 300,
																	"name": "FunctionCall",
																	"src": "3922:29:0"
																}
															],
															"id": 301,
															"name": "Assignment",
															"src": "3906:45:0"
														}
													],
													"id": 302,
													"name": "ExpressionStatement",
													"src": "3906:45:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 253,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 303,
																	"name": "Identifier",
																	"src": "3966:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 304,
																	"name": "Literal",
																	"src": "3972:1:0"
																}
															],
															"id": 305,
															"name": "BinaryOperation",
															"src": "3966:7:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 306,
																							"name": "Identifier",
																							"src": "3990:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 99,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 307,
																							"name": "Identifier",
																							"src": "3999:5:0"
																						}
																					],
																					"id": 308,
																					"name": "IndexAccess",
																					"src": "3990:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "add",
																								"referencedDeclaration": 96,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 216,
																												"type": "mapping(address => uint256)",
																												"value": "balances"
																											},
																											"id": 309,
																											"name": "Identifier",
																											"src": "4008:8:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 99,
																												"type": "address",
																												"value": "owner"
																											},
																											"id": 310,
																											"name": "Identifier",
																											"src": "4017:5:0"
																										}
																									],
																									"id": 311,
																									"name": "IndexAccess",
																									"src": "4008:15:0"
																								}
																							],
																							"id": 312,
																							"name": "MemberAccess",
																							"src": "4008:19:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 253,
																								"type": "uint256",
																								"value": "fee"
																							},
																							"id": 313,
																							"name": "Identifier",
																							"src": "4028:3:0"
																						}
																					],
																					"id": 314,
																					"name": "FunctionCall",
																					"src": "4008:24:0"
																				}
																			],
																			"id": 315,
																			"name": "Assignment",
																			"src": "3990:42:0"
																		}
																	],
																	"id": 316,
																	"name": "ExpressionStatement",
																	"src": "3990:42:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 168,
																						"type": "function (address,address,uint256)",
																						"value": "Transfer"
																					},
																					"id": 317,
																					"name": "Identifier",
																					"src": "4047:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1145,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 318,
																							"name": "Identifier",
																							"src": "4056:3:0"
																						}
																					],
																					"id": 319,
																					"name": "MemberAccess",
																					"src": "4056:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 320,
																					"name": "Identifier",
																					"src": "4068:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 253,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 321,
																					"name": "Identifier",
																					"src": "4075:3:0"
																				}
																			],
																			"id": 322,
																			"name": "FunctionCall",
																			"src": "4047:32:0"
																		}
																	],
																	"id": 323,
																	"name": "ExpressionStatement",
																	"src": "4047:32:0"
																}
															],
															"id": 324,
															"name": "Block",
															"src": "3975:116:0"
														}
													],
													"id": 325,
													"name": "IfStatement",
													"src": "3962:129:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 168,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 326,
																	"name": "Identifier",
																	"src": "4101:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1145,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 327,
																			"name": "Identifier",
																			"src": "4110:3:0"
																		}
																	],
																	"id": 328,
																	"name": "MemberAccess",
																	"src": "4110:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 242,
																		"type": "address",
																		"value": "_to"
																	},
																	"id": 329,
																	"name": "Identifier",
																	"src": "4122:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 273,
																		"type": "uint256",
																		"value": "sendAmount"
																	},
																	"id": 330,
																	"name": "Identifier",
																	"src": "4127:10:0"
																}
															],
															"id": 331,
															"name": "FunctionCall",
															"src": "4101:37:0"
														}
													],
													"id": 332,
													"name": "ExpressionStatement",
													"src": "4101:37:0"
												}
											],
											"id": 333,
											"name": "Block",
											"src": "3648:498:0"
										}
									],
									"id": 334,
									"name": "FunctionDefinition",
									"src": "3573:573:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 347,
										"stateMutability": "view",
										"superFunction": 153,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 346,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 335,
															"name": "ElementaryTypeName",
															"src": "4383:7:0"
														}
													],
													"id": 336,
													"name": "VariableDeclaration",
													"src": "4383:14:0"
												}
											],
											"id": 337,
											"name": "ParameterList",
											"src": "4382:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "balance",
														"scope": 346,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 338,
															"name": "ElementaryTypeName",
															"src": "4424:4:0"
														}
													],
													"id": 339,
													"name": "VariableDeclaration",
													"src": "4424:12:0"
												}
											],
											"id": 340,
											"name": "ParameterList",
											"src": "4423:14:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 340
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 216,
																		"type": "mapping(address => uint256)",
																		"value": "balances"
																	},
																	"id": 341,
																	"name": "Identifier",
																	"src": "4456:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 336,
																		"type": "address",
																		"value": "_owner"
																	},
																	"id": 342,
																	"name": "Identifier",
																	"src": "4465:6:0"
																}
															],
															"id": 343,
															"name": "IndexAccess",
															"src": "4456:16:0"
														}
													],
													"id": 344,
													"name": "Return",
													"src": "4449:23:0"
												}
											],
											"id": 345,
											"name": "Block",
											"src": "4438:42:0"
										}
									],
									"id": 346,
									"name": "FunctionDefinition",
									"src": "4364:116:0"
								}
							],
							"id": 347,
							"name": "ContractDefinition",
							"src": "2943:1542:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									169,
									205,
									347
								],
								"contractKind": "contract",
								"documentation": "@title Standard ERC20 token\r\n\n * @dev Implementation of the basic standard token.\r\n@dev https://github.com/ethereum/EIPs/issues/20\r\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									546,
									205,
									347,
									169,
									139
								],
								"name": "StandardToken",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BasicToken",
												"referencedDeclaration": 347,
												"type": "contract BasicToken"
											},
											"id": 348,
											"name": "UserDefinedTypeName",
											"src": "4788:10:0"
										}
									],
									"id": 349,
									"name": "InheritanceSpecifier",
									"src": "4788:10:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20",
												"referencedDeclaration": 205,
												"type": "contract ERC20"
											},
											"id": 350,
											"name": "UserDefinedTypeName",
											"src": "4800:5:0"
										}
									],
									"id": 351,
									"name": "InheritanceSpecifier",
									"src": "4800:5:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "allowed",
										"scope": 546,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => mapping(address => uint256))",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => mapping(address => uint256))"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 352,
													"name": "ElementaryTypeName",
													"src": "4824:7:0"
												},
												{
													"attributes": {
														"type": "mapping(address => uint256)"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 353,
															"name": "ElementaryTypeName",
															"src": "4844:7:0"
														},
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 354,
															"name": "ElementaryTypeName",
															"src": "4855:4:0"
														}
													],
													"id": 355,
													"name": "Mapping",
													"src": "4835:25:0"
												}
											],
											"id": 356,
											"name": "Mapping",
											"src": "4815:46:0"
										}
									],
									"id": 357,
									"name": "VariableDeclaration",
									"src": "4815:61:0"
								},
								{
									"attributes": {
										"constant": true,
										"name": "MAX_UINT",
										"scope": 546,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 358,
											"name": "ElementaryTypeName",
											"src": "4885:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
													"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
												},
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"operator": "-",
												"type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
															"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "**",
														"type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 359,
															"name": "Literal",
															"src": "4917:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "323536",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 256",
																"value": "256"
															},
															"id": 360,
															"name": "Literal",
															"src": "4920:3:0"
														}
													],
													"id": 361,
													"name": "BinaryOperation",
													"src": "4917:6:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"hexvalue": "31",
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"subdenomination": null,
														"token": "number",
														"type": "int_const 1",
														"value": "1"
													},
													"id": 362,
													"name": "Literal",
													"src": "4926:1:0"
												}
											],
											"id": 363,
											"name": "BinaryOperation",
											"src": "4917:10:0"
										}
									],
									"id": 364,
									"name": "VariableDeclaration",
									"src": "4885:42:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferFrom",
										"payable": false,
										"scope": 546,
										"stateMutability": "nonpayable",
										"superFunction": 189,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_from",
														"scope": 481,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 365,
															"name": "ElementaryTypeName",
															"src": "5239:7:0"
														}
													],
													"id": 366,
													"name": "VariableDeclaration",
													"src": "5239:13:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 481,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 367,
															"name": "ElementaryTypeName",
															"src": "5254:7:0"
														}
													],
													"id": 368,
													"name": "VariableDeclaration",
													"src": "5254:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 481,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 369,
															"name": "ElementaryTypeName",
															"src": "5267:4:0"
														}
													],
													"id": 370,
													"name": "VariableDeclaration",
													"src": "5267:11:0"
												}
											],
											"id": 371,
											"name": "ParameterList",
											"src": "5238:41:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 377,
											"name": "ParameterList",
											"src": "5311:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 372,
													"name": "Identifier",
													"src": "5287:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_96_by_1",
															"typeString": "int_const 96"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 96"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "33",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 3",
																"value": "3"
															},
															"id": 373,
															"name": "Literal",
															"src": "5303:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 374,
															"name": "Literal",
															"src": "5307:2:0"
														}
													],
													"id": 375,
													"name": "BinaryOperation",
													"src": "5303:6:0"
												}
											],
											"id": 376,
											"name": "ModifierInvocation",
											"src": "5287:23:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															378
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "_allowance",
																"scope": 481,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"typeName": null,
																"value": null,
																"visibility": "internal"
															},
															"children": [],
															"id": 378,
															"name": "VariableDeclaration",
															"src": "5322:14:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "mapping(address => uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 357,
																				"type": "mapping(address => mapping(address => uint256))",
																				"value": "allowed"
																			},
																			"id": 379,
																			"name": "Identifier",
																			"src": "5339:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 366,
																				"type": "address",
																				"value": "_from"
																			},
																			"id": 380,
																			"name": "Identifier",
																			"src": "5347:5:0"
																		}
																	],
																	"id": 381,
																	"name": "IndexAccess",
																	"src": "5339:14:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1145,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 382,
																			"name": "Identifier",
																			"src": "5354:3:0"
																		}
																	],
																	"id": 383,
																	"name": "MemberAccess",
																	"src": "5354:10:0"
																}
															],
															"id": 384,
															"name": "IndexAccess",
															"src": "5339:26:0"
														}
													],
													"id": 385,
													"name": "VariableDeclarationStatement",
													"src": "5322:43:0"
												},
												{
													"attributes": {
														"assignments": [
															387
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fee",
																"scope": 481,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 386,
																	"name": "ElementaryTypeName",
																	"src": "5536:4:0"
																}
															],
															"id": 387,
															"name": "VariableDeclaration",
															"src": "5536:8:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "div",
																		"referencedDeclaration": 52,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "mul",
																								"referencedDeclaration": 34,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 370,
																										"type": "uint256",
																										"value": "_value"
																									},
																									"id": 388,
																									"name": "Identifier",
																									"src": "5548:6:0"
																								}
																							],
																							"id": 389,
																							"name": "MemberAccess",
																							"src": "5548:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 219,
																								"type": "uint256",
																								"value": "basisPointsRate"
																							},
																							"id": 390,
																							"name": "Identifier",
																							"src": "5559:15:0"
																						}
																					],
																					"id": 391,
																					"name": "FunctionCall",
																					"src": "5548:27:0"
																				}
																			],
																			"id": 392,
																			"name": "TupleExpression",
																			"src": "5547:29:0"
																		}
																	],
																	"id": 393,
																	"name": "MemberAccess",
																	"src": "5547:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "3130303030",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 10000",
																		"value": "10000"
																	},
																	"id": 394,
																	"name": "Literal",
																	"src": "5581:5:0"
																}
															],
															"id": 395,
															"name": "FunctionCall",
															"src": "5547:40:0"
														}
													],
													"id": 396,
													"name": "VariableDeclarationStatement",
													"src": "5536:51:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 387,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 397,
																	"name": "Identifier",
																	"src": "5602:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 398,
																	"name": "Identifier",
																	"src": "5608:10:0"
																}
															],
															"id": 399,
															"name": "BinaryOperation",
															"src": "5602:16:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 387,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 400,
																					"name": "Identifier",
																					"src": "5635:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 222,
																						"type": "uint256",
																						"value": "maximumFee"
																					},
																					"id": 401,
																					"name": "Identifier",
																					"src": "5641:10:0"
																				}
																			],
																			"id": 402,
																			"name": "Assignment",
																			"src": "5635:16:0"
																		}
																	],
																	"id": 403,
																	"name": "ExpressionStatement",
																	"src": "5635:16:0"
																}
															],
															"id": 404,
															"name": "Block",
															"src": "5620:43:0"
														}
													],
													"id": 405,
													"name": "IfStatement",
													"src": "5598:65:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "<",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 378,
																		"type": "uint256",
																		"value": "_allowance"
																	},
																	"id": 406,
																	"name": "Identifier",
																	"src": "5677:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 364,
																		"type": "uint256",
																		"value": "MAX_UINT"
																	},
																	"id": 407,
																	"name": "Identifier",
																	"src": "5690:8:0"
																}
															],
															"id": 408,
															"name": "BinaryOperation",
															"src": "5677:21:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "mapping(address => uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 357,
																										"type": "mapping(address => mapping(address => uint256))",
																										"value": "allowed"
																									},
																									"id": 409,
																									"name": "Identifier",
																									"src": "5715:7:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 366,
																										"type": "address",
																										"value": "_from"
																									},
																									"id": 410,
																									"name": "Identifier",
																									"src": "5723:5:0"
																								}
																							],
																							"id": 413,
																							"name": "IndexAccess",
																							"src": "5715:14:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1145,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 411,
																									"name": "Identifier",
																									"src": "5730:3:0"
																								}
																							],
																							"id": 412,
																							"name": "MemberAccess",
																							"src": "5730:10:0"
																						}
																					],
																					"id": 414,
																					"name": "IndexAccess",
																					"src": "5715:26:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sub",
																								"referencedDeclaration": 72,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 378,
																										"type": "uint256",
																										"value": "_allowance"
																									},
																									"id": 415,
																									"name": "Identifier",
																									"src": "5744:10:0"
																								}
																							],
																							"id": 416,
																							"name": "MemberAccess",
																							"src": "5744:14:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 370,
																								"type": "uint256",
																								"value": "_value"
																							},
																							"id": 417,
																							"name": "Identifier",
																							"src": "5759:6:0"
																						}
																					],
																					"id": 418,
																					"name": "FunctionCall",
																					"src": "5744:22:0"
																				}
																			],
																			"id": 419,
																			"name": "Assignment",
																			"src": "5715:51:0"
																		}
																	],
																	"id": 420,
																	"name": "ExpressionStatement",
																	"src": "5715:51:0"
																}
															],
															"id": 421,
															"name": "Block",
															"src": "5700:78:0"
														}
													],
													"id": 422,
													"name": "IfStatement",
													"src": "5673:105:0"
												},
												{
													"attributes": {
														"assignments": [
															424
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "sendAmount",
																"scope": 481,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 423,
																	"name": "ElementaryTypeName",
																	"src": "5788:4:0"
																}
															],
															"id": 424,
															"name": "VariableDeclaration",
															"src": "5788:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sub",
																		"referencedDeclaration": 72,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 370,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 425,
																			"name": "Identifier",
																			"src": "5806:6:0"
																		}
																	],
																	"id": 426,
																	"name": "MemberAccess",
																	"src": "5806:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 387,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 427,
																	"name": "Identifier",
																	"src": "5817:3:0"
																}
															],
															"id": 428,
															"name": "FunctionCall",
															"src": "5806:15:0"
														}
													],
													"id": 429,
													"name": "VariableDeclarationStatement",
													"src": "5788:33:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 430,
																			"name": "Identifier",
																			"src": "5832:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 366,
																				"type": "address",
																				"value": "_from"
																			},
																			"id": 431,
																			"name": "Identifier",
																			"src": "5841:5:0"
																		}
																	],
																	"id": 432,
																	"name": "IndexAccess",
																	"src": "5832:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 72,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 433,
																							"name": "Identifier",
																							"src": "5850:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 366,
																								"type": "address",
																								"value": "_from"
																							},
																							"id": 434,
																							"name": "Identifier",
																							"src": "5859:5:0"
																						}
																					],
																					"id": 435,
																					"name": "IndexAccess",
																					"src": "5850:15:0"
																				}
																			],
																			"id": 436,
																			"name": "MemberAccess",
																			"src": "5850:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 370,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 437,
																			"name": "Identifier",
																			"src": "5870:6:0"
																		}
																	],
																	"id": 438,
																	"name": "FunctionCall",
																	"src": "5850:27:0"
																}
															],
															"id": 439,
															"name": "Assignment",
															"src": "5832:45:0"
														}
													],
													"id": 440,
													"name": "ExpressionStatement",
													"src": "5832:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 441,
																			"name": "Identifier",
																			"src": "5888:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 368,
																				"type": "address",
																				"value": "_to"
																			},
																			"id": 442,
																			"name": "Identifier",
																			"src": "5897:3:0"
																		}
																	],
																	"id": 443,
																	"name": "IndexAccess",
																	"src": "5888:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 96,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 444,
																							"name": "Identifier",
																							"src": "5904:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 368,
																								"type": "address",
																								"value": "_to"
																							},
																							"id": 445,
																							"name": "Identifier",
																							"src": "5913:3:0"
																						}
																					],
																					"id": 446,
																					"name": "IndexAccess",
																					"src": "5904:13:0"
																				}
																			],
																			"id": 447,
																			"name": "MemberAccess",
																			"src": "5904:17:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 424,
																				"type": "uint256",
																				"value": "sendAmount"
																			},
																			"id": 448,
																			"name": "Identifier",
																			"src": "5922:10:0"
																		}
																	],
																	"id": 449,
																	"name": "FunctionCall",
																	"src": "5904:29:0"
																}
															],
															"id": 450,
															"name": "Assignment",
															"src": "5888:45:0"
														}
													],
													"id": 451,
													"name": "ExpressionStatement",
													"src": "5888:45:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 387,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 452,
																	"name": "Identifier",
																	"src": "5948:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 453,
																	"name": "Literal",
																	"src": "5954:1:0"
																}
															],
															"id": 454,
															"name": "BinaryOperation",
															"src": "5948:7:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 455,
																							"name": "Identifier",
																							"src": "5972:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 99,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 456,
																							"name": "Identifier",
																							"src": "5981:5:0"
																						}
																					],
																					"id": 457,
																					"name": "IndexAccess",
																					"src": "5972:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "add",
																								"referencedDeclaration": 96,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 216,
																												"type": "mapping(address => uint256)",
																												"value": "balances"
																											},
																											"id": 458,
																											"name": "Identifier",
																											"src": "5990:8:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 99,
																												"type": "address",
																												"value": "owner"
																											},
																											"id": 459,
																											"name": "Identifier",
																											"src": "5999:5:0"
																										}
																									],
																									"id": 460,
																									"name": "IndexAccess",
																									"src": "5990:15:0"
																								}
																							],
																							"id": 461,
																							"name": "MemberAccess",
																							"src": "5990:19:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 387,
																								"type": "uint256",
																								"value": "fee"
																							},
																							"id": 462,
																							"name": "Identifier",
																							"src": "6010:3:0"
																						}
																					],
																					"id": 463,
																					"name": "FunctionCall",
																					"src": "5990:24:0"
																				}
																			],
																			"id": 464,
																			"name": "Assignment",
																			"src": "5972:42:0"
																		}
																	],
																	"id": 465,
																	"name": "ExpressionStatement",
																	"src": "5972:42:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 168,
																						"type": "function (address,address,uint256)",
																						"value": "Transfer"
																					},
																					"id": 466,
																					"name": "Identifier",
																					"src": "6029:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 366,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 467,
																					"name": "Identifier",
																					"src": "6038:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 468,
																					"name": "Identifier",
																					"src": "6045:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 387,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 469,
																					"name": "Identifier",
																					"src": "6052:3:0"
																				}
																			],
																			"id": 470,
																			"name": "FunctionCall",
																			"src": "6029:27:0"
																		}
																	],
																	"id": 471,
																	"name": "ExpressionStatement",
																	"src": "6029:27:0"
																}
															],
															"id": 472,
															"name": "Block",
															"src": "5957:111:0"
														}
													],
													"id": 473,
													"name": "IfStatement",
													"src": "5944:124:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 168,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 474,
																	"name": "Identifier",
																	"src": "6078:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 366,
																		"type": "address",
																		"value": "_from"
																	},
																	"id": 475,
																	"name": "Identifier",
																	"src": "6087:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 368,
																		"type": "address",
																		"value": "_to"
																	},
																	"id": 476,
																	"name": "Identifier",
																	"src": "6094:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 424,
																		"type": "uint256",
																		"value": "sendAmount"
																	},
																	"id": 477,
																	"name": "Identifier",
																	"src": "6099:10:0"
																}
															],
															"id": 478,
															"name": "FunctionCall",
															"src": "6078:32:0"
														}
													],
													"id": 479,
													"name": "ExpressionStatement",
													"src": "6078:32:0"
												}
											],
											"id": 480,
											"name": "Block",
											"src": "5311:807:0"
										}
									],
									"id": 481,
									"name": "FunctionDefinition",
									"src": "5217:901:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "approve",
										"payable": false,
										"scope": 546,
										"stateMutability": "nonpayable",
										"superFunction": 196,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 529,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 482,
															"name": "ElementaryTypeName",
															"src": "6382:7:0"
														}
													],
													"id": 483,
													"name": "VariableDeclaration",
													"src": "6382:16:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 529,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 484,
															"name": "ElementaryTypeName",
															"src": "6400:4:0"
														}
													],
													"id": 485,
													"name": "VariableDeclaration",
													"src": "6400:11:0"
												}
											],
											"id": 486,
											"name": "ParameterList",
											"src": "6381:31:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 492,
											"name": "ParameterList",
											"src": "6444:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 487,
													"name": "Identifier",
													"src": "6420:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 488,
															"name": "Literal",
															"src": "6436:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 489,
															"name": "Literal",
															"src": "6440:2:0"
														}
													],
													"id": 490,
													"name": "BinaryOperation",
													"src": "6436:6:0"
												}
											],
											"id": 491,
											"name": "ModifierInvocation",
											"src": "6420:23:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 493,
																	"name": "Identifier",
																	"src": "6765:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "&&",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "bool"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"operator": "!=",
																										"type": "bool"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 485,
																												"type": "uint256",
																												"value": "_value"
																											},
																											"id": 494,
																											"name": "Identifier",
																											"src": "6776:6:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"hexvalue": "30",
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"subdenomination": null,
																												"token": "number",
																												"type": "int_const 0",
																												"value": "0"
																											},
																											"id": 495,
																											"name": "Literal",
																											"src": "6786:1:0"
																										}
																									],
																									"id": 496,
																									"name": "BinaryOperation",
																									"src": "6776:11:0"
																								}
																							],
																							"id": 497,
																							"name": "TupleExpression",
																							"src": "6775:13:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "bool"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"operator": "!=",
																										"type": "bool"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"type": "uint256"
																											},
																											"children": [
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"type": "mapping(address => uint256)"
																													},
																													"children": [
																														{
																															"attributes": {
																																"argumentTypes": null,
																																"overloadedDeclarations": [
																																	null
																																],
																																"referencedDeclaration": 357,
																																"type": "mapping(address => mapping(address => uint256))",
																																"value": "allowed"
																															},
																															"id": 498,
																															"name": "Identifier",
																															"src": "6793:7:0"
																														},
																														{
																															"attributes": {
																																"argumentTypes": null,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"member_name": "sender",
																																"referencedDeclaration": null,
																																"type": "address"
																															},
																															"children": [
																																{
																																	"attributes": {
																																		"argumentTypes": null,
																																		"overloadedDeclarations": [
																																			null
																																		],
																																		"referencedDeclaration": 1145,
																																		"type": "msg",
																																		"value": "msg"
																																	},
																																	"id": 499,
																																	"name": "Identifier",
																																	"src": "6801:3:0"
																																}
																															],
																															"id": 500,
																															"name": "MemberAccess",
																															"src": "6801:10:0"
																														}
																													],
																													"id": 501,
																													"name": "IndexAccess",
																													"src": "6793:19:0"
																												},
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"overloadedDeclarations": [
																															null
																														],
																														"referencedDeclaration": 483,
																														"type": "address",
																														"value": "_spender"
																													},
																													"id": 502,
																													"name": "Identifier",
																													"src": "6813:8:0"
																												}
																											],
																											"id": 503,
																											"name": "IndexAccess",
																											"src": "6793:29:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"hexvalue": "30",
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"subdenomination": null,
																												"token": "number",
																												"type": "int_const 0",
																												"value": "0"
																											},
																											"id": 504,
																											"name": "Literal",
																											"src": "6826:1:0"
																										}
																									],
																									"id": 505,
																									"name": "BinaryOperation",
																									"src": "6793:34:0"
																								}
																							],
																							"id": 506,
																							"name": "TupleExpression",
																							"src": "6792:36:0"
																						}
																					],
																					"id": 507,
																					"name": "BinaryOperation",
																					"src": "6775:53:0"
																				}
																			],
																			"id": 508,
																			"name": "TupleExpression",
																			"src": "6774:55:0"
																		}
																	],
																	"id": 509,
																	"name": "UnaryOperation",
																	"src": "6773:56:0"
																}
															],
															"id": 510,
															"name": "FunctionCall",
															"src": "6765:65:0"
														}
													],
													"id": 511,
													"name": "ExpressionStatement",
													"src": "6765:65:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "mapping(address => uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 357,
																						"type": "mapping(address => mapping(address => uint256))",
																						"value": "allowed"
																					},
																					"id": 512,
																					"name": "Identifier",
																					"src": "6843:7:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1145,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 513,
																							"name": "Identifier",
																							"src": "6851:3:0"
																						}
																					],
																					"id": 514,
																					"name": "MemberAccess",
																					"src": "6851:10:0"
																				}
																			],
																			"id": 516,
																			"name": "IndexAccess",
																			"src": "6843:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 483,
																				"type": "address",
																				"value": "_spender"
																			},
																			"id": 515,
																			"name": "Identifier",
																			"src": "6863:8:0"
																		}
																	],
																	"id": 517,
																	"name": "IndexAccess",
																	"src": "6843:29:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 485,
																		"type": "uint256",
																		"value": "_value"
																	},
																	"id": 518,
																	"name": "Identifier",
																	"src": "6875:6:0"
																}
															],
															"id": 519,
															"name": "Assignment",
															"src": "6843:38:0"
														}
													],
													"id": 520,
													"name": "ExpressionStatement",
													"src": "6843:38:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 204,
																		"type": "function (address,address,uint256)",
																		"value": "Approval"
																	},
																	"id": 521,
																	"name": "Identifier",
																	"src": "6892:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1145,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 522,
																			"name": "Identifier",
																			"src": "6901:3:0"
																		}
																	],
																	"id": 523,
																	"name": "MemberAccess",
																	"src": "6901:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 483,
																		"type": "address",
																		"value": "_spender"
																	},
																	"id": 524,
																	"name": "Identifier",
																	"src": "6913:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 485,
																		"type": "uint256",
																		"value": "_value"
																	},
																	"id": 525,
																	"name": "Identifier",
																	"src": "6923:6:0"
																}
															],
															"id": 526,
															"name": "FunctionCall",
															"src": "6892:38:0"
														}
													],
													"id": 527,
													"name": "ExpressionStatement",
													"src": "6892:38:0"
												}
											],
											"id": 528,
											"name": "Block",
											"src": "6444:494:0"
										}
									],
									"id": 529,
									"name": "FunctionDefinition",
									"src": "6365:573:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 546,
										"stateMutability": "view",
										"superFunction": 180,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 545,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 530,
															"name": "ElementaryTypeName",
															"src": "7290:7:0"
														}
													],
													"id": 531,
													"name": "VariableDeclaration",
													"src": "7290:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 545,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 532,
															"name": "ElementaryTypeName",
															"src": "7306:7:0"
														}
													],
													"id": 533,
													"name": "VariableDeclaration",
													"src": "7306:16:0"
												}
											],
											"id": 534,
											"name": "ParameterList",
											"src": "7289:34:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "remaining",
														"scope": 545,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 535,
															"name": "ElementaryTypeName",
															"src": "7349:4:0"
														}
													],
													"id": 536,
													"name": "VariableDeclaration",
													"src": "7349:14:0"
												}
											],
											"id": 537,
											"name": "ParameterList",
											"src": "7348:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 537
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "mapping(address => uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 357,
																				"type": "mapping(address => mapping(address => uint256))",
																				"value": "allowed"
																			},
																			"id": 538,
																			"name": "Identifier",
																			"src": "7383:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 531,
																				"type": "address",
																				"value": "_owner"
																			},
																			"id": 539,
																			"name": "Identifier",
																			"src": "7391:6:0"
																		}
																	],
																	"id": 540,
																	"name": "IndexAccess",
																	"src": "7383:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 533,
																		"type": "address",
																		"value": "_spender"
																	},
																	"id": 541,
																	"name": "Identifier",
																	"src": "7399:8:0"
																}
															],
															"id": 542,
															"name": "IndexAccess",
															"src": "7383:25:0"
														}
													],
													"id": 543,
													"name": "Return",
													"src": "7376:32:0"
												}
											],
											"id": 544,
											"name": "Block",
											"src": "7365:51:0"
										}
									],
									"id": 545,
									"name": "FunctionDefinition",
									"src": "7271:145:0"
								}
							],
							"id": 546,
							"name": "ContractDefinition",
							"src": "4762:2659:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139
								],
								"contractKind": "contract",
								"documentation": "@title Pausable\r\n@dev Base contract which allows children to implement an emergency stop mechanism.\r",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									603,
									139
								],
								"name": "Pausable",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 139,
												"type": "contract Ownable"
											},
											"id": 547,
											"name": "UserDefinedTypeName",
											"src": "7565:7:0"
										}
									],
									"id": 548,
									"name": "InheritanceSpecifier",
									"src": "7565:7:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Pause"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 549,
											"name": "ParameterList",
											"src": "7589:2:0"
										}
									],
									"id": 550,
									"name": "EventDefinition",
									"src": "7578:14:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Unpause"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 551,
											"name": "ParameterList",
											"src": "7609:2:0"
										}
									],
									"id": 552,
									"name": "EventDefinition",
									"src": "7596:16:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "paused",
										"scope": 603,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 553,
											"name": "ElementaryTypeName",
											"src": "7618:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "66616c7365",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "bool",
												"type": "bool",
												"value": "false"
											},
											"id": 554,
											"name": "Literal",
											"src": "7639:5:0"
										}
									],
									"id": 555,
									"name": "VariableDeclaration",
									"src": "7618:26:0"
								},
								{
									"attributes": {
										"name": "whenNotPaused",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 556,
											"name": "ParameterList",
											"src": "7775:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 557,
																	"name": "Identifier",
																	"src": "7785:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 555,
																				"type": "bool",
																				"value": "paused"
																			},
																			"id": 558,
																			"name": "Identifier",
																			"src": "7794:6:0"
																		}
																	],
																	"id": 559,
																	"name": "UnaryOperation",
																	"src": "7793:7:0"
																}
															],
															"id": 560,
															"name": "FunctionCall",
															"src": "7785:16:0"
														}
													],
													"id": 561,
													"name": "ExpressionStatement",
													"src": "7785:16:0"
												},
												{
													"id": 562,
													"name": "PlaceholderStatement",
													"src": "7808:1:0"
												}
											],
											"id": 563,
											"name": "Block",
											"src": "7778:37:0"
										}
									],
									"id": 564,
									"name": "ModifierDefinition",
									"src": "7753:62:0"
								},
								{
									"attributes": {
										"name": "whenPaused",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 565,
											"name": "ParameterList",
											"src": "7936:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 566,
																	"name": "Identifier",
																	"src": "7946:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 555,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 567,
																	"name": "Identifier",
																	"src": "7954:6:0"
																}
															],
															"id": 568,
															"name": "FunctionCall",
															"src": "7946:15:0"
														}
													],
													"id": 569,
													"name": "ExpressionStatement",
													"src": "7946:15:0"
												},
												{
													"id": 570,
													"name": "PlaceholderStatement",
													"src": "7968:1:0"
												}
											],
											"id": 571,
											"name": "Block",
											"src": "7939:36:0"
										}
									],
									"id": 572,
									"name": "ModifierDefinition",
									"src": "7917:58:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "pause",
										"payable": false,
										"scope": 603,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 573,
											"name": "ParameterList",
											"src": "8073:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 578,
											"name": "ParameterList",
											"src": "8107:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 574,
													"name": "Identifier",
													"src": "8076:9:0"
												}
											],
											"id": 575,
											"name": "ModifierInvocation",
											"src": "8076:9:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 564,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 576,
													"name": "Identifier",
													"src": "8086:13:0"
												}
											],
											"id": 577,
											"name": "ModifierInvocation",
											"src": "8086:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 555,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 579,
																	"name": "Identifier",
																	"src": "8114:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 580,
																	"name": "Literal",
																	"src": "8123:4:0"
																}
															],
															"id": 581,
															"name": "Assignment",
															"src": "8114:13:0"
														}
													],
													"id": 582,
													"name": "ExpressionStatement",
													"src": "8114:13:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 550,
																		"type": "function ()",
																		"value": "Pause"
																	},
																	"id": 583,
																	"name": "Identifier",
																	"src": "8134:5:0"
																}
															],
															"id": 584,
															"name": "FunctionCall",
															"src": "8134:7:0"
														}
													],
													"id": 585,
													"name": "ExpressionStatement",
													"src": "8134:7:0"
												}
											],
											"id": 586,
											"name": "Block",
											"src": "8107:40:0"
										}
									],
									"id": 587,
									"name": "FunctionDefinition",
									"src": "8059:88:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "unpause",
										"payable": false,
										"scope": 603,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 588,
											"name": "ParameterList",
											"src": "8250:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 593,
											"name": "ParameterList",
											"src": "8281:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 589,
													"name": "Identifier",
													"src": "8253:9:0"
												}
											],
											"id": 590,
											"name": "ModifierInvocation",
											"src": "8253:9:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 572,
														"type": "modifier ()",
														"value": "whenPaused"
													},
													"id": 591,
													"name": "Identifier",
													"src": "8263:10:0"
												}
											],
											"id": 592,
											"name": "ModifierInvocation",
											"src": "8263:10:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 555,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 594,
																	"name": "Identifier",
																	"src": "8288:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 595,
																	"name": "Literal",
																	"src": "8297:5:0"
																}
															],
															"id": 596,
															"name": "Assignment",
															"src": "8288:14:0"
														}
													],
													"id": 597,
													"name": "ExpressionStatement",
													"src": "8288:14:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 552,
																		"type": "function ()",
																		"value": "Unpause"
																	},
																	"id": 598,
																	"name": "Identifier",
																	"src": "8309:7:0"
																}
															],
															"id": 599,
															"name": "FunctionCall",
															"src": "8309:9:0"
														}
													],
													"id": 600,
													"name": "ExpressionStatement",
													"src": "8309:9:0"
												}
											],
											"id": 601,
											"name": "Block",
											"src": "8281:43:0"
										}
									],
									"id": 602,
									"name": "FunctionDefinition",
									"src": "8234:90:0"
								}
							],
							"id": 603,
							"name": "ContractDefinition",
							"src": "7544:783:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									169,
									347
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									717,
									347,
									169,
									139
								],
								"name": "BlackList",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 139,
												"type": "contract Ownable"
											},
											"id": 604,
											"name": "UserDefinedTypeName",
											"src": "8353:7:0"
										}
									],
									"id": 605,
									"name": "InheritanceSpecifier",
									"src": "8353:7:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BasicToken",
												"referencedDeclaration": 347,
												"type": "contract BasicToken"
											},
											"id": 606,
											"name": "UserDefinedTypeName",
											"src": "8362:10:0"
										}
									],
									"id": 607,
									"name": "InheritanceSpecifier",
									"src": "8362:10:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getBlackListStatus",
										"payable": false,
										"scope": 717,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_maker",
														"scope": 619,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 608,
															"name": "ElementaryTypeName",
															"src": "8530:7:0"
														}
													],
													"id": 609,
													"name": "VariableDeclaration",
													"src": "8530:14:0"
												}
											],
											"id": 610,
											"name": "ParameterList",
											"src": "8529:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 619,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 611,
															"name": "ElementaryTypeName",
															"src": "8573:4:0"
														}
													],
													"id": 612,
													"name": "VariableDeclaration",
													"src": "8573:4:0"
												}
											],
											"id": 613,
											"name": "ParameterList",
											"src": "8572:6:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 613
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 631,
																		"type": "mapping(address => bool)",
																		"value": "isBlackListed"
																	},
																	"id": 614,
																	"name": "Identifier",
																	"src": "8597:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 609,
																		"type": "address",
																		"value": "_maker"
																	},
																	"id": 615,
																	"name": "Identifier",
																	"src": "8611:6:0"
																}
															],
															"id": 616,
															"name": "IndexAccess",
															"src": "8597:21:0"
														}
													],
													"id": 617,
													"name": "Return",
													"src": "8590:28:0"
												}
											],
											"id": 618,
											"name": "Block",
											"src": "8579:47:0"
										}
									],
									"id": 619,
									"name": "FunctionDefinition",
									"src": "8502:124:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getOwner",
										"payable": false,
										"scope": 717,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 620,
											"name": "ParameterList",
											"src": "8651:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 627,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 621,
															"name": "ElementaryTypeName",
															"src": "8681:7:0"
														}
													],
													"id": 622,
													"name": "VariableDeclaration",
													"src": "8681:7:0"
												}
											],
											"id": 623,
											"name": "ParameterList",
											"src": "8680:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 623
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 99,
																"type": "address",
																"value": "owner"
															},
															"id": 624,
															"name": "Identifier",
															"src": "8708:5:0"
														}
													],
													"id": 625,
													"name": "Return",
													"src": "8701:12:0"
												}
											],
											"id": 626,
											"name": "Block",
											"src": "8690:31:0"
										}
									],
									"id": 627,
									"name": "FunctionDefinition",
									"src": "8634:87:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "isBlackListed",
										"scope": 717,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => bool)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => bool)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 628,
													"name": "ElementaryTypeName",
													"src": "8738:7:0"
												},
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 629,
													"name": "ElementaryTypeName",
													"src": "8749:4:0"
												}
											],
											"id": 630,
											"name": "Mapping",
											"src": "8729:25:0"
										}
									],
									"id": 631,
									"name": "VariableDeclaration",
									"src": "8729:46:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "addBlackList",
										"payable": false,
										"scope": 717,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_evilUser",
														"scope": 649,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 632,
															"name": "ElementaryTypeName",
															"src": "8811:7:0"
														}
													],
													"id": 633,
													"name": "VariableDeclaration",
													"src": "8811:17:0"
												}
											],
											"id": 634,
											"name": "ParameterList",
											"src": "8810:19:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 637,
											"name": "ParameterList",
											"src": "8847:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 635,
													"name": "Identifier",
													"src": "8837:9:0"
												}
											],
											"id": 636,
											"name": "ModifierInvocation",
											"src": "8837:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 631,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 638,
																			"name": "Identifier",
																			"src": "8858:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 633,
																				"type": "address",
																				"value": "_evilUser"
																			},
																			"id": 639,
																			"name": "Identifier",
																			"src": "8872:9:0"
																		}
																	],
																	"id": 640,
																	"name": "IndexAccess",
																	"src": "8858:24:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 641,
																	"name": "Literal",
																	"src": "8885:4:0"
																}
															],
															"id": 642,
															"name": "Assignment",
															"src": "8858:31:0"
														}
													],
													"id": 643,
													"name": "ExpressionStatement",
													"src": "8858:31:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 712,
																		"type": "function (address)",
																		"value": "AddedBlackList"
																	},
																	"id": 644,
																	"name": "Identifier",
																	"src": "8900:14:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 633,
																		"type": "address",
																		"value": "_evilUser"
																	},
																	"id": 645,
																	"name": "Identifier",
																	"src": "8915:9:0"
																}
															],
															"id": 646,
															"name": "FunctionCall",
															"src": "8900:25:0"
														}
													],
													"id": 647,
													"name": "ExpressionStatement",
													"src": "8900:25:0"
												}
											],
											"id": 648,
											"name": "Block",
											"src": "8847:86:0"
										}
									],
									"id": 649,
									"name": "FunctionDefinition",
									"src": "8788:145:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "removeBlackList",
										"payable": false,
										"scope": 717,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_clearedUser",
														"scope": 667,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 650,
															"name": "ElementaryTypeName",
															"src": "8967:7:0"
														}
													],
													"id": 651,
													"name": "VariableDeclaration",
													"src": "8967:20:0"
												}
											],
											"id": 652,
											"name": "ParameterList",
											"src": "8966:22:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 655,
											"name": "ParameterList",
											"src": "9006:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 653,
													"name": "Identifier",
													"src": "8996:9:0"
												}
											],
											"id": 654,
											"name": "ModifierInvocation",
											"src": "8996:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 631,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 656,
																			"name": "Identifier",
																			"src": "9017:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 651,
																				"type": "address",
																				"value": "_clearedUser"
																			},
																			"id": 657,
																			"name": "Identifier",
																			"src": "9031:12:0"
																		}
																	],
																	"id": 658,
																	"name": "IndexAccess",
																	"src": "9017:27:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 659,
																	"name": "Literal",
																	"src": "9047:5:0"
																}
															],
															"id": 660,
															"name": "Assignment",
															"src": "9017:35:0"
														}
													],
													"id": 661,
													"name": "ExpressionStatement",
													"src": "9017:35:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 716,
																		"type": "function (address)",
																		"value": "RemovedBlackList"
																	},
																	"id": 662,
																	"name": "Identifier",
																	"src": "9063:16:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 651,
																		"type": "address",
																		"value": "_clearedUser"
																	},
																	"id": 663,
																	"name": "Identifier",
																	"src": "9080:12:0"
																}
															],
															"id": 664,
															"name": "FunctionCall",
															"src": "9063:30:0"
														}
													],
													"id": 665,
													"name": "ExpressionStatement",
													"src": "9063:30:0"
												}
											],
											"id": 666,
											"name": "Block",
											"src": "9006:95:0"
										}
									],
									"id": 667,
									"name": "FunctionDefinition",
									"src": "8941:160:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "destroyBlackFunds",
										"payable": false,
										"scope": 717,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_blackListedUser",
														"scope": 702,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 668,
															"name": "ElementaryTypeName",
															"src": "9137:7:0"
														}
													],
													"id": 669,
													"name": "VariableDeclaration",
													"src": "9137:24:0"
												}
											],
											"id": 670,
											"name": "ParameterList",
											"src": "9136:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 673,
											"name": "ParameterList",
											"src": "9180:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 671,
													"name": "Identifier",
													"src": "9170:9:0"
												}
											],
											"id": 672,
											"name": "ModifierInvocation",
											"src": "9170:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 674,
																	"name": "Identifier",
																	"src": "9191:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 631,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 675,
																			"name": "Identifier",
																			"src": "9199:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 669,
																				"type": "address",
																				"value": "_blackListedUser"
																			},
																			"id": 676,
																			"name": "Identifier",
																			"src": "9213:16:0"
																		}
																	],
																	"id": 677,
																	"name": "IndexAccess",
																	"src": "9199:31:0"
																}
															],
															"id": 678,
															"name": "FunctionCall",
															"src": "9191:40:0"
														}
													],
													"id": 679,
													"name": "ExpressionStatement",
													"src": "9191:40:0"
												},
												{
													"attributes": {
														"assignments": [
															681
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "dirtyFunds",
																"scope": 702,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 680,
																	"name": "ElementaryTypeName",
																	"src": "9242:4:0"
																}
															],
															"id": 681,
															"name": "VariableDeclaration",
															"src": "9242:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			346
																		],
																		"referencedDeclaration": 346,
																		"type": "function (address) view returns (uint256)",
																		"value": "balanceOf"
																	},
																	"id": 682,
																	"name": "Identifier",
																	"src": "9260:9:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 669,
																		"type": "address",
																		"value": "_blackListedUser"
																	},
																	"id": 683,
																	"name": "Identifier",
																	"src": "9270:16:0"
																}
															],
															"id": 684,
															"name": "FunctionCall",
															"src": "9260:27:0"
														}
													],
													"id": 685,
													"name": "VariableDeclarationStatement",
													"src": "9242:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 686,
																			"name": "Identifier",
																			"src": "9298:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 669,
																				"type": "address",
																				"value": "_blackListedUser"
																			},
																			"id": 687,
																			"name": "Identifier",
																			"src": "9307:16:0"
																		}
																	],
																	"id": 688,
																	"name": "IndexAccess",
																	"src": "9298:26:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 689,
																	"name": "Literal",
																	"src": "9327:1:0"
																}
															],
															"id": 690,
															"name": "Assignment",
															"src": "9298:30:0"
														}
													],
													"id": 691,
													"name": "ExpressionStatement",
													"src": "9298:30:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 692,
																	"name": "Identifier",
																	"src": "9339:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 681,
																		"type": "uint256",
																		"value": "dirtyFunds"
																	},
																	"id": 693,
																	"name": "Identifier",
																	"src": "9355:10:0"
																}
															],
															"id": 694,
															"name": "Assignment",
															"src": "9339:26:0"
														}
													],
													"id": 695,
													"name": "ExpressionStatement",
													"src": "9339:26:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 708,
																		"type": "function (address,uint256)",
																		"value": "DestroyedBlackFunds"
																	},
																	"id": 696,
																	"name": "Identifier",
																	"src": "9376:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 669,
																		"type": "address",
																		"value": "_blackListedUser"
																	},
																	"id": 697,
																	"name": "Identifier",
																	"src": "9396:16:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 681,
																		"type": "uint256",
																		"value": "dirtyFunds"
																	},
																	"id": 698,
																	"name": "Identifier",
																	"src": "9414:10:0"
																}
															],
															"id": 699,
															"name": "FunctionCall",
															"src": "9376:49:0"
														}
													],
													"id": 700,
													"name": "ExpressionStatement",
													"src": "9376:49:0"
												}
											],
											"id": 701,
											"name": "Block",
											"src": "9180:253:0"
										}
									],
									"id": 702,
									"name": "FunctionDefinition",
									"src": "9109:324:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "DestroyedBlackFunds"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_blackListedUser",
														"scope": 708,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 703,
															"name": "ElementaryTypeName",
															"src": "9467:7:0"
														}
													],
													"id": 704,
													"name": "VariableDeclaration",
													"src": "9467:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_balance",
														"scope": 708,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 705,
															"name": "ElementaryTypeName",
															"src": "9493:4:0"
														}
													],
													"id": 706,
													"name": "VariableDeclaration",
													"src": "9493:13:0"
												}
											],
											"id": 707,
											"name": "ParameterList",
											"src": "9466:41:0"
										}
									],
									"id": 708,
									"name": "EventDefinition",
									"src": "9441:67:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "AddedBlackList"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_user",
														"scope": 712,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 709,
															"name": "ElementaryTypeName",
															"src": "9537:7:0"
														}
													],
													"id": 710,
													"name": "VariableDeclaration",
													"src": "9537:13:0"
												}
											],
											"id": 711,
											"name": "ParameterList",
											"src": "9536:15:0"
										}
									],
									"id": 712,
									"name": "EventDefinition",
									"src": "9516:36:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "RemovedBlackList"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_user",
														"scope": 716,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 713,
															"name": "ElementaryTypeName",
															"src": "9583:7:0"
														}
													],
													"id": 714,
													"name": "VariableDeclaration",
													"src": "9583:13:0"
												}
											],
											"id": 715,
											"name": "ParameterList",
											"src": "9582:15:0"
										}
									],
									"id": 716,
									"name": "EventDefinition",
									"src": "9560:38:0"
								}
							],
							"id": 717,
							"name": "ContractDefinition",
							"src": "8331:1272:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									169,
									205,
									347,
									546
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									749,
									546,
									205,
									347,
									169,
									139
								],
								"name": "UpgradedStandardToken",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "StandardToken",
												"referencedDeclaration": 546,
												"type": "contract StandardToken"
											},
											"id": 718,
											"name": "UserDefinedTypeName",
											"src": "9641:13:0"
										}
									],
									"id": 719,
									"name": "InheritanceSpecifier",
									"src": "9641:13:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferByLegacy",
										"payable": false,
										"scope": 749,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 728,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 720,
															"name": "ElementaryTypeName",
															"src": "9810:7:0"
														}
													],
													"id": 721,
													"name": "VariableDeclaration",
													"src": "9810:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 728,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 722,
															"name": "ElementaryTypeName",
															"src": "9824:7:0"
														}
													],
													"id": 723,
													"name": "VariableDeclaration",
													"src": "9824:10:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 728,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 724,
															"name": "ElementaryTypeName",
															"src": "9836:4:0"
														}
													],
													"id": 725,
													"name": "VariableDeclaration",
													"src": "9836:10:0"
												}
											],
											"id": 726,
											"name": "ParameterList",
											"src": "9809:38:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 727,
											"name": "ParameterList",
											"src": "9854:0:0"
										}
									],
									"id": 728,
									"name": "FunctionDefinition",
									"src": "9784:71:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferFromByLegacy",
										"payable": false,
										"scope": 749,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "sender",
														"scope": 739,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 729,
															"name": "ElementaryTypeName",
															"src": "9891:7:0"
														}
													],
													"id": 730,
													"name": "VariableDeclaration",
													"src": "9891:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 739,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 731,
															"name": "ElementaryTypeName",
															"src": "9907:7:0"
														}
													],
													"id": 732,
													"name": "VariableDeclaration",
													"src": "9907:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 739,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 733,
															"name": "ElementaryTypeName",
															"src": "9921:7:0"
														}
													],
													"id": 734,
													"name": "VariableDeclaration",
													"src": "9921:15:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 739,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 735,
															"name": "ElementaryTypeName",
															"src": "9938:4:0"
														}
													],
													"id": 736,
													"name": "VariableDeclaration",
													"src": "9938:10:0"
												}
											],
											"id": 737,
											"name": "ParameterList",
											"src": "9890:59:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 738,
											"name": "ParameterList",
											"src": "9956:0:0"
										}
									],
									"id": 739,
									"name": "FunctionDefinition",
									"src": "9861:96:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "approveByLegacy",
										"payable": false,
										"scope": 749,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 748,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 740,
															"name": "ElementaryTypeName",
															"src": "9988:7:0"
														}
													],
													"id": 741,
													"name": "VariableDeclaration",
													"src": "9988:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 748,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 742,
															"name": "ElementaryTypeName",
															"src": "10002:7:0"
														}
													],
													"id": 743,
													"name": "VariableDeclaration",
													"src": "10002:15:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 748,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 744,
															"name": "ElementaryTypeName",
															"src": "10019:4:0"
														}
													],
													"id": 745,
													"name": "VariableDeclaration",
													"src": "10019:10:0"
												}
											],
											"id": 746,
											"name": "ParameterList",
											"src": "9987:43:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 747,
											"name": "ParameterList",
											"src": "10037:0:0"
										}
									],
									"id": 748,
									"name": "FunctionDefinition",
									"src": "9963:75:0"
								}
							],
							"id": 749,
							"name": "ContractDefinition",
							"src": "9607:434:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									169,
									205,
									347,
									546,
									603,
									717
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									1142,
									717,
									546,
									205,
									347,
									169,
									603,
									139
								],
								"name": "TetherToken",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Pausable",
												"referencedDeclaration": 603,
												"type": "contract Pausable"
											},
											"id": 750,
											"name": "UserDefinedTypeName",
											"src": "10069:8:0"
										}
									],
									"id": 751,
									"name": "InheritanceSpecifier",
									"src": "10069:8:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "StandardToken",
												"referencedDeclaration": 546,
												"type": "contract StandardToken"
											},
											"id": 752,
											"name": "UserDefinedTypeName",
											"src": "10079:13:0"
										}
									],
									"id": 753,
									"name": "InheritanceSpecifier",
									"src": "10079:13:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BlackList",
												"referencedDeclaration": 717,
												"type": "contract BlackList"
											},
											"id": 754,
											"name": "UserDefinedTypeName",
											"src": "10094:9:0"
										}
									],
									"id": 755,
									"name": "InheritanceSpecifier",
									"src": "10094:9:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "name",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "string storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "string",
												"type": "string storage pointer"
											},
											"id": 756,
											"name": "ElementaryTypeName",
											"src": "10113:6:0"
										}
									],
									"id": 757,
									"name": "VariableDeclaration",
									"src": "10113:18:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "symbol",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "string storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "string",
												"type": "string storage pointer"
											},
											"id": 758,
											"name": "ElementaryTypeName",
											"src": "10138:6:0"
										}
									],
									"id": 759,
									"name": "VariableDeclaration",
									"src": "10138:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "decimals",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 760,
											"name": "ElementaryTypeName",
											"src": "10165:4:0"
										}
									],
									"id": 761,
									"name": "VariableDeclaration",
									"src": "10165:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "upgradedAddress",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 762,
											"name": "ElementaryTypeName",
											"src": "10192:7:0"
										}
									],
									"id": 763,
									"name": "VariableDeclaration",
									"src": "10192:30:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "deprecated",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 764,
											"name": "ElementaryTypeName",
											"src": "10229:4:0"
										}
									],
									"id": 765,
									"name": "VariableDeclaration",
									"src": "10229:22:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "TetherToken",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_initialSupply",
														"scope": 803,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 766,
															"name": "ElementaryTypeName",
															"src": "10576:4:0"
														}
													],
													"id": 767,
													"name": "VariableDeclaration",
													"src": "10576:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_name",
														"scope": 803,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "string memory",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "string",
																"type": "string storage pointer"
															},
															"id": 768,
															"name": "ElementaryTypeName",
															"src": "10597:6:0"
														}
													],
													"id": 769,
													"name": "VariableDeclaration",
													"src": "10597:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_symbol",
														"scope": 803,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "string memory",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "string",
																"type": "string storage pointer"
															},
															"id": 770,
															"name": "ElementaryTypeName",
															"src": "10611:6:0"
														}
													],
													"id": 771,
													"name": "VariableDeclaration",
													"src": "10611:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_decimals",
														"scope": 803,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 772,
															"name": "ElementaryTypeName",
															"src": "10627:4:0"
														}
													],
													"id": 773,
													"name": "VariableDeclaration",
													"src": "10627:14:0"
												}
											],
											"id": 774,
											"name": "ParameterList",
											"src": "10575:67:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 775,
											"name": "ParameterList",
											"src": "10650:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 776,
																	"name": "Identifier",
																	"src": "10661:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 767,
																		"type": "uint256",
																		"value": "_initialSupply"
																	},
																	"id": 777,
																	"name": "Identifier",
																	"src": "10676:14:0"
																}
															],
															"id": 778,
															"name": "Assignment",
															"src": "10661:29:0"
														}
													],
													"id": 779,
													"name": "ExpressionStatement",
													"src": "10661:29:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "string storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 757,
																		"type": "string storage ref",
																		"value": "name"
																	},
																	"id": 780,
																	"name": "Identifier",
																	"src": "10701:4:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 769,
																		"type": "string memory",
																		"value": "_name"
																	},
																	"id": 781,
																	"name": "Identifier",
																	"src": "10708:5:0"
																}
															],
															"id": 782,
															"name": "Assignment",
															"src": "10701:12:0"
														}
													],
													"id": 783,
													"name": "ExpressionStatement",
													"src": "10701:12:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "string storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 759,
																		"type": "string storage ref",
																		"value": "symbol"
																	},
																	"id": 784,
																	"name": "Identifier",
																	"src": "10724:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 771,
																		"type": "string memory",
																		"value": "_symbol"
																	},
																	"id": 785,
																	"name": "Identifier",
																	"src": "10733:7:0"
																}
															],
															"id": 786,
															"name": "Assignment",
															"src": "10724:16:0"
														}
													],
													"id": 787,
													"name": "ExpressionStatement",
													"src": "10724:16:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 761,
																		"type": "uint256",
																		"value": "decimals"
																	},
																	"id": 788,
																	"name": "Identifier",
																	"src": "10751:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 773,
																		"type": "uint256",
																		"value": "_decimals"
																	},
																	"id": 789,
																	"name": "Identifier",
																	"src": "10762:9:0"
																}
															],
															"id": 790,
															"name": "Assignment",
															"src": "10751:20:0"
														}
													],
													"id": 791,
													"name": "ExpressionStatement",
													"src": "10751:20:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 792,
																			"name": "Identifier",
																			"src": "10782:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 793,
																			"name": "Identifier",
																			"src": "10791:5:0"
																		}
																	],
																	"id": 794,
																	"name": "IndexAccess",
																	"src": "10782:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 767,
																		"type": "uint256",
																		"value": "_initialSupply"
																	},
																	"id": 795,
																	"name": "Identifier",
																	"src": "10800:14:0"
																}
															],
															"id": 796,
															"name": "Assignment",
															"src": "10782:32:0"
														}
													],
													"id": 797,
													"name": "ExpressionStatement",
													"src": "10782:32:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 765,
																		"type": "bool",
																		"value": "deprecated"
																	},
																	"id": 798,
																	"name": "Identifier",
																	"src": "10825:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 799,
																	"name": "Literal",
																	"src": "10838:5:0"
																}
															],
															"id": 800,
															"name": "Assignment",
															"src": "10825:18:0"
														}
													],
													"id": 801,
													"name": "ExpressionStatement",
													"src": "10825:18:0"
												}
											],
											"id": 802,
											"name": "Block",
											"src": "10650:201:0"
										}
									],
									"id": 803,
									"name": "FunctionDefinition",
									"src": "10555:296:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transfer",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": 334,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 841,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 804,
															"name": "ElementaryTypeName",
															"src": "10954:7:0"
														}
													],
													"id": 805,
													"name": "VariableDeclaration",
													"src": "10954:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 841,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 806,
															"name": "ElementaryTypeName",
															"src": "10967:4:0"
														}
													],
													"id": 807,
													"name": "VariableDeclaration",
													"src": "10967:11:0"
												}
											],
											"id": 808,
											"name": "ParameterList",
											"src": "10953:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 811,
											"name": "ParameterList",
											"src": "11001:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 564,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 809,
													"name": "Identifier",
													"src": "10987:13:0"
												}
											],
											"id": 810,
											"name": "ModifierInvocation",
											"src": "10987:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 812,
																	"name": "Identifier",
																	"src": "11012:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 631,
																						"type": "mapping(address => bool)",
																						"value": "isBlackListed"
																					},
																					"id": 813,
																					"name": "Identifier",
																					"src": "11021:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1145,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 814,
																							"name": "Identifier",
																							"src": "11035:3:0"
																						}
																					],
																					"id": 815,
																					"name": "MemberAccess",
																					"src": "11035:10:0"
																				}
																			],
																			"id": 816,
																			"name": "IndexAccess",
																			"src": "11021:25:0"
																		}
																	],
																	"id": 817,
																	"name": "UnaryOperation",
																	"src": "11020:26:0"
																}
															],
															"id": 818,
															"name": "FunctionCall",
															"src": "11012:35:0"
														}
													],
													"id": 819,
													"name": "ExpressionStatement",
													"src": "11012:35:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 820,
															"name": "Identifier",
															"src": "11062:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 811
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferByLegacy",
																						"referencedDeclaration": 728,
																						"type": "function (address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 749,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 821,
																									"name": "Identifier",
																									"src": "11096:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 822,
																									"name": "Identifier",
																									"src": "11118:15:0"
																								}
																							],
																							"id": 823,
																							"name": "FunctionCall",
																							"src": "11096:38:0"
																						}
																					],
																					"id": 824,
																					"name": "MemberAccess",
																					"src": "11096:55:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1145,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 825,
																							"name": "Identifier",
																							"src": "11152:3:0"
																						}
																					],
																					"id": 826,
																					"name": "MemberAccess",
																					"src": "11152:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 805,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 827,
																					"name": "Identifier",
																					"src": "11164:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 807,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 828,
																					"name": "Identifier",
																					"src": "11169:6:0"
																				}
																			],
																			"id": 829,
																			"name": "FunctionCall",
																			"src": "11096:80:0"
																		}
																	],
																	"id": 830,
																	"name": "Return",
																	"src": "11089:87:0"
																}
															],
															"id": 831,
															"name": "Block",
															"src": "11074:114:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 811
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transfer",
																						"referencedDeclaration": 334,
																						"type": "function (address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 832,
																							"name": "Identifier",
																							"src": "11216:5:0"
																						}
																					],
																					"id": 833,
																					"name": "MemberAccess",
																					"src": "11216:14:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 805,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 834,
																					"name": "Identifier",
																					"src": "11231:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 807,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 835,
																					"name": "Identifier",
																					"src": "11236:6:0"
																				}
																			],
																			"id": 836,
																			"name": "FunctionCall",
																			"src": "11216:27:0"
																		}
																	],
																	"id": 837,
																	"name": "Return",
																	"src": "11209:34:0"
																}
															],
															"id": 838,
															"name": "Block",
															"src": "11194:61:0"
														}
													],
													"id": 839,
													"name": "IfStatement",
													"src": "11058:197:0"
												}
											],
											"id": 840,
											"name": "Block",
											"src": "11001:261:0"
										}
									],
									"id": 841,
									"name": "FunctionDefinition",
									"src": "10936:326:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferFrom",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": 481,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_from",
														"scope": 882,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 842,
															"name": "ElementaryTypeName",
															"src": "11369:7:0"
														}
													],
													"id": 843,
													"name": "VariableDeclaration",
													"src": "11369:13:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 882,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 844,
															"name": "ElementaryTypeName",
															"src": "11384:7:0"
														}
													],
													"id": 845,
													"name": "VariableDeclaration",
													"src": "11384:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 882,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 846,
															"name": "ElementaryTypeName",
															"src": "11397:4:0"
														}
													],
													"id": 847,
													"name": "VariableDeclaration",
													"src": "11397:11:0"
												}
											],
											"id": 848,
											"name": "ParameterList",
											"src": "11368:41:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 851,
											"name": "ParameterList",
											"src": "11431:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 564,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 849,
													"name": "Identifier",
													"src": "11417:13:0"
												}
											],
											"id": 850,
											"name": "ModifierInvocation",
											"src": "11417:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 852,
																	"name": "Identifier",
																	"src": "11442:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 631,
																						"type": "mapping(address => bool)",
																						"value": "isBlackListed"
																					},
																					"id": 853,
																					"name": "Identifier",
																					"src": "11451:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 843,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 854,
																					"name": "Identifier",
																					"src": "11465:5:0"
																				}
																			],
																			"id": 855,
																			"name": "IndexAccess",
																			"src": "11451:20:0"
																		}
																	],
																	"id": 856,
																	"name": "UnaryOperation",
																	"src": "11450:21:0"
																}
															],
															"id": 857,
															"name": "FunctionCall",
															"src": "11442:30:0"
														}
													],
													"id": 858,
													"name": "ExpressionStatement",
													"src": "11442:30:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 859,
															"name": "Identifier",
															"src": "11487:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 851
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferFromByLegacy",
																						"referencedDeclaration": 739,
																						"type": "function (address,address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 749,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 860,
																									"name": "Identifier",
																									"src": "11521:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 861,
																									"name": "Identifier",
																									"src": "11543:15:0"
																								}
																							],
																							"id": 862,
																							"name": "FunctionCall",
																							"src": "11521:38:0"
																						}
																					],
																					"id": 863,
																					"name": "MemberAccess",
																					"src": "11521:59:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1145,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 864,
																							"name": "Identifier",
																							"src": "11581:3:0"
																						}
																					],
																					"id": 865,
																					"name": "MemberAccess",
																					"src": "11581:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 843,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 866,
																					"name": "Identifier",
																					"src": "11593:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 845,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 867,
																					"name": "Identifier",
																					"src": "11600:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 847,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 868,
																					"name": "Identifier",
																					"src": "11605:6:0"
																				}
																			],
																			"id": 869,
																			"name": "FunctionCall",
																			"src": "11521:91:0"
																		}
																	],
																	"id": 870,
																	"name": "Return",
																	"src": "11514:98:0"
																}
															],
															"id": 871,
															"name": "Block",
															"src": "11499:125:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 851
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferFrom",
																						"referencedDeclaration": 481,
																						"type": "function (address,address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 872,
																							"name": "Identifier",
																							"src": "11652:5:0"
																						}
																					],
																					"id": 873,
																					"name": "MemberAccess",
																					"src": "11652:18:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 843,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 874,
																					"name": "Identifier",
																					"src": "11671:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 845,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 875,
																					"name": "Identifier",
																					"src": "11678:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 847,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 876,
																					"name": "Identifier",
																					"src": "11683:6:0"
																				}
																			],
																			"id": 877,
																			"name": "FunctionCall",
																			"src": "11652:38:0"
																		}
																	],
																	"id": 878,
																	"name": "Return",
																	"src": "11645:45:0"
																}
															],
															"id": 879,
															"name": "Block",
															"src": "11630:72:0"
														}
													],
													"id": 880,
													"name": "IfStatement",
													"src": "11483:219:0"
												}
											],
											"id": 881,
											"name": "Block",
											"src": "11431:278:0"
										}
									],
									"id": 882,
									"name": "FunctionDefinition",
									"src": "11347:362:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 1142,
										"stateMutability": "view",
										"superFunction": 346,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "who",
														"scope": 906,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 883,
															"name": "ElementaryTypeName",
															"src": "11813:7:0"
														}
													],
													"id": 884,
													"name": "VariableDeclaration",
													"src": "11813:11:0"
												}
											],
											"id": 885,
											"name": "ParameterList",
											"src": "11812:13:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 906,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 886,
															"name": "ElementaryTypeName",
															"src": "11851:4:0"
														}
													],
													"id": 887,
													"name": "VariableDeclaration",
													"src": "11851:4:0"
												}
											],
											"id": 888,
											"name": "ParameterList",
											"src": "11850:6:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 889,
															"name": "Identifier",
															"src": "11872:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 888
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "balanceOf",
																						"referencedDeclaration": 346,
																						"type": "function (address) view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 749,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 890,
																									"name": "Identifier",
																									"src": "11906:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 891,
																									"name": "Identifier",
																									"src": "11928:15:0"
																								}
																							],
																							"id": 892,
																							"name": "FunctionCall",
																							"src": "11906:38:0"
																						}
																					],
																					"id": 893,
																					"name": "MemberAccess",
																					"src": "11906:48:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 884,
																						"type": "address",
																						"value": "who"
																					},
																					"id": 894,
																					"name": "Identifier",
																					"src": "11955:3:0"
																				}
																			],
																			"id": 895,
																			"name": "FunctionCall",
																			"src": "11906:53:0"
																		}
																	],
																	"id": 896,
																	"name": "Return",
																	"src": "11899:60:0"
																}
															],
															"id": 897,
															"name": "Block",
															"src": "11884:87:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 888
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "balanceOf",
																						"referencedDeclaration": 346,
																						"type": "function (address) view returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 898,
																							"name": "Identifier",
																							"src": "11999:5:0"
																						}
																					],
																					"id": 899,
																					"name": "MemberAccess",
																					"src": "11999:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 884,
																						"type": "address",
																						"value": "who"
																					},
																					"id": 900,
																					"name": "Identifier",
																					"src": "12015:3:0"
																				}
																			],
																			"id": 901,
																			"name": "FunctionCall",
																			"src": "11999:20:0"
																		}
																	],
																	"id": 902,
																	"name": "Return",
																	"src": "11992:27:0"
																}
															],
															"id": 903,
															"name": "Block",
															"src": "11977:54:0"
														}
													],
													"id": 904,
													"name": "IfStatement",
													"src": "11868:163:0"
												}
											],
											"id": 905,
											"name": "Block",
											"src": "11857:181:0"
										}
									],
									"id": 906,
									"name": "FunctionDefinition",
									"src": "11794:244:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "approve",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": 529,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 939,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 907,
															"name": "ElementaryTypeName",
															"src": "12140:7:0"
														}
													],
													"id": 908,
													"name": "VariableDeclaration",
													"src": "12140:16:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 939,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 909,
															"name": "ElementaryTypeName",
															"src": "12158:4:0"
														}
													],
													"id": 910,
													"name": "VariableDeclaration",
													"src": "12158:11:0"
												}
											],
											"id": 911,
											"name": "ParameterList",
											"src": "12139:31:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 917,
											"name": "ParameterList",
											"src": "12202:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 912,
													"name": "Identifier",
													"src": "12178:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 913,
															"name": "Literal",
															"src": "12194:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 914,
															"name": "Literal",
															"src": "12198:2:0"
														}
													],
													"id": 915,
													"name": "BinaryOperation",
													"src": "12194:6:0"
												}
											],
											"id": 916,
											"name": "ModifierInvocation",
											"src": "12178:23:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 918,
															"name": "Identifier",
															"src": "12217:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 917
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "approveByLegacy",
																						"referencedDeclaration": 748,
																						"type": "function (address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 749,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 919,
																									"name": "Identifier",
																									"src": "12251:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 920,
																									"name": "Identifier",
																									"src": "12273:15:0"
																								}
																							],
																							"id": 921,
																							"name": "FunctionCall",
																							"src": "12251:38:0"
																						}
																					],
																					"id": 922,
																					"name": "MemberAccess",
																					"src": "12251:54:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1145,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 923,
																							"name": "Identifier",
																							"src": "12306:3:0"
																						}
																					],
																					"id": 924,
																					"name": "MemberAccess",
																					"src": "12306:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 908,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 925,
																					"name": "Identifier",
																					"src": "12318:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 910,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 926,
																					"name": "Identifier",
																					"src": "12328:6:0"
																				}
																			],
																			"id": 927,
																			"name": "FunctionCall",
																			"src": "12251:84:0"
																		}
																	],
																	"id": 928,
																	"name": "Return",
																	"src": "12244:91:0"
																}
															],
															"id": 929,
															"name": "Block",
															"src": "12229:118:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 917
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "approve",
																						"referencedDeclaration": 529,
																						"type": "function (address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 930,
																							"name": "Identifier",
																							"src": "12375:5:0"
																						}
																					],
																					"id": 931,
																					"name": "MemberAccess",
																					"src": "12375:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 908,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 932,
																					"name": "Identifier",
																					"src": "12389:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 910,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 933,
																					"name": "Identifier",
																					"src": "12399:6:0"
																				}
																			],
																			"id": 934,
																			"name": "FunctionCall",
																			"src": "12375:31:0"
																		}
																	],
																	"id": 935,
																	"name": "Return",
																	"src": "12368:38:0"
																}
															],
															"id": 936,
															"name": "Block",
															"src": "12353:65:0"
														}
													],
													"id": 937,
													"name": "IfStatement",
													"src": "12213:205:0"
												}
											],
											"id": 938,
											"name": "Block",
											"src": "12202:223:0"
										}
									],
									"id": 939,
									"name": "FunctionDefinition",
									"src": "12123:302:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 1142,
										"stateMutability": "view",
										"superFunction": 545,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 967,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 940,
															"name": "ElementaryTypeName",
															"src": "12529:7:0"
														}
													],
													"id": 941,
													"name": "VariableDeclaration",
													"src": "12529:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 967,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 942,
															"name": "ElementaryTypeName",
															"src": "12545:7:0"
														}
													],
													"id": 943,
													"name": "VariableDeclaration",
													"src": "12545:16:0"
												}
											],
											"id": 944,
											"name": "ParameterList",
											"src": "12528:34:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "remaining",
														"scope": 967,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 945,
															"name": "ElementaryTypeName",
															"src": "12588:4:0"
														}
													],
													"id": 946,
													"name": "VariableDeclaration",
													"src": "12588:14:0"
												}
											],
											"id": 947,
											"name": "ParameterList",
											"src": "12587:16:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 948,
															"name": "Identifier",
															"src": "12619:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 947
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "allowance",
																						"referencedDeclaration": 545,
																						"type": "function (address,address) view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract StandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 546,
																										"type": "type(contract StandardToken)",
																										"value": "StandardToken"
																									},
																									"id": 949,
																									"name": "Identifier",
																									"src": "12653:13:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 950,
																									"name": "Identifier",
																									"src": "12667:15:0"
																								}
																							],
																							"id": 951,
																							"name": "FunctionCall",
																							"src": "12653:30:0"
																						}
																					],
																					"id": 952,
																					"name": "MemberAccess",
																					"src": "12653:40:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 941,
																						"type": "address",
																						"value": "_owner"
																					},
																					"id": 953,
																					"name": "Identifier",
																					"src": "12694:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 943,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 954,
																					"name": "Identifier",
																					"src": "12702:8:0"
																				}
																			],
																			"id": 955,
																			"name": "FunctionCall",
																			"src": "12653:58:0"
																		}
																	],
																	"id": 956,
																	"name": "Return",
																	"src": "12646:65:0"
																}
															],
															"id": 957,
															"name": "Block",
															"src": "12631:92:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 947
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "allowance",
																						"referencedDeclaration": 545,
																						"type": "function (address,address) view returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 958,
																							"name": "Identifier",
																							"src": "12751:5:0"
																						}
																					],
																					"id": 959,
																					"name": "MemberAccess",
																					"src": "12751:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 941,
																						"type": "address",
																						"value": "_owner"
																					},
																					"id": 960,
																					"name": "Identifier",
																					"src": "12767:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 943,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 961,
																					"name": "Identifier",
																					"src": "12775:8:0"
																				}
																			],
																			"id": 962,
																			"name": "FunctionCall",
																			"src": "12751:33:0"
																		}
																	],
																	"id": 963,
																	"name": "Return",
																	"src": "12744:40:0"
																}
															],
															"id": 964,
															"name": "Block",
															"src": "12729:67:0"
														}
													],
													"id": 965,
													"name": "IfStatement",
													"src": "12615:181:0"
												}
											],
											"id": 966,
											"name": "Block",
											"src": "12604:199:0"
										}
									],
									"id": 967,
									"name": "FunctionDefinition",
									"src": "12510:293:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "deprecate",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_upgradedAddress",
														"scope": 987,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 968,
															"name": "ElementaryTypeName",
															"src": "12888:7:0"
														}
													],
													"id": 969,
													"name": "VariableDeclaration",
													"src": "12888:24:0"
												}
											],
											"id": 970,
											"name": "ParameterList",
											"src": "12887:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 973,
											"name": "ParameterList",
											"src": "12931:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 971,
													"name": "Identifier",
													"src": "12921:9:0"
												}
											],
											"id": 972,
											"name": "ModifierInvocation",
											"src": "12921:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 765,
																		"type": "bool",
																		"value": "deprecated"
																	},
																	"id": 974,
																	"name": "Identifier",
																	"src": "12942:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 975,
																	"name": "Literal",
																	"src": "12955:4:0"
																}
															],
															"id": 976,
															"name": "Assignment",
															"src": "12942:17:0"
														}
													],
													"id": 977,
													"name": "ExpressionStatement",
													"src": "12942:17:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 763,
																		"type": "address",
																		"value": "upgradedAddress"
																	},
																	"id": 978,
																	"name": "Identifier",
																	"src": "12970:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 969,
																		"type": "address",
																		"value": "_upgradedAddress"
																	},
																	"id": 979,
																	"name": "Identifier",
																	"src": "12988:16:0"
																}
															],
															"id": 980,
															"name": "Assignment",
															"src": "12970:34:0"
														}
													],
													"id": 981,
													"name": "ExpressionStatement",
													"src": "12970:34:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1135,
																		"type": "function (address)",
																		"value": "Deprecate"
																	},
																	"id": 982,
																	"name": "Identifier",
																	"src": "13015:9:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 969,
																		"type": "address",
																		"value": "_upgradedAddress"
																	},
																	"id": 983,
																	"name": "Identifier",
																	"src": "13025:16:0"
																}
															],
															"id": 984,
															"name": "FunctionCall",
															"src": "13015:27:0"
														}
													],
													"id": 985,
													"name": "ExpressionStatement",
													"src": "13015:27:0"
												}
											],
											"id": 986,
											"name": "Block",
											"src": "12931:119:0"
										}
									],
									"id": 987,
									"name": "FunctionDefinition",
									"src": "12869:181:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "totalSupply",
										"payable": false,
										"scope": 1142,
										"stateMutability": "view",
										"superFunction": 146,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 988,
											"name": "ParameterList",
											"src": "13136:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1005,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 989,
															"name": "ElementaryTypeName",
															"src": "13164:4:0"
														}
													],
													"id": 990,
													"name": "VariableDeclaration",
													"src": "13164:4:0"
												}
											],
											"id": 991,
											"name": "ParameterList",
											"src": "13163:6:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 992,
															"name": "Identifier",
															"src": "13185:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 991
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"arguments": [
																					null
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							null
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "totalSupply",
																						"referencedDeclaration": 146,
																						"type": "function () view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract StandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 546,
																										"type": "type(contract StandardToken)",
																										"value": "StandardToken"
																									},
																									"id": 993,
																									"name": "Identifier",
																									"src": "13219:13:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 994,
																									"name": "Identifier",
																									"src": "13233:15:0"
																								}
																							],
																							"id": 995,
																							"name": "FunctionCall",
																							"src": "13219:30:0"
																						}
																					],
																					"id": 996,
																					"name": "MemberAccess",
																					"src": "13219:42:0"
																				}
																			],
																			"id": 997,
																			"name": "FunctionCall",
																			"src": "13219:44:0"
																		}
																	],
																	"id": 998,
																	"name": "Return",
																	"src": "13212:51:0"
																}
															],
															"id": 999,
															"name": "Block",
															"src": "13197:78:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 991
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 141,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 1000,
																			"name": "Identifier",
																			"src": "13303:12:0"
																		}
																	],
																	"id": 1001,
																	"name": "Return",
																	"src": "13296:19:0"
																}
															],
															"id": 1002,
															"name": "Block",
															"src": "13281:46:0"
														}
													],
													"id": 1003,
													"name": "IfStatement",
													"src": "13181:146:0"
												}
											],
											"id": 1004,
											"name": "Block",
											"src": "13170:164:0"
										}
									],
									"id": 1005,
									"name": "FunctionDefinition",
									"src": "13116:218:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "issue",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "amount",
														"scope": 1047,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1006,
															"name": "ElementaryTypeName",
															"src": "13513:4:0"
														}
													],
													"id": 1007,
													"name": "VariableDeclaration",
													"src": "13513:11:0"
												}
											],
											"id": 1008,
											"name": "ParameterList",
											"src": "13512:13:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1011,
											"name": "ParameterList",
											"src": "13543:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1009,
													"name": "Identifier",
													"src": "13533:9:0"
												}
											],
											"id": 1010,
											"name": "ModifierInvocation",
											"src": "13533:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1012,
																	"name": "Identifier",
																	"src": "13554:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 141,
																						"type": "uint256",
																						"value": "_totalSupply"
																					},
																					"id": 1013,
																					"name": "Identifier",
																					"src": "13562:12:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1007,
																						"type": "uint256",
																						"value": "amount"
																					},
																					"id": 1014,
																					"name": "Identifier",
																					"src": "13577:6:0"
																				}
																			],
																			"id": 1015,
																			"name": "BinaryOperation",
																			"src": "13562:21:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 141,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 1016,
																			"name": "Identifier",
																			"src": "13586:12:0"
																		}
																	],
																	"id": 1017,
																	"name": "BinaryOperation",
																	"src": "13562:36:0"
																}
															],
															"id": 1018,
															"name": "FunctionCall",
															"src": "13554:45:0"
														}
													],
													"id": 1019,
													"name": "ExpressionStatement",
													"src": "13554:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1020,
																	"name": "Identifier",
																	"src": "13610:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 1021,
																							"name": "Identifier",
																							"src": "13618:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 99,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 1022,
																							"name": "Identifier",
																							"src": "13627:5:0"
																						}
																					],
																					"id": 1023,
																					"name": "IndexAccess",
																					"src": "13618:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1007,
																						"type": "uint256",
																						"value": "amount"
																					},
																					"id": 1024,
																					"name": "Identifier",
																					"src": "13636:6:0"
																				}
																			],
																			"id": 1025,
																			"name": "BinaryOperation",
																			"src": "13618:24:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 216,
																						"type": "mapping(address => uint256)",
																						"value": "balances"
																					},
																					"id": 1026,
																					"name": "Identifier",
																					"src": "13645:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 1027,
																					"name": "Identifier",
																					"src": "13654:5:0"
																				}
																			],
																			"id": 1028,
																			"name": "IndexAccess",
																			"src": "13645:15:0"
																		}
																	],
																	"id": 1029,
																	"name": "BinaryOperation",
																	"src": "13618:42:0"
																}
															],
															"id": 1030,
															"name": "FunctionCall",
															"src": "13610:51:0"
														}
													],
													"id": 1031,
													"name": "ExpressionStatement",
													"src": "13610:51:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 1032,
																			"name": "Identifier",
																			"src": "13674:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 1033,
																			"name": "Identifier",
																			"src": "13683:5:0"
																		}
																	],
																	"id": 1034,
																	"name": "IndexAccess",
																	"src": "13674:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1007,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1035,
																	"name": "Identifier",
																	"src": "13693:6:0"
																}
															],
															"id": 1036,
															"name": "Assignment",
															"src": "13674:25:0"
														}
													],
													"id": 1037,
													"name": "ExpressionStatement",
													"src": "13674:25:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 1038,
																	"name": "Identifier",
																	"src": "13710:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1007,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1039,
																	"name": "Identifier",
																	"src": "13726:6:0"
																}
															],
															"id": 1040,
															"name": "Assignment",
															"src": "13710:22:0"
														}
													],
													"id": 1041,
													"name": "ExpressionStatement",
													"src": "13710:22:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1127,
																		"type": "function (uint256)",
																		"value": "Issue"
																	},
																	"id": 1042,
																	"name": "Identifier",
																	"src": "13743:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1007,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1043,
																	"name": "Identifier",
																	"src": "13749:6:0"
																}
															],
															"id": 1044,
															"name": "FunctionCall",
															"src": "13743:13:0"
														}
													],
													"id": 1045,
													"name": "ExpressionStatement",
													"src": "13743:13:0"
												}
											],
											"id": 1046,
											"name": "Block",
											"src": "13543:221:0"
										}
									],
									"id": 1047,
									"name": "FunctionDefinition",
									"src": "13498:266:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "redeem",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "amount",
														"scope": 1083,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1048,
															"name": "ElementaryTypeName",
															"src": "14011:4:0"
														}
													],
													"id": 1049,
													"name": "VariableDeclaration",
													"src": "14011:11:0"
												}
											],
											"id": 1050,
											"name": "ParameterList",
											"src": "14010:13:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1053,
											"name": "ParameterList",
											"src": "14041:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1051,
													"name": "Identifier",
													"src": "14031:9:0"
												}
											],
											"id": 1052,
											"name": "ModifierInvocation",
											"src": "14031:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1054,
																	"name": "Identifier",
																	"src": "14052:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 141,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 1055,
																			"name": "Identifier",
																			"src": "14060:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1049,
																				"type": "uint256",
																				"value": "amount"
																			},
																			"id": 1056,
																			"name": "Identifier",
																			"src": "14076:6:0"
																		}
																	],
																	"id": 1057,
																	"name": "BinaryOperation",
																	"src": "14060:22:0"
																}
															],
															"id": 1058,
															"name": "FunctionCall",
															"src": "14052:31:0"
														}
													],
													"id": 1059,
													"name": "ExpressionStatement",
													"src": "14052:31:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1060,
																	"name": "Identifier",
																	"src": "14094:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 216,
																						"type": "mapping(address => uint256)",
																						"value": "balances"
																					},
																					"id": 1061,
																					"name": "Identifier",
																					"src": "14102:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 1062,
																					"name": "Identifier",
																					"src": "14111:5:0"
																				}
																			],
																			"id": 1063,
																			"name": "IndexAccess",
																			"src": "14102:15:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1049,
																				"type": "uint256",
																				"value": "amount"
																			},
																			"id": 1064,
																			"name": "Identifier",
																			"src": "14121:6:0"
																		}
																	],
																	"id": 1065,
																	"name": "BinaryOperation",
																	"src": "14102:25:0"
																}
															],
															"id": 1066,
															"name": "FunctionCall",
															"src": "14094:34:0"
														}
													],
													"id": 1067,
													"name": "ExpressionStatement",
													"src": "14094:34:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 1068,
																	"name": "Identifier",
																	"src": "14141:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1049,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1069,
																	"name": "Identifier",
																	"src": "14157:6:0"
																}
															],
															"id": 1070,
															"name": "Assignment",
															"src": "14141:22:0"
														}
													],
													"id": 1071,
													"name": "ExpressionStatement",
													"src": "14141:22:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 1072,
																			"name": "Identifier",
																			"src": "14174:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 1073,
																			"name": "Identifier",
																			"src": "14183:5:0"
																		}
																	],
																	"id": 1074,
																	"name": "IndexAccess",
																	"src": "14174:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1049,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1075,
																	"name": "Identifier",
																	"src": "14193:6:0"
																}
															],
															"id": 1076,
															"name": "Assignment",
															"src": "14174:25:0"
														}
													],
													"id": 1077,
													"name": "ExpressionStatement",
													"src": "14174:25:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1131,
																		"type": "function (uint256)",
																		"value": "Redeem"
																	},
																	"id": 1078,
																	"name": "Identifier",
																	"src": "14210:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1049,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1079,
																	"name": "Identifier",
																	"src": "14217:6:0"
																}
															],
															"id": 1080,
															"name": "FunctionCall",
															"src": "14210:14:0"
														}
													],
													"id": 1081,
													"name": "ExpressionStatement",
													"src": "14210:14:0"
												}
											],
											"id": 1082,
											"name": "Block",
											"src": "14041:191:0"
										}
									],
									"id": 1083,
									"name": "FunctionDefinition",
									"src": "13995:237:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "setParams",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newBasisPoints",
														"scope": 1123,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1084,
															"name": "ElementaryTypeName",
															"src": "14259:4:0"
														}
													],
													"id": 1085,
													"name": "VariableDeclaration",
													"src": "14259:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "newMaxFee",
														"scope": 1123,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1086,
															"name": "ElementaryTypeName",
															"src": "14280:4:0"
														}
													],
													"id": 1087,
													"name": "VariableDeclaration",
													"src": "14280:14:0"
												}
											],
											"id": 1088,
											"name": "ParameterList",
											"src": "14258:37:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1091,
											"name": "ParameterList",
											"src": "14313:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1089,
													"name": "Identifier",
													"src": "14303:9:0"
												}
											],
											"id": 1090,
											"name": "ModifierInvocation",
											"src": "14303:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1092,
																	"name": "Identifier",
																	"src": "14413:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1085,
																				"type": "uint256",
																				"value": "newBasisPoints"
																			},
																			"id": 1093,
																			"name": "Identifier",
																			"src": "14421:14:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3230",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 20",
																				"value": "20"
																			},
																			"id": 1094,
																			"name": "Literal",
																			"src": "14438:2:0"
																		}
																	],
																	"id": 1095,
																	"name": "BinaryOperation",
																	"src": "14421:19:0"
																}
															],
															"id": 1096,
															"name": "FunctionCall",
															"src": "14413:28:0"
														}
													],
													"id": 1097,
													"name": "ExpressionStatement",
													"src": "14413:28:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1098,
																	"name": "Identifier",
																	"src": "14452:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1087,
																				"type": "uint256",
																				"value": "newMaxFee"
																			},
																			"id": 1099,
																			"name": "Identifier",
																			"src": "14460:9:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3530",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 50",
																				"value": "50"
																			},
																			"id": 1100,
																			"name": "Literal",
																			"src": "14472:2:0"
																		}
																	],
																	"id": 1101,
																	"name": "BinaryOperation",
																	"src": "14460:14:0"
																}
															],
															"id": 1102,
															"name": "FunctionCall",
															"src": "14452:23:0"
														}
													],
													"id": 1103,
													"name": "ExpressionStatement",
													"src": "14452:23:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 219,
																		"type": "uint256",
																		"value": "basisPointsRate"
																	},
																	"id": 1104,
																	"name": "Identifier",
																	"src": "14488:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1085,
																		"type": "uint256",
																		"value": "newBasisPoints"
																	},
																	"id": 1105,
																	"name": "Identifier",
																	"src": "14506:14:0"
																}
															],
															"id": 1106,
															"name": "Assignment",
															"src": "14488:32:0"
														}
													],
													"id": 1107,
													"name": "ExpressionStatement",
													"src": "14488:32:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 1108,
																	"name": "Identifier",
																	"src": "14531:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "mul",
																				"referencedDeclaration": 34,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1087,
																						"type": "uint256",
																						"value": "newMaxFee"
																					},
																					"id": 1109,
																					"name": "Identifier",
																					"src": "14544:9:0"
																				}
																			],
																			"id": 1110,
																			"name": "MemberAccess",
																			"src": "14544:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "**",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "3130",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 10",
																						"value": "10"
																					},
																					"id": 1111,
																					"name": "Literal",
																					"src": "14558:2:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 761,
																						"type": "uint256",
																						"value": "decimals"
																					},
																					"id": 1112,
																					"name": "Identifier",
																					"src": "14562:8:0"
																				}
																			],
																			"id": 1113,
																			"name": "BinaryOperation",
																			"src": "14558:12:0"
																		}
																	],
																	"id": 1114,
																	"name": "FunctionCall",
																	"src": "14544:27:0"
																}
															],
															"id": 1115,
															"name": "Assignment",
															"src": "14531:40:0"
														}
													],
													"id": 1116,
													"name": "ExpressionStatement",
													"src": "14531:40:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1141,
																		"type": "function (uint256,uint256)",
																		"value": "Params"
																	},
																	"id": 1117,
																	"name": "Identifier",
																	"src": "14584:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 219,
																		"type": "uint256",
																		"value": "basisPointsRate"
																	},
																	"id": 1118,
																	"name": "Identifier",
																	"src": "14591:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 1119,
																	"name": "Identifier",
																	"src": "14608:10:0"
																}
															],
															"id": 1120,
															"name": "FunctionCall",
															"src": "14584:35:0"
														}
													],
													"id": 1121,
													"name": "ExpressionStatement",
													"src": "14584:35:0"
												}
											],
											"id": 1122,
											"name": "Block",
											"src": "14313:314:0"
										}
									],
									"id": 1123,
									"name": "FunctionDefinition",
									"src": "14240:387:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Issue"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "amount",
														"scope": 1127,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1124,
															"name": "ElementaryTypeName",
															"src": "14688:4:0"
														}
													],
													"id": 1125,
													"name": "VariableDeclaration",
													"src": "14688:11:0"
												}
											],
											"id": 1126,
											"name": "ParameterList",
											"src": "14687:13:0"
										}
									],
									"id": 1127,
									"name": "EventDefinition",
									"src": "14676:25:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Redeem"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "amount",
														"scope": 1131,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1128,
															"name": "ElementaryTypeName",
															"src": "14762:4:0"
														}
													],
													"id": 1129,
													"name": "VariableDeclaration",
													"src": "14762:11:0"
												}
											],
											"id": 1130,
											"name": "ParameterList",
											"src": "14761:13:0"
										}
									],
									"id": 1131,
									"name": "EventDefinition",
									"src": "14749:26:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Deprecate"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "newAddress",
														"scope": 1135,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1132,
															"name": "ElementaryTypeName",
															"src": "14842:7:0"
														}
													],
													"id": 1133,
													"name": "VariableDeclaration",
													"src": "14842:18:0"
												}
											],
											"id": 1134,
											"name": "ParameterList",
											"src": "14841:20:0"
										}
									],
									"id": 1135,
									"name": "EventDefinition",
									"src": "14826:36:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Params"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "feeBasisPoints",
														"scope": 1141,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1136,
															"name": "ElementaryTypeName",
															"src": "14925:4:0"
														}
													],
													"id": 1137,
													"name": "VariableDeclaration",
													"src": "14925:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "maxFee",
														"scope": 1141,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1138,
															"name": "ElementaryTypeName",
															"src": "14946:4:0"
														}
													],
													"id": 1139,
													"name": "VariableDeclaration",
													"src": "14946:11:0"
												}
											],
											"id": 1140,
											"name": "ParameterList",
											"src": "14924:34:0"
										}
									],
									"id": 1141,
									"name": "EventDefinition",
									"src": "14912:47:0"
								}
							],
							"id": 1142,
							"name": "ContractDefinition",
							"src": "10045:4917:0"
						}
					],
					"id": 1143,
					"name": "SourceUnit",
					"src": "71:14891:0"
				}
			}
		}
	}
}